<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-1946.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>dao层和serivce层的作用和区别 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>dao层和serivce层的作用和区别</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="htmledit_views"> <p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:12px;text-align:left;background-color:rgb(255,255,255);"><span style="font-size:18px;">文章载来源：【http://blog.csdn.net/qq_34825926/article/details/69346084】</span></p> <ul style="margin-left:30px;color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:12px;text-align:left;background-color:rgb(255,255,255);"> <li style="margin-left:0px;"> <span style="font-size:18px;">访问数据库的传统方法&nbsp;</span><br /><span style="font-size:18px;">传统访问数据库的方法非常面向过程，分为以下几步&nbsp;</span><br /><span style="font-size:18px;">– 实例化connection&nbsp;</span><br /><span style="font-size:18px;">– 实例化statement&nbsp;</span><br /><span style="font-size:18px;">– 通过statement的参数sql语句访问数据库，返回数据进行处理</span></p> <div class="cnblogs_code" style="background-color:rgb(245,245,245);border:1px solid rgb(204,204,204);font-family:'Courier New';">    <span style="font-size:18px;line-height:1.5;"><img decoding="async" id="code_img_opened_f9d25ba0-bc2c-468f-b9c5-cbfd0e2ae107" class="code_img_opened" src="http://img.555519.xyz/uploads/20230223/27bf2374bc105e09b73ea33bdc701776.jpg" alt="dao层和serivce层的作用和区别"></span></p> <div id="cnblogs_code_open_f9d25ba0-bc2c-468f-b9c5-cbfd0e2ae107" class="cnblogs_code_hide"> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> <pre style="font-family:'Courier New';"><span style="font-size:18px;line-height:1.5;"><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 1</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.sql.Statement; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 2</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.util.Properties; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 3</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.io.FileInputStream; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 4</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.io.FileNotFoundException; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 5</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.io.IOException; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 6</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.sql.Connection; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 7</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.sql.DriverManager; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 8</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.sql.ResultSet; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;"> 9</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">import</span><span style="font-size:12px;line-height:1.5;"> java.sql.SQLException; </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">10</span>  <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">11</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">public</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">class</span><span style="font-size:12px;line-height:1.5;"> DBAccess { </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">12</span>  <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">13</span>     <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">public</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">static</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">void</span> main(String[] args) <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">throws</span><span style="font-size:12px;line-height:1.5;"> SQLException, FileNotFoundException, IOException </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">14</span> <span style="font-size:12px;line-height:1.5;">    { </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">15</span>         DBAccess access = <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">new</span><span style="font-size:12px;line-height:1.5;"> DBAccess(); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">16</span> <span style="font-size:12px;line-height:1.5;">        access.test(); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">17</span> <span style="font-size:12px;line-height:1.5;">    } </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">18</span>  <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">19</span>     <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">private</span> <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">void</span> test() <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">throws</span><span style="font-size:12px;line-height:1.5;"> SQLException, FileNotFoundException, IOException </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">20</span> <span style="font-size:12px;line-height:1.5;">    { </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">21</span>         String url = "jdbc:postgresql://localhost:5432/rylynn"<span style="font-size:12px;line-height:1.5;">;  </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">22</span>  <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">23</span>         Properties p = <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">new</span><span style="font-size:12px;line-height:1.5;"> Properties(); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">24</span>         p.load(<span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">new</span> FileInputStream("reg.txt"<span style="font-size:12px;line-height:1.5;">)); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">25</span>  <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">26</span>         Connection connection = DriverManager.getConnection(url,p);       <span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">//</span><span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">建立connection</span> <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">27</span>         Statement statement = connection.createStatement();       <span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">//</span><span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">建立satatement</span> <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">28</span>         statement.execute("insert into abo values((001),'hnb')");       <span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">//</span><span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">执行sql语句</span> <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">29</span>  <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">30</span>         ResultSet resultSet = statement.executeQuery("select number from abo where number < 2"<span style="font-size:12px;line-height:1.5;">); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">31</span>         <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">while</span><span style="font-size:12px;line-height:1.5;">(resultSet.next()) </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">32</span> <span style="font-size:12px;line-height:1.5;">        { </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">33</span>             <span style="color:rgb(0,0,255);font-size:12px;line-height:1.5;">int</span> id = resultSet.getInt(1<span style="font-size:12px;line-height:1.5;">); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">34</span>     <span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">//</span><span style="color:rgb(0,128,0);font-size:12px;line-height:1.5;">      String name = resultSet.getString(1);</span> <span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">35</span>             System.out.println("ID:" +<span style="font-size:12px;line-height:1.5;"> id); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">36</span> <span style="font-size:12px;line-height:1.5;">        } </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">37</span> <span style="font-size:12px;line-height:1.5;">        statement.close(); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">38</span> <span style="font-size:12px;line-height:1.5;">        connection.close(); </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">39</span> <span style="font-size:12px;line-height:1.5;">    } </span><span style="color:rgb(0,128,128);font-size:12px;line-height:1.5;">40</span> }    </span></pre> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> </p></div> </p></div> <p><span style="font-size:18px;">传统数据库访问模式缺点显而易见：&nbsp;</span><br /><span style="font-size:18px;">一就是各个模块间的耦合太紧，statement要依赖connection，connection还依赖于数据库的种类。&nbsp;</span><br /><span style="font-size:18px;">二就是如果我改变的数据库的种类，或者要提供不同的数据库服务，那么我就要提供大量的重复代码。</span></p> </li> <li style="margin-left:0px;"><span style="font-size:18px;">dao层：dao层叫数据访问层，全称为data access object，属于一种比较底层，比较基础的操作，具体到对于某个表、某个实体的增删改查</span></li> <li style="margin-left:0px;"> <span style="font-size:18px;">service层：service层叫服务层，被称为服务，肯定是相比之下比较高层次的一层结构，相当于将几种操作封装起来，至于为什么service层要使用接口来定义有以下几点好处：&nbsp;<br />service实现类：也顾名思义，service实现类实现了service接口，进行具体的业务操作。</span></p> <ul style="margin-left:30px;"> <li style="margin-left:0px;list-style:circle;"><span style="font-size:18px;">在java中接口是多继承的，而类是单继承的，如果你需要一个类实现多个service，你用接口可以实现，用类定义service就没那么灵活</span></li> <li style="margin-left:0px;list-style:circle;"><span style="font-size:18px;">要提供不同的数据库的服务时，我们只需要面对接口用不同的类实现即可，而不用重复地定义类</span></li> <li style="margin-left:0px;list-style:circle;"><span style="font-size:18px;">编程规范问题，接口化的编程为的就是将实现封装起来，然调用者只关心接口不关心实现，也就是“高内聚，低耦合”的思想。</span></li> </ul> </li> <li style="margin-left:0px;"> <span style="font-size:18px;">以对于user的操作为例进行说明：&nbsp;</span><br /><span style="font-size:18px;">userdao：</span> </li> <li style="margin-left:0px;"> <div class="cnblogs_code" style="background-color:rgb(245,245,245);border:1px solid rgb(204,204,204);font-family:'Courier New';">    <img decoding="async" id="code_img_opened_0f10137b-4a6b-460c-b867-696f942ffc48" class="code_img_opened" src="http://img.555519.xyz/uploads/20230223/27bf2374bc105e09b73ea33bdc701776.jpg" alt="dao层和serivce层的作用和区别"></p> <div id="cnblogs_code_open_0f10137b-4a6b-460c-b867-696f942ffc48" class="cnblogs_code_hide"> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> <pre style="font-family:'Courier New';"><span style="color:rgb(0,128,128);line-height:1.5;"> 1</span> <span style="color:rgb(0,0,255);line-height:1.5;">public</span> <span style="color:rgb(0,0,255);line-height:1.5;">interface</span><span style="line-height:1.5;"> UserDao { </span><span style="color:rgb(0,128,128);line-height:1.5;"> 2</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 3</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> List<User><span style="line-height:1.5;"> findAll(); </span><span style="color:rgb(0,128,128);line-height:1.5;"> 4</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 5</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span><span style="line-height:1.5;"> User findById(String id); </span><span style="color:rgb(0,128,128);line-height:1.5;"> 6</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 7</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> <span style="color:rgb(0,0,255);line-height:1.5;">void</span><span style="line-height:1.5;"> update(User user); </span><span style="color:rgb(0,128,128);line-height:1.5;"> 8</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 9</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> <span style="color:rgb(0,0,255);line-height:1.5;">void</span><span style="line-height:1.5;"> add(User user); </span><span style="color:rgb(0,128,128);line-height:1.5;">10</span>  <span style="color:rgb(0,128,128);line-height:1.5;">11</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> <span style="color:rgb(0,0,255);line-height:1.5;">void</span><span style="line-height:1.5;"> delete(String id); </span><span style="color:rgb(0,128,128);line-height:1.5;">12</span>  <span style="color:rgb(0,128,128);line-height:1.5;">13</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> User findByIdAndPassword(@Param("id") String username, @Param("password"<span style="line-height:1.5;">) String password); </span><span style="color:rgb(0,128,128);line-height:1.5;">14</span>  <span style="color:rgb(0,128,128);line-height:1.5;">15</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> <span style="color:rgb(0,0,255);line-height:1.5;">void</span> updatePassword(@Param("userId") String id, @Param("password"<span style="line-height:1.5;">) String password); </span><span style="color:rgb(0,128,128);line-height:1.5;">16</span>  <span style="color:rgb(0,128,128);line-height:1.5;">17</span> <span style="line-height:1.5;">    User findByUsername(String username); </span><span style="color:rgb(0,128,128);line-height:1.5;">18</span> }</pre> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> </p></div> </p></div> <p><span style="font-size:18px;">在接口中对方法进行了定义，在UserDao.xml中给出了sql语句实现&nbsp;</span><br /><span style="font-size:18px;">在UserDao中，就对user这个实体的增删补查各类基本的操作进行了声明，并用mybatis框架进行实现。</span></p> <p><span style="font-size:18px;">下面给出部分UserDao.xml的代码</span></p> </li> <li style="margin-left:0px;"> <div class="cnblogs_code" style="background-color:rgb(245,245,245);border:1px solid rgb(204,204,204);font-family:'Courier New';">    <img decoding="async" id="code_img_opened_10938d5b-ebac-482e-a880-1b6eba043484" class="code_img_opened" src="http://img.555519.xyz/uploads/20230223/27bf2374bc105e09b73ea33bdc701776.jpg" alt="dao层和serivce层的作用和区别"></p> <div id="cnblogs_code_open_10938d5b-ebac-482e-a880-1b6eba043484" class="cnblogs_code_hide"> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> <pre style="font-family:'Courier New';"><span style="color:rgb(0,128,128);line-height:1.5;"> 1</span> <span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">select </span><span style="color:rgb(255,0,0);line-height:1.5;">id</span><span style="color:rgb(0,0,255);line-height:1.5;">="findAll"</span><span style="color:rgb(255,0,0);line-height:1.5;"> resultMap</span><span style="color:rgb(0,0,255);line-height:1.5;">="user_map"</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;"> 2</span> <span style="line-height:1.5;">        SELECT * FROM user WHERE user_id != 'admin' </span><span style="color:rgb(0,128,128);line-height:1.5;"> 3</span>     <span style="color:rgb(0,0,255);line-height:1.5;"></</span><span style="color:rgb(128,0,0);line-height:1.5;">select</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;"> 4</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 5</span>     <span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">select </span><span style="color:rgb(255,0,0);line-height:1.5;">id</span><span style="color:rgb(0,0,255);line-height:1.5;">="findById"</span><span style="color:rgb(255,0,0);line-height:1.5;"> parameterType</span><span style="color:rgb(0,0,255);line-height:1.5;">="String"</span><span style="color:rgb(255,0,0);line-height:1.5;"> resultMap</span><span style="color:rgb(0,0,255);line-height:1.5;">="user_map"</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;"> 6</span> <span style="line-height:1.5;">        SELECT * FROM user WHERE user_id = #{value} </span><span style="color:rgb(0,128,128);line-height:1.5;"> 7</span>     <span style="color:rgb(0,0,255);line-height:1.5;"></</span><span style="color:rgb(128,0,0);line-height:1.5;">select</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;"> 8</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 9</span>     <span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">update </span><span style="color:rgb(255,0,0);line-height:1.5;">id</span><span style="color:rgb(0,0,255);line-height:1.5;">="update"</span><span style="color:rgb(255,0,0);line-height:1.5;"> parameterType</span><span style="color:rgb(0,0,255);line-height:1.5;">="User"</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">10</span> <span style="line-height:1.5;">        UPDATE user SET password = #{password} ,authority = #{authority} WHERE user_id = #{userId} </span><span style="color:rgb(0,128,128);line-height:1.5;">11</span>     <span style="color:rgb(0,0,255);line-height:1.5;"></</span><span style="color:rgb(128,0,0);line-height:1.5;">update</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">12</span>  <span style="color:rgb(0,128,128);line-height:1.5;">13</span>     <span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">update </span><span style="color:rgb(255,0,0);line-height:1.5;">id</span><span style="color:rgb(0,0,255);line-height:1.5;">="updatePassword"</span><span style="color:rgb(255,0,0);line-height:1.5;"> parameterType</span><span style="color:rgb(0,0,255);line-height:1.5;">="map"</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">14</span> <span style="line-height:1.5;">        UPDATE user SET password = #{password} WHERE user_id = #{userId} </span><span style="color:rgb(0,128,128);line-height:1.5;">15</span>     <span style="color:rgb(0,0,255);line-height:1.5;"></</span><span style="color:rgb(128,0,0);line-height:1.5;">update</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">16</span>  <span style="color:rgb(0,128,128);line-height:1.5;">17</span>     <span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">insert </span><span style="color:rgb(255,0,0);line-height:1.5;">id</span><span style="color:rgb(0,0,255);line-height:1.5;">="add"</span><span style="color:rgb(255,0,0);line-height:1.5;"> parameterType</span><span style="color:rgb(0,0,255);line-height:1.5;">="User"</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">18</span> <span style="line-height:1.5;">        INSERT INTO user(user_id,password,salt,role_ids,locked) VALUES(#{userId},#{password},#{salt},#{roleIdsStr},#{locked}) </span><span style="color:rgb(0,128,128);line-height:1.5;">19</span>     <span style="color:rgb(0,0,255);line-height:1.5;"></</span><span style="color:rgb(128,0,0);line-height:1.5;">insert</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">20</span>  <span style="color:rgb(0,128,128);line-height:1.5;">21</span>     <span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">select </span><span style="color:rgb(255,0,0);line-height:1.5;">id</span><span style="color:rgb(0,0,255);line-height:1.5;">="findByIdAndPassword"</span><span style="color:rgb(255,0,0);line-height:1.5;"> parameterType</span><span style="color:rgb(0,0,255);line-height:1.5;">="map"</span><span style="color:rgb(255,0,0);line-height:1.5;"> resultMap</span><span style="color:rgb(0,0,255);line-height:1.5;">="user_map"</span><span style="color:rgb(0,0,255);line-height:1.5;">></span> <span style="color:rgb(0,128,128);line-height:1.5;">22</span> <span style="line-height:1.5;">        SELECT * FROM user WHERE user_id = #{id} AND password = #{password} </span><span style="color:rgb(0,128,128);line-height:1.5;">23</span>     <span style="color:rgb(0,0,255);line-height:1.5;"></</span><span style="color:rgb(128,0,0);line-height:1.5;">select</span><span style="color:rgb(0,0,255);line-height:1.5;">></span></pre> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> </p></div> </p></div> <p><span style="font-size:18px;">下面来看看service层的代码</span></p> </li> <li style="margin-left:0px;"> <div class="cnblogs_code" style="background-color:rgb(245,245,245);border:1px solid rgb(204,204,204);font-family:'Courier New';">    <img decoding="async" id="code_img_opened_466c97d2-80a0-4937-99e1-e716ded71bd4" class="code_img_opened" src="http://img.555519.xyz/uploads/20230223/27bf2374bc105e09b73ea33bdc701776.jpg" alt="dao层和serivce层的作用和区别"></p> <div id="cnblogs_code_open_466c97d2-80a0-4937-99e1-e716ded71bd4" class="cnblogs_code_hide"> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> <pre style="font-family:'Courier New';"><span style="color:rgb(0,128,128);line-height:1.5;"> 1</span> <span style="line-height:1.5;">import com.giit.www.entity.User; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 2</span> <span style="line-height:1.5;">import com.giit.www.entity.custom.UserVo; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 3</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 4</span> <span style="line-height:1.5;">import java.lang.reflect.InvocationTargetException; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 5</span> <span style="line-height:1.5;">import java.util.List; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 6</span> <span style="line-height:1.5;">import java.util.Set; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 7</span>  <span style="color:rgb(0,128,128);line-height:1.5;"> 8</span> <span style="line-height:1.5;">/** </span><span style="color:rgb(0,128,128);line-height:1.5;"> 9</span> <span style="line-height:1.5;"> * Created by c0de8ug on 16-2-9. </span><span style="color:rgb(0,128,128);line-height:1.5;">10</span> <span style="line-height:1.5;"> */ </span><span style="color:rgb(0,128,128);line-height:1.5;">11</span> <span style="line-height:1.5;">public interface UserBiz { </span><span style="color:rgb(0,128,128);line-height:1.5;">12</span>     public List<span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">UserVo</span><span style="color:rgb(0,0,255);line-height:1.5;">></span><span style="line-height:1.5;"> findAll() throws InvocationTargetException, IllegalAccessException; </span><span style="color:rgb(0,128,128);line-height:1.5;">13</span>  <span style="color:rgb(0,128,128);line-height:1.5;">14</span> <span style="line-height:1.5;">    public User findById(String id); </span><span style="color:rgb(0,128,128);line-height:1.5;">15</span>  <span style="color:rgb(0,128,128);line-height:1.5;">16</span> <span style="line-height:1.5;">    public void update(User user); </span><span style="color:rgb(0,128,128);line-height:1.5;">17</span>  <span style="color:rgb(0,128,128);line-height:1.5;">18</span> <span style="line-height:1.5;">    public void add(User user); </span><span style="color:rgb(0,128,128);line-height:1.5;">19</span>  <span style="color:rgb(0,128,128);line-height:1.5;">20</span> <span style="line-height:1.5;">    public void delete(String id); </span><span style="color:rgb(0,128,128);line-height:1.5;">21</span>  <span style="color:rgb(0,128,128);line-height:1.5;">22</span> <span style="line-height:1.5;">    public void changePassword(String userId, String newPassword); </span><span style="color:rgb(0,128,128);line-height:1.5;">23</span>  <span style="color:rgb(0,128,128);line-height:1.5;">24</span>  <span style="color:rgb(0,128,128);line-height:1.5;">25</span> <span style="line-height:1.5;">    public User findByUsername(String username); </span><span style="color:rgb(0,128,128);line-height:1.5;">26</span>  <span style="color:rgb(0,128,128);line-height:1.5;">27</span>     public Set<span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">String</span><span style="color:rgb(0,0,255);line-height:1.5;">></span><span style="line-height:1.5;"> findRoles(String username); </span><span style="color:rgb(0,128,128);line-height:1.5;">28</span>  <span style="color:rgb(0,128,128);line-height:1.5;">29</span>     public Set<span style="color:rgb(0,0,255);line-height:1.5;"><</span><span style="color:rgb(128,0,0);line-height:1.5;">String</span><span style="color:rgb(0,0,255);line-height:1.5;">></span><span style="line-height:1.5;"> findPermissions(String username); </span><span style="color:rgb(0,128,128);line-height:1.5;">30</span> }</pre> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> </p></div> </p></div> <p><span style="font-size:18px;">&nbsp; &nbsp; &nbsp;显然，service层里面的方法相较于dao层中的方法进行了一层包装，例如通过id查找用户，通过用户名查找用户，是在基础的操作上又增加了一层包装的，实现的是相对高级的操作。最后将这些操作在serviceimpl类中实现，代码比较多，这里还是只给出了部分代码。</span></p> </li> <li style="margin-left:0px;"> <div class="cnblogs_code" style="background-color:rgb(245,245,245);border:1px solid rgb(204,204,204);font-family:'Courier New';">    <img decoding="async" id="code_img_opened_c9233f26-4f08-4712-8f16-30bec47f40bf" class="code_img_opened" src="http://img.555519.xyz/uploads/20230223/27bf2374bc105e09b73ea33bdc701776.jpg" alt="dao层和serivce层的作用和区别"></p> <div id="cnblogs_code_open_c9233f26-4f08-4712-8f16-30bec47f40bf" class="cnblogs_code_hide"> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> <pre style="font-family:'Courier New';"><span style="color:rgb(0,128,128);line-height:1.5;"> 1</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.college.dao.StaffDao; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 2</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.entity.Role; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 3</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.entity.Staff; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 4</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.entity.User; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 5</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.entity.custom.UserVo; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 6</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.system.dao.RoleDao; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 7</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.system.dao.UserDao; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 8</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.system.service.RoleBiz; </span><span style="color:rgb(0,128,128);line-height:1.5;"> 9</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.system.service.UserBiz; </span><span style="color:rgb(0,128,128);line-height:1.5;">10</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> com.giit.www.util.PasswordHelper; </span><span style="color:rgb(0,128,128);line-height:1.5;">11</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> org.apache.commons.beanutils.BeanUtils; </span><span style="color:rgb(0,128,128);line-height:1.5;">12</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> org.springframework.stereotype.Service; </span><span style="color:rgb(0,128,128);line-height:1.5;">13</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> org.springframework.transaction.annotation.Transactional; </span><span style="color:rgb(0,128,128);line-height:1.5;">14</span>  <span style="color:rgb(0,128,128);line-height:1.5;">15</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> javax.annotation.Resource; </span><span style="color:rgb(0,128,128);line-height:1.5;">16</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span><span style="line-height:1.5;"> java.lang.reflect.InvocationTargetException; </span><span style="color:rgb(0,128,128);line-height:1.5;">17</span> <span style="color:rgb(0,0,255);line-height:1.5;">import</span> java.util.*<span style="line-height:1.5;">; </span><span style="color:rgb(0,128,128);line-height:1.5;">18</span>  <span style="color:rgb(0,128,128);line-height:1.5;">19</span> <span style="color:rgb(0,128,0);line-height:1.5;">/**</span> <span style="color:rgb(0,128,128);line-height:1.5;">20</span> <span style="color:rgb(0,128,0);line-height:1.5;"> * Created by c0de8ug on 16-2-9. </span><span style="color:rgb(0,128,128);line-height:1.5;">21</span>  <span style="color:rgb(0,128,0);line-height:1.5;">*/</span> <span style="color:rgb(0,128,128);line-height:1.5;">22</span>  <span style="color:rgb(0,128,128);line-height:1.5;">23</span> <span style="line-height:1.5;">@Service </span><span style="color:rgb(0,128,128);line-height:1.5;">24</span> <span style="color:rgb(0,0,255);line-height:1.5;">public</span> <span style="color:rgb(0,0,255);line-height:1.5;">class</span> UserBizImpl <span style="color:rgb(0,0,255);line-height:1.5;">implements</span><span style="line-height:1.5;"> UserBiz { </span><span style="color:rgb(0,128,128);line-height:1.5;">25</span>  <span style="color:rgb(0,128,128);line-height:1.5;">26</span> <span style="line-height:1.5;">    @Resource </span><span style="color:rgb(0,128,128);line-height:1.5;">27</span> <span style="line-height:1.5;">    UserDao userDao; </span><span style="color:rgb(0,128,128);line-height:1.5;">28</span>  <span style="color:rgb(0,128,128);line-height:1.5;">29</span> <span style="line-height:1.5;">    @Resource </span><span style="color:rgb(0,128,128);line-height:1.5;">30</span> <span style="line-height:1.5;">    RoleDao roleDao; </span><span style="color:rgb(0,128,128);line-height:1.5;">31</span>  <span style="color:rgb(0,128,128);line-height:1.5;">32</span> <span style="line-height:1.5;">    @Resource </span><span style="color:rgb(0,128,128);line-height:1.5;">33</span> <span style="line-height:1.5;">    StaffDao staffDao; </span><span style="color:rgb(0,128,128);line-height:1.5;">34</span>  <span style="color:rgb(0,128,128);line-height:1.5;">35</span> <span style="line-height:1.5;">    @Resource </span><span style="color:rgb(0,128,128);line-height:1.5;">36</span>     <span style="color:rgb(0,0,255);line-height:1.5;">private</span><span style="line-height:1.5;"> PasswordHelper passwordHelper; </span><span style="color:rgb(0,128,128);line-height:1.5;">37</span>     @Resource(name = "roleBizImpl"<span style="line-height:1.5;">) </span><span style="color:rgb(0,128,128);line-height:1.5;">38</span>     <span style="color:rgb(0,0,255);line-height:1.5;">private</span><span style="line-height:1.5;"> RoleBiz roleBiz; </span><span style="color:rgb(0,128,128);line-height:1.5;">39</span>  <span style="color:rgb(0,128,128);line-height:1.5;">40</span> <span style="line-height:1.5;">    @Override </span><span style="color:rgb(0,128,128);line-height:1.5;">41</span>     <span style="color:rgb(0,0,255);line-height:1.5;">public</span> List<UserVo> findAll() <span style="color:rgb(0,0,255);line-height:1.5;">throws</span><span style="line-height:1.5;"> InvocationTargetException, IllegalAccessException { </span><span style="color:rgb(0,128,128);line-height:1.5;">42</span>         List<UserVo> userVoList = <span style="color:rgb(0,0,255);line-height:1.5;">new</span> ArrayList<><span style="line-height:1.5;">(); </span><span style="color:rgb(0,128,128);line-height:1.5;">43</span>         List userList =<span style="line-height:1.5;"> userDao.findAll(); </span><span style="color:rgb(0,128,128);line-height:1.5;">44</span>  <span style="color:rgb(0,128,128);line-height:1.5;">45</span>  <span style="color:rgb(0,128,128);line-height:1.5;">46</span>         Iterator iterator =<span style="line-height:1.5;"> userList.iterator(); </span><span style="color:rgb(0,128,128);line-height:1.5;">47</span>  <span style="color:rgb(0,128,128);line-height:1.5;">48</span>         <span style="color:rgb(0,0,255);line-height:1.5;">while</span><span style="line-height:1.5;"> (iterator.hasNext()) { </span><span style="color:rgb(0,128,128);line-height:1.5;">49</span>             StringBuilder s = <span style="color:rgb(0,0,255);line-height:1.5;">new</span><span style="line-height:1.5;"> StringBuilder(); </span><span style="color:rgb(0,128,128);line-height:1.5;">50</span>             User user =<span style="line-height:1.5;"> (User) iterator.next(); </span><span style="color:rgb(0,128,128);line-height:1.5;">51</span>             List<Long> roleIds =<span style="line-height:1.5;"> user.getRoleIds(); </span><span style="color:rgb(0,128,128);line-height:1.5;">52</span>  <span style="color:rgb(0,128,128);line-height:1.5;">53</span>             UserVo userVo = <span style="color:rgb(0,0,255);line-height:1.5;">new</span><span style="line-height:1.5;"> UserVo(); </span><span style="color:rgb(0,128,128);line-height:1.5;">54</span> <span style="line-height:1.5;">            BeanUtils.copyProperties(userVo, user); </span><span style="color:rgb(0,128,128);line-height:1.5;">55</span>  <span style="color:rgb(0,128,128);line-height:1.5;">56</span>             <span style="color:rgb(0,0,255);line-height:1.5;">if</span> (roleIds != <span style="color:rgb(0,0,255);line-height:1.5;">null</span><span style="line-height:1.5;">) { </span><span style="color:rgb(0,128,128);line-height:1.5;">57</span>                 <span style="color:rgb(0,0,255);line-height:1.5;">int</span> i = 0<span style="line-height:1.5;">; </span><span style="color:rgb(0,128,128);line-height:1.5;">58</span>                 <span style="color:rgb(0,0,255);line-height:1.5;">int</span> size =<span style="line-height:1.5;"> roleIds.size(); </span><span style="color:rgb(0,128,128);line-height:1.5;">59</span>                 <span style="color:rgb(0,0,255);line-height:1.5;">for</span> (; i < size - 1; i++<span style="line-height:1.5;">) { </span><span style="color:rgb(0,128,128);line-height:1.5;">60</span>                     Role role =<span style="line-height:1.5;"> roleDao.findOne(roleIds.get(i)); </span><span style="color:rgb(0,128,128);line-height:1.5;">61</span>  <span style="color:rgb(0,128,128);line-height:1.5;">62</span> <span style="line-height:1.5;">                    s.append(role.getDescription()); </span><span style="color:rgb(0,128,128);line-height:1.5;">63</span>                     s.append(","<span style="line-height:1.5;">); </span><span style="color:rgb(0,128,128);line-height:1.5;">64</span> <span style="line-height:1.5;">                } </span><span style="color:rgb(0,128,128);line-height:1.5;">65</span>                 Role role =<span style="line-height:1.5;"> roleDao.findOne(roleIds.get(i)); </span><span style="color:rgb(0,128,128);line-height:1.5;">66</span> <span style="line-height:1.5;">                s.append(role.getDescription()); </span><span style="color:rgb(0,128,128);line-height:1.5;">67</span> <span style="line-height:1.5;">                userVo.setRoleIdsStr(s.toString()); </span><span style="color:rgb(0,128,128);line-height:1.5;">68</span> <span style="line-height:1.5;">            } </span><span style="color:rgb(0,128,128);line-height:1.5;">69</span>  <span style="color:rgb(0,128,128);line-height:1.5;">70</span>  <span style="color:rgb(0,128,128);line-height:1.5;">71</span> <span style="line-height:1.5;">            userVoList.add(userVo); </span><span style="color:rgb(0,128,128);line-height:1.5;">72</span>  <span style="color:rgb(0,128,128);line-height:1.5;">73</span> <span style="line-height:1.5;">        } </span><span style="color:rgb(0,128,128);line-height:1.5;">74</span>  <span style="color:rgb(0,128,128);line-height:1.5;">75</span>         <span style="color:rgb(0,0,255);line-height:1.5;">return</span><span style="line-height:1.5;"> userVoList; </span><span style="color:rgb(0,128,128);line-height:1.5;">76</span>     }</pre> <div class="cnblogs_code_toolbar">      <span class="cnblogs_code_copy" style="line-height:1.5;"><img decoding="async" src="http://img.555519.xyz/uploads/20230223/d8f4c6cf15b054451413d2e5d736e734.jpg" alt="dao层和serivce层的作用和区别"></span>     </div> </p></div> </p></div> <p>&nbsp; &nbsp;&nbsp;<span style="font-size:18px;">&nbsp;由此看到，这样进行分层，访问数据库和进行service之间的分工明确，如果我需要对service的需求修改，无需改变dao层的代码，只要在实现上改变即可，如果我有访问数据库的新需求，那我也只要在dao层的代码中增添即可。</span></p> </li> </ul> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1945.htm">Interlaken协议介绍</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1959.htm">实战代码（十）：Springboot RestTemplate连接池</a></p>
                                                                    </div>

                                                                <div class="panel panel-default mt-5">
                                    <div class="panel-heading">
                                        <h3 class="m-0">推荐文章</h3>
                                    </div>
                                    <div class="panel-body">
                                        <ul class="p-0 x-0">
                                                                                        <li class="py-2"><a href="/html/category/article-1358.htm">Logback及其MDC功能详解</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-993.htm">骨架屏技术讲解以及如何在Vue中实现骨架屏</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-933.htm">MySQL CONCAT()函数如何使用通配符</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-895.htm">Spring boot aop之后访问接口所有bean注入为空问题</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-855.htm">python多线程详解（超详细）</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-840.htm">Java 18 新增@snipppet标签，注释中写样例代码更舒适了！_在线工具</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-838.htm">Java NIO 文件通道 FileChannel 用法_在线工具</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-815.htm">OpenSSL编译过程和报错解决</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-814.htm">mysql5.7版本的窗口函数实现</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-802.htm">Spring Boot移除内嵌Tomcat，使用非web方式启动</a></li>
                                                                                    </ul>
                                    </div>
                                </div>
                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-8000.htm" title="新手小白怎么开宠物店如何做宣传活动（开宠物店怎么才能赚钱）">新手小白怎么开宠物店如何做宣传活动（开宠物店怎么才能赚钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7357.htm" title="宠物店月收入多少（宠物店月收入多少钱）">宠物店月收入多少（宠物店月收入多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-8276.htm" title="动物疫苗市场的现状和趋势（2021动物疫苗行业前景）">动物疫苗市场的现状和趋势（2021动物疫苗行业前景）</a></li>
                        <li class="py-2"><a href="/html/category/article-7035.htm" title="有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)">有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)</a></li>
                        <li class="py-2"><a href="/html/category/article-7540.htm" title="吧台凳哪个品牌好(吧台椅十大品牌)">吧台凳哪个品牌好(吧台椅十大品牌)</a></li>
                        <li class="py-2"><a href="/html/category/article-7172.htm" title="金福珠（举重妖精金福珠图片）">金福珠（举重妖精金福珠图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-7126.htm" title="开一家宠物店需要投资多少（开一家宠物店投资多少钱）">开一家宠物店需要投资多少（开一家宠物店投资多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-8092.htm" title="宠物主粮品牌 宠物主粮品牌有哪些">宠物主粮品牌 宠物主粮品牌有哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-7587.htm" title="厦门同安宠物领养中心地址查询官网（厦门同安宠物领养中心地址查询官网电话）">厦门同安宠物领养中心地址查询官网（厦门同安宠物领养中心地址查询官网电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-7770.htm" title="动物防疫站几点上班几点下班（青岛动物防疫站南京路几点上班）">动物防疫站几点上班几点下班（青岛动物防疫站南京路几点上班）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>