<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-848.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>MySQL使用索引优化性能_Mysql - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>MySQL使用索引优化性能_Mysql</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">1.索引问题</a></li> <li><a href="#_label1" rel="nofollow">2.索引的存储分类</a></li> <li><a href="#_label2" rel="nofollow">3.如何使用索引</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_2_0" rel="nofollow">3.1使用索引</a></li> <li><a href="#_lab2_2_1" rel="nofollow">3.2存在索引但不使用索引</a></li> </ul> <li><a href="#_label3" rel="nofollow">4.查看索引使用情况</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label4" rel="nofollow">5.两个简单实用的优化方法</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_4_2" rel="nofollow">5.1定期分析表和检查表</a></li> <li><a href="#_lab2_4_3" rel="nofollow">5.2定期优化表</a></li> </ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>1.索引问题</h2> <p>索引是数据库优化中最常用也是最重要的手段之一，通过索引通常可以帮助用户解决大多数 的SQL性能问题。本章节将对MySQL中的索引的分类、存储、使用方法做详细的介绍。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>2.索引的存储分类</h2> <p>MyISAM存储引擎的表数据和索引是自动分开存储的，各自是独立的一个文件；InnoDB存储引擎的表数据和索引是存储在同一个表空间里面，但可以有多个文件组成。MySQL中索引的存储类型目前只有两种（BTREE和HASH），具体和表的存储引擎相关：MyISAM和InnoDB存储引擎都只支持BTREE索引；MEMORY/HEAP存储引擎可以支持HASH和BTREE索引。MySQL目前不支持函数索引，但是能对列的前面某一部分进索引，例如上章节库存表goods_stock.LotNO批次字段，可以只取Model的前4个字符进行索引，这个特性可以大大缩小索引文件的大小，我们在设计表结构的时候也可以对文本列根据此特性进行灵活设计。下面是创建前缀索引的一个例子：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE LotNO LIKE '2021%';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/61cd50576fd0837bd43b86ac424b7bbe.jpg"></p> <div class="ay1code"> <pre class="brush:sql;">-- 创建前缀索引  CREATE INDEX idx_stock_2 ON goods_stock (LotNO(4));</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/a0cd7a6293a52054223268fd94c8ef53.jpg"></p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>3.如何使用索引</h2> <p>索引用于快速找出在某个列中有一特定值的行。对相关列使用索引是提高SELECT操作性能的最佳途径。查询要使用索引最主要的条件是查询条件中需要使用索引关键字，如果是多列索引，那么只有查询条件使用了多列关键字最左边的前缀时，才可以使用索引，否则将不能使用索引。</p> <p class="maodian"><a name="_lab2_2_0" rel="nofollow"></a></p> <h3>3.1使用索引</h3> <p>在MySQL中，下列几种情况下有可能使用到索引。</p> <p>对于创建的多列索引，只要查询的条件中用到了最左边的列，索引一般就会被使用， 举例说明如下：</p> <div class="ay1code"> <pre class="brush:sql;">-- 首先在库存表goods_stock按Model，Brand的顺序创建一个复合索引  CREATE INDEX idx_stock_1 ON goods_stock (Model,Brand);</pre> </div> <p>然后按Model进行表查询，具体命令如下：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE Model='LM358DT';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/642ea702aec1cf214e547fb153241ae9.jpg"></p> <p>可以发现即便where条件中不是用Model与Brand字段的组合条件，索引仍然能用到，这就是索引的前缀特性（按照索引列顺序查询）。但是如果只按Brand条件查询表，那么索引就不会被用到，具体如下：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE Brand='TI';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/a8973531aa42a01dba6a08f82fd1735a.jpg"></p> <p>对于使用like的查询，后面如果是常量并且只有％号不在第一个字符，索引才可能会被使用，来看下面两个执行计划：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE Model LIKE '%LM358';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/b0f1738c05a43ec6d0d9623b09c8db41.jpg"></p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE Model LIKE 'LM358%';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/4d780a681f041e8f3f9d85a4bd1cef4c.jpg"></p> <p>可以发现第一个SQL没有使用索引，而第二个SQL就能够使用索引，区别就在于“%”的位置不同，前者把“%”放到第一位就不能用到索引，而后者没有放到第一位就使用了索引。另外，如果如果like后面跟的是一个列的名字，那么索引也不会被使用。如果对大的文本进行搜索，使用全文索引而不要使用like ‘%...%’。</p> <p>如果列名是索引，使用column_name is null时候将会使用索引。如下例中查询LotNO为null的记录时候就会用到索引：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE LotNO IS NULL;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/ce23d5e0abb018b5929f0e9e1882e522.jpg"></p> <p class="maodian"><a name="_lab2_2_1" rel="nofollow"></a></p> <h3>3.2存在索引但不使用索引</h3> <p>在下列情况下，虽然存在索引，但是MySQL并不会使用相应的索引。</p> <p>如果MySQL估计使用索引比全表扫描更慢，则不使用索引。例如如果列 key_part1 均匀分布在 1 和 100 之间，下列查询中使用索引就不是很好：</p> <div class="ay1code"> <pre class="brush:sql;">SELECT * FROM table_name where key_part1 &gt; 1 and key_part1 &lt; 90;</pre> </div> <p>如果使用MEMORY/HEAP表并且where条件中不使用“=”进行索引列，那么不会用到索引。HEAP表只有在“=”的条件下才会使用索引。<br />用or分割开的条件，如果or前的条件中的列有索引，而后面的列中没有索引，那么涉及到的索引都不会被用到，例如：</p> <div class="ay1code"> <pre class="brush:sql;">SHOW INDEX FROM goods_stock;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/857a548bec248fa829de26bd8f537565.jpg"></p> <p>通过命令可以看到goods_stock库存表有两个索引，然后我们再执行如下语句看是否使用索引：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE LotNO='20200821' OR PackageUnit='包';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/b96d57ec9395a59f6ecd7ece10cbce3d.jpg"></p> <p>可见虽然在LotNO这个列上存在索引idx_stock_2，但是这个SQL语句并没有用到这个索引，原因就是or中有一个条件中的列没有索引。</p> <p>如果列类型是字符串，那么一定记得在where条件中把字符常量值用引号引起来，否则即便这个列上有索引，MySQL也不会用到的，因为MySQL默认把输入的常量值进行转换以后才进行检索，请看如下例子：</p> <div class="ay1code"> <pre class="brush:sql;">DESC goods_stock;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/bcce9c6464136efd50a22e2f3624632f.jpg"></p> <p>通过DESC命令我们可以看到goods_stock库存表中的LotNO字段是字符型，如果我们在SQL语句中的LotNO字段加入一个数值型为20200821的条件值，因此即便在LotNO上有索引，MySQL也不能正确地用上索引，而是继续进行全表扫描，具体如下：</p> <div class="ay1code"> <pre class="brush:sql;">EXPLAIN SELECT * FROM goods_stock WHERE LotNO=20200821;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/aecded1cd93cf74c663b6dd524650d44.jpg"></p> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>4.查看索引使用情况</h2> <p>如果索引正在工作，Handler_read_key的值将很高，这个值代表了一个行被索引值读的次数，很低的值表明增加索引得到的性能改善不高，因为索引并不经常使用。Handler_read_rnd_next的值高则意味着查询运行低效，并且应该建立索引补救。这个值的含义是在数据文件中读下一行的请求数。如果正进行大量的表扫描，Handler_read_rnd_next的值较高，则通常说明表索引不正确或写入的查询没有利用索引。可以先刷新状态再查询，具体如下：</p> <div class="ay1code"> <pre class="brush:sql;">FLUSH STATUS;  SHOW STATUS LIKE 'Handler_read%';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/23081564b52fab87197d1d07222de41b.jpg"></p> <p>参数解释如下：</p> <ul> <li>Handler_read_first：此选项表明SQL是在做一个全索引扫描，注意是全部，而不是部分，所以说如果存在WHERE语句，这个选项是不会变的。</li> <li>Handler_read_key：此选项数值如果很高，MySQL高效的使用了索引，一切运转良好。</li> <li>Handler_read_next：此选项表明在进行索引扫描时，按照索引从数据文件里取数据的次数。</li> <li>Handler_read_prev：此选项表明在进行索引扫描时，按照索引倒序从数据文件里取数据的次数，一般就是ORDER BY … DESC。</li> <li>Handler_read_rnd：就是查询直接操作了数据文件，很多时候表现为没有使用索引或者文件排序。</li> <li>Handler_read_rnd_next：此选项值较高时候，则通常说明表索引不正确或写入的查询没有利用索引。</li> </ul> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>5.两个简单实用的优化方法</h2> <p>对于大多数开发人员来说，可能只希望掌握一些简单实用的优化方法，对于更多更复杂的优化，更倾向于交给专业DBA来做。本小节将向大家介绍两个简单适用的优化方法。</p> <p class="maodian"><a name="_lab2_4_2" rel="nofollow"></a></p> <h3>5.1定期分析表和检查表</h3> <p>分析表的语法如下：</p> <div class="ay1code"> <pre class="brush:sql;">ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...</pre> </div> <p>本语句用于分析和存储表的关键字分布，分析的结果将可以使得系统得到准确的统计信息，使得SQL能够生成正确的执行计划。如果用户感觉实际执行计划并不是预期的执行计划，执行一次分析表可能会解决问题。在分析期间，使用一个读取锁定对表进行锁定。这对于MyISAM, BDB和InnoDB表有作用。对于MyISAM表，本语句与使用myisamchk -a相当，下例中对goods_stock表做了表分析：</p> <div class="ay1code"> <pre class="brush:sql;">ANALYZE TABLE goods_stock;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/c7e7cb11aa7bb486cccf658f02e48765.jpg"></p> <p>检查表的语法如下：</p> <div class="ay1code"> <pre class="brush:sql;">CHECK TABLE tbl_name [, tbl_name] ... [option] ... option = {QUICK | FAST | MEDIUM | EXTENDED | CHANGED}</pre> </div> <p>检查表的作用是检查一个或多个表是否有错误。CHECK TABLE对MyISAM和InnoDB表有作用。对于MyISAM表，关键字统计数据被更新，例如：</p> <div class="ay1code"> <pre class="brush:sql;">CHECK TABLE goods_stock;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/dbe5403940372f8e693f6d25fa7f21ec.jpg"></p> <p>CHECK TABLE也可以检查视图是否有错误，比如在视图定义中被引用的表已不存在，举例如下：</p> <p>（1）首先我们创建一个表。</p> <div class="ay1code"> <pre class="brush:sql;">CREATE TABLE test  (    ID INT(11)  );</pre> </div> <p>（2）再创建一个视图。</p> <div class="ay1code"> <pre class="brush:sql;">CREATE VIEW test_view AS SELECT * FROM test;</pre> </div> <p>（3）然后CHECK一下该视图，发现没有问题。</p> <div class="ay1code"> <pre class="brush:sql;">CHECK TABLE test_view;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/5b6745c9ab9040d629573b383c8fd179.jpg"></p> <p>（4）现在删除掉视图依赖的表。</p> <div class="ay1code"> <pre class="brush:sql;">DROP TABLE test;</pre> </div> <p>（5）再来CHECK一下刚才的视图，发现报错了。</p> <div class="ay1code"> <pre class="brush:sql;">CHECK TABLE test_view;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/4d211c2e98e8fb24c3b0ea17e011a47e.jpg"></p> <p class="maodian"><a name="_lab2_4_3" rel="nofollow"></a></p> <h3>5.2定期优化表</h3> <p>优化表的语法如下：</p> <div class="ay1code"> <pre class="brush:sql;">OPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...</pre> </div> <p>如果已经删除了表的一大部分，或者如果已经对含有可变长度行的表（含有VARCHAR、BLOB或TEXT列的表）进行了很多更改，则应使用OPTIMIZE TABLE 命令来进行表优化。这个命令可以将表中的空间碎片进行合并，并且可以消除由于删除或者更新造成的空间浪费，但OPTIMIZE TABLE命令只对MyISAM、BDB和InnoDB表起作用。以下例子显示了优化goods_stock库存表的过程：</p> <div class="ay1code"> <pre class="brush:sql;">-- 先查看下goods_stock库存表是什么表类型  SHOW TABLE STATUS LIKE 'goods_stock%';</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/84fbf6a62d07be7b8a3f88997165bc9e.jpg"></p> <div class="ay1code"> <pre class="brush:sql;">OPTIMIZE TABLE goods_stock;</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/db8ce1d3533c256090941ac5886b8d28.jpg"></p> <p>注意：ANALYZE、CHECK、OPTIMIZE执行期间将对表进行锁定，因此一定注意要在数据库不繁忙的情况下执行相关的操作。</p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-847.htm">使用IntelliJ IDEA 配置Maven入门教程</a></p>
                                                                        <p>下一个：<a href="/html/category/article-849.htm">vue预览excel文档_在vue中，实现纯前端展示excel文件</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1050.htm" title="JDK8默认垃圾回收器详解">JDK8默认垃圾回收器详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4408.htm" title="什么牌子女鞋鞋底软(女士鞋底比较软的鞋)">什么牌子女鞋鞋底软(女士鞋底比较软的鞋)</a></li>
                        <li class="py-2"><a href="/html/category/article-1328.htm" title="vue2.x版本中computed和watch的使用入门详解-关联和区别_在线工具">vue2.x版本中computed和watch的使用入门详解-关联和区别_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3762.htm" title="Pandas（七）——文本数据（Textual Data）">Pandas（七）——文本数据（Textual Data）</a></li>
                        <li class="py-2"><a href="/html/category/article-4101.htm" title="java利用RestTemplate 发送post请求">java利用RestTemplate 发送post请求</a></li>
                        <li class="py-2"><a href="/html/category/article-1046.htm" title="如何加快循环操作和Numpy数组运算速度！">如何加快循环操作和Numpy数组运算速度！</a></li>
                        <li class="py-2"><a href="/html/category/article-3735.htm" title="RabbitMQ第三个实操小案例——发布者/订阅者（Publish/Subscribe）">RabbitMQ第三个实操小案例——发布者/订阅者（Publish/Subscribe）</a></li>
                        <li class="py-2"><a href="/html/category/article-1327.htm" title="java-websocket断线重连">java-websocket断线重连</a></li>
                        <li class="py-2"><a href="/html/category/article-1048.htm" title="Spring Boot + Mybatis-Plus + jasypt 数据库连接加密">Spring Boot + Mybatis-Plus + jasypt 数据库连接加密</a></li>
                        <li class="py-2"><a href="/html/category/article-4375.htm" title="三种最旺家的花（三种最旺家的花图片）">三种最旺家的花（三种最旺家的花图片）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>