<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-798.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>使用 docker-compose 部署 golang 的 Athens 私有代理 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>使用 docker-compose 部署 golang 的 Athens 私有代理</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<ul> <li><a href="#go%E4%B8%AD%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86%E6%90%AD%E5%BB%BA" rel="nofollow">go中私有代理搭建</a> <ul> <li><a href="#%E5%89%8D%E8%A8%80" rel="nofollow">前言</a></li> <li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9-athens" rel="nofollow">为什么选择 athens</a></li> <li><a href="#%E4%BD%BF%E7%94%A8-docker-compose-%E9%83%A8%E7%BD%B2" rel="nofollow">使用 docker-compose 部署</a> <ul> <li><a href="#%E9%85%8D%E7%BD%AE%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E7%9A%84%E8%AE%A4%E8%AF%81%E4%BF%A1%E6%81%AF" rel="nofollow">配置私有仓库的认证信息</a></li> <li><a href="#%E9%85%8D%E7%BD%AE%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%BC%8F" rel="nofollow">配置下载模式</a></li> <li><a href="#%E9%83%A8%E7%BD%B2" rel="nofollow">部署</a></li> <li><a href="#%E4%BD%BF%E7%94%A8%E7%A7%98%E9%92%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%A4%E8%AF%81%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93" rel="nofollow">使用秘钥的方式认证私有仓库</a> <ul> <li><a href="#1%E9%85%8D%E7%BD%AE%E7%A7%98%E9%92%A5" rel="nofollow">1、配置秘钥</a></li> <li><a href="#2%E9%85%8D%E7%BD%AE-http-%E4%B8%8E-ssh-%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99" rel="nofollow">2、配置 HTTP 与 SSH 重写规则</a></li> <li><a href="#3%E9%85%8D%E7%BD%AE-ssh-%E6%9D%A5%E7%BB%95%E8%BF%87%E4%B8%BB%E6%9C%BA-ssh-%E9%94%AE%E9%AA%8C%E8%AF%81" rel="nofollow">3、配置 SSH 来绕过主机 SSH 键验证</a></li> </ul> </li> </ul> </li> <li><a href="#%E5%8F%82%E8%80%83" rel="nofollow">参考</a></li> </ul> </li> </ul> <h2 id="go中私有代理搭建">go中私有代理搭建</h2> <h3 id="前言">前言</h3> <p>最近公司的代理出现问题了，刚好借这个机会来学习下，athens 如何构建私有代理</p> <h3 id="为什么选择-athens">为什么选择 athens</h3> <p>私有化代理的选取标准无非就是下面的几点</p> <p>1、托管私有模块；</p> <p>2、排除对公有模块的访问；</p> <p>3、存储公有模块；</p> <p><strong>athens 的特点：</strong></p> <p>Athens 首先可以配置访问私有仓库；</p> <p>Athens 的会存储每次拉取的包，如果该模块之前没有通过 athens，athens 会向目标地址请求数据，在返回给客户端的时候，会存储该模块到存储中，这样实现了<code>go mod download</code>永远只会发生一次；</p> <p>Athens 处理存储的策略为仅追加，一个模块被保存，它就永远不会改变，即使开发人员对 tag 进行了强推，那么也不会被删除；</p> <p>Athens 也可以配置下载策略，过滤一些有安全隐患的包。</p> <p>Athens 支持 disk, mongo, gcs, s3, minio, 外部存储/自定义，不过一般建议使用 disk。</p> <h3 id="使用-docker-compose-部署">使用 docker-compose 部署</h3> <p>官方网站已经，提供了通过 docker 和 二进制部署的方案，这里秉着好记性不如烂笔头的原则，这里自己也做了记录</p> <h4 id="配置私有仓库的认证信息">配置私有仓库的认证信息</h4> <p>通过<code>.netrc</code> 文件来配置，里面可以放自己的私有仓库的地址，以及用户，密码认证信息</p> <pre><code># cat .netrc machine gitlab.test.com login test-name password test-pass</code></pre> <p>有几个私有仓库，配置几个就可以了</p> <h4 id="配置下载模式">配置下载模式</h4> <p>通过<code>The download mode</code> (下载模式配置策略)是现在 ATHENS 中比较推崇的，之前通过<code>Filtering modules</code>（过滤模式）的方法，目前已经被弃用了。</p> <p>来看下如何配置</p> <pre><code># DownloadMode defines how Athens behaves when a module@version # is not found in storage. There are 4 options: # 1. "sync" (default): download the module synchronously and # return the results to the client. # 2. "async": return 404, but asynchronously store the module # in the storage backend. # 3. "redirect": return a 301 redirect status to the client # with the base URL as the DownloadRedirectURL from below. # 4. "async_redirect": same as option number 3 but it will # asynchronously store the module to the backend. # 5. "none": return 404 if a module is not found and do nothing. # 6. "file:&lt;path&gt;": will point to an HCL file that specifies # any of the 5 options above based on different import paths. # 7. "custom:&lt;base64-encoded-hcl&gt;" is the same as option 6 # but the file is fully encoded in the option. This is # useful for using an environment variable in serverless # deployments. # Env override: ATHENS_DOWNLOAD_MODE DownloadMode = "sync"</code></pre> <p>通过环境变量 ATHENS_DOWNLOAD_MODE 可指定，也可以修改指定的<code>config.dev.toml</code>来配置，默认是 sync</p> <p>ATHENS_DOWNLOAD_MODE 可指定的内容：</p> <p>1、通过<code>file:&lt;path&gt;</code>指定一个 hcl 文件,里面可以对不同的仓库，设置下载模式；</p> <p>2、通过<code>custom:&lt;base64-encoded-hcl&gt;</code> 指定一个 base64 编码的 HCL 文件；</p> <p>3、指定具体的全局策略，<code>sync, async, none, redirect, or async_redirect</code>，这是一个全局的设置，上面的两种是可以定制策略组的。</p> <p>来看下具体的下载模式</p> <ul> <li> <p>sync: 通过 同步从 VCS 下载模块<code>go mod download</code>，将其持久化到存储中，并立即将其返回给用户。请注意，这是默认行为；</p> </li> <li> <p>async：向客户端返回 404，并异步下载<code>module@version</code> 并将其持久化到存储中；</p> </li> <li> <p>none：返回 404 并且什么也不做；</p> </li> <li> <p>redirect：重定向到上游代理（例如proxy.golang.org），之后什么也不做；</p> </li> <li> <p>async_redirect：重定向到上游代理（例如<code>proxy.golang.org</code>）并异步下载<code>module@version</code> 并将其持久化到存储中；</p> </li> </ul> <p>下面看下配置策略的 hcl 文件</p> <pre><code># cat download.hcl    downloadURL = "https://goproxy.cn"  mode = "async_redirect"  download "gitlab.test.com/*" {     mode = "sync" }</code></pre> <h4 id="部署">部署</h4> <p>这里使用 docker-composer 部署</p> <pre><code class="language-yaml">version: '2' services:   athens:     image: gomods/athens:v0.11.0     restart: always     container_name: athens_proxy     ports:       - "3000:3000"     volumes:       - ./.netrc:/root/.netrc       - ./athens-storage:/var/lib/athens       - ./download.hcl:/root/download.hcl     environment:       - ATHENS_NETRC_PATH=/root/.netrc       - ATHENS_STORAGE_TYPE=disk       - ATHENS_DISK_STORAGE_ROOT=/var/lib/athens       - ATHENS_GOGET_WORKERS=100       - ATHENS_DOWNLOAD_MODE=file:/root/download.hcl       - ATHENS_GONOSUM_PATTERNS=gitlab.test.com</code></pre> <p>ATHENS_GONOSUM_PATTERNS：配置为私库地址，配置的仓库地址，不会进行安全向校验。</p> <p>go 处于安全性考虑，为了保证开发者的依赖库不被人恶意劫持篡改，所以引入了 GOSUMDB 环境变量来设置校验服务器</p> <p>当你在本地对依赖进行变动（更新/添加）操作时，Go 会自动去这个服务器进行数据校验，保证你下的这个代码库和世界上其他人下的代码库是一样的。如果有问题，会有个大大的安全提示。当然背后的这些操作都已经集成在 Go 里面了，开发者不需要进行额外的操作。</p> <p>对于我们的私有仓库，去公共安全校验库校验，肯定是不能通过校验的，我们可以通过 ATHENS_GONOSUM_PATTERNS 这个环境变量来设置不做校验的代码仓库， 它可以设置多个匹配路径，用逗号相隔。</p> <p>启动<code>docker-compose up -d</code></p> <p>客户端设置代理<code>export GOPROXY=http://xxxx:3000</code></p> <p>这样就能使用我们的代理服务了</p> <p>因为选择的 ATHENS_STORAGE_TYPE 为 disk，athens 服务会在拉取资源包的同时，也会下载资源包到配置的 ATHENS_DISK_STORAGE_ROOT 中。</p> <h4 id="使用秘钥的方式认证私有仓库">使用秘钥的方式认证私有仓库</h4> <p>上面通过<code>.netrc</code> 的方式来认证私有仓库，因为账号密码是铭文的总归不太好，可以使用秘钥的方式来认证</p> <h5 id="1配置秘钥">1、配置秘钥</h5> <p>首先查看电脑有没有秘钥</p> <pre><code># cd .ssh # ls id_rsa		id_rsa.pub</code></pre> <p>没有的话通过下面的命令的生成</p> <pre><code># ssh-keygen -t rsa -C "youremail@example.com"</code></pre> <p>邮箱换成自己的，一路回车即可</p> <p>然后将<code>id_rsa.pub</code> 公钥的内容添加到自己的私有仓库中，如何添加自己 google 吧，比较简单</p> <h5 id="2配置-http-与-ssh-重写规则">2、配置 HTTP 与 SSH 重写规则</h5> <pre><code># cat gitconfig  <div class="down down-link"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://"  rel="external nofollow" target="_blank"><i class="be be-download"></i></a><div class="clear"></div></div><div class="down-line"></div>         insteadOf = https://gitlab.test.com</code></pre> <h5 id="3配置-ssh-来绕过主机-ssh-键验证">3、配置 SSH 来绕过主机 SSH 键验证</h5> <pre><code># cat config  Host gitlab.test.com Hostname gitlab.test.com StrictHostKeyChecking no IdentityFile /root/.ssh/id_rsa</code></pre> <p>将上面配置的认证信息，映射到容器中即可</p> <pre><code class="language-yaml">version: '2' services:   athens:     image: gomods/athens:v0.11.0     restart: always     container_name: athens_proxy     ports:       - "3000:3000"     volumes:       - ./athens-storage:/var/lib/athens       - ./download.hcl:/root/download.hcl       - ./gitconfig:/root/.gitconfig       - ./ssh-keys:/root/.ssh     environment:       - ATHENS_STORAGE_TYPE=disk       - ATHENS_DISK_STORAGE_ROOT=/var/lib/athens       - ATHENS_GOGET_WORKERS=100       - ATHENS_DOWNLOAD_MODE=file:/root/download.hcl       - ATHENS_GONOSUM_PATTERNS=gitlab.test.com</code></pre> <p>这样即可实现秘钥的认证了</p> <p>需要注意私钥的权限，刚开始没注意，执行报了下面的错误</p> <pre><code>        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         Permissions 0644 for '/root/.ssh/id_rsa' are too open.         It is required that your private key files are NOT accessible by others.         This private key will be ignored.         Load key "/root/.ssh/id_rsa": bad permissions         git@gitlab.test.com: Permission denied (publickey).         fatal: Could not read from remote repository.</code></pre> <p>看报错就可推断出，是权限太大了，需要私钥文件不能被其他人所访问。</p> <p>修改权限就可以了</p> <pre><code>ssh-keys # chmod 600 id_rsa</code></pre> <p>具体的 demo 地址，可参见<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/tree/master/golang/go_environment/athens"  target="_blank" rel="nofollow">athens私有代理部署</a></p> <h3 id="参考">参考</h3> <p>【介绍 ATHENS】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gomods.io/zh/intro/"  target="_blank" rel="nofollow">https://gomods.io/zh/intro/</a><br /> 【download】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/gomods/athens/blob/main/docs/content/configuration/download.md"  target="_blank" rel="nofollow">https://github.com/gomods/athens/blob/main/docs/content/configuration/download.md</a><br /> 【athens构建golang私有代理】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens%E6%9E%84%E5%BB%BAgolang%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86.md"  target="_blank" rel="nofollow">https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens构建golang私有代理.md</a><br /> 【使用 docker-compose 部署 golang 的 Athens 私有代理】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens%E6%9E%84%E5%BB%BAgolang%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86.md"  target="_blank" rel="nofollow">https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens构建golang私有代理.md</a></p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-797.htm">抛奇怪硬币在C ++中</a></p>
                                                                        <p>下一个：<a href="/html/category/article-799.htm">CEPH-5：ceph集群基本概念与管理_在线工具</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1931.htm" title="SpringMVC中MultipartFile转File的两种方式_java">SpringMVC中MultipartFile转File的两种方式_java</a></li>
                        <li class="py-2"><a href="/html/category/article-4329.htm" title="宠物医院好评怎么写简短 宠物医院好评怎么写简短一点">宠物医院好评怎么写简短 宠物医院好评怎么写简短一点</a></li>
                        <li class="py-2"><a href="/html/category/article-4130.htm" title="C#二分查找算法_C#教程">C#二分查找算法_C#教程</a></li>
                        <li class="py-2"><a href="/html/category/article-1917.htm" title="css图片上面显示文字">css图片上面显示文字</a></li>
                        <li class="py-2"><a href="/html/category/article-2246.htm" title="Java中自定义注解的使用">Java中自定义注解的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-2535.htm" title="win11系统磁盘被写保护怎么解除">win11系统磁盘被写保护怎么解除</a></li>
                        <li class="py-2"><a href="/html/category/article-4408.htm" title="什么牌子女鞋鞋底软(女士鞋底比较软的鞋)">什么牌子女鞋鞋底软(女士鞋底比较软的鞋)</a></li>
                        <li class="py-2"><a href="/html/category/article-3430.htm" title="关于Spring中@Order注解的使用">关于Spring中@Order注解的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-3736.htm" title="分布式一致性算法 2PC与3PC">分布式一致性算法 2PC与3PC</a></li>
                        <li class="py-2"><a href="/html/category/article-2245.htm" title="8 高并发解决方案">8 高并发解决方案</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>