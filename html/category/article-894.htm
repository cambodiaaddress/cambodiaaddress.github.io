<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-894.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>C语言实现二叉树的插入和删除 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>C语言实现二叉树的插入和删除</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="htmledit_views">                     <strong><span style="font-size:16px;">二叉树的插入删除：</span></strong><br /> </p> <pre><code class="language-plain">//首先介绍二叉树的插入： &nbsp;&nbsp;&nbsp;&nbsp;//首先需要明白插入的规则：每个建好的结点p都需要从跟结点开始与根结点相比较数据域，如果根结点的数据域小于结点p，则接着将结点p与根结点的右子树相比较，否则p将与根结点的左子树相比较； &nbsp;&nbsp;&nbsp;&nbsp;//继续往下类推，一直到最后一次比较完后，指针head的左子树或者右子树为空，退出循环（也就是，当到达叶子结点时），因为每次进入循环都要把head结点赋给parent双亲结点，所以这个结点也表示双亲结点； &nbsp;&nbsp;&nbsp;&nbsp;//之后将双亲结点parent与p-&gt;data（也就是key的值）比较，如果双亲结点大，那么，p为双亲结点的左子树，否则为双亲结点的右子树；</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/a29e56f1cac071ac8fa32f80a5f1516f.jpg" alt="C语言实现二叉树的插入和删除"></p> <p></p> <pre><code class="language-plain">//介绍二叉树的删除： &nbsp;&nbsp;&nbsp;&nbsp;//二叉树的删除有三种情况： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//1&gt;删除的结点为叶子结点； &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//删除节点是叶节点，即没有子节点，或者说左右子节点都是NULL。这种情况下，只需要把删除节点的父节点中对应的指针指向NULL即可。然后释放掉删除节点的空间； &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//2&gt;删除的结点有左子树或者右子树，只能有一个； &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//删除节点有一个子节点（左子节点或右子节点），这种情况下，把删除节点的父节点中对应的指针指向删除节点的子节点即可。然后释放掉删除节点的空间;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//3&gt;删除的结点左右子树都有，两个都有； &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//删除节点有两个子节点，这种情况下，必须要找到一个替代删除节点的替代节点，并且保证二叉树的排序性。根据二叉树的排序性，可知替代节点的键值必须最接近删除节点键值。比删除节点键值小的所有键值中最大那个，或者是比删除节点键值大的所有键值中最小的那个，是符合要求的。这两个键值所在的节点分别在删除节点的左子树中最右边的节点，删除节点右子树中最左边的节点；  &nbsp;&nbsp;&nbsp;&nbsp;//以图例的形式表示第三种方式的删除；</code></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background-color:rgb(255,204,204);">第三种方式的删除：</span><span style="background-color:rgb(255,255,255);">&nbsp; &nbsp;</span><strong><span style="color:#ff0000;">最重要的是找到删除结点以及它的父结点；<br /></span></strong></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">1&gt;</span>找到删除节点以及它的父节点在删除节点的左子树中，向下向右遍历，找到替代节点以及它的父节点；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">2&gt;</span>删除节点的父节点中对应的指针指向替代节点；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">3&gt;</span>替代节点中的右子节点指针指向删除节点的右子树；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">4&gt;</span>如果替代节点的父节点不是删除节点，则将替代节点的左子节点指针指向删除节点的左子树，并且替代节点的父节<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;点中对应的指针指向替代节点的左子节点；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">5&gt;</span>释放删除节点的空间；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <strong><span style="color:#ff0000;">注意：</span></strong><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">1&gt;</span>第二步中找到的替代节点，可能会有左子树，但一定没有右子树。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(204,255,255);">2&gt;</span>第五步要判断替代节点的父节点不是删除节点后，才将替代节点的左子节点指针指向删除节点的左子树，否则<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;会出现替代节点左子节点指针指向自己的情况，从而丢失替代节点的左子树。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color:rgb(255,204,204);">第三种方式的图画显示：</span><span style="color:#ff0000;background-color:rgb(255,255,255);"><strong>两种方式；</strong></span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/56a86af990d5e9934afd116ad8de9afb.jpg" alt="C语言实现二叉树的插入和删除"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/93af3a3a47d5d575e4b28aa70c99b2d5.jpg" alt="C语言实现二叉树的插入和删除"></p> <pre><code class="language-objc">#include&lt;stdio.h&gt; #include&lt;stdlib.h&gt; #define N 9 int a[]={3,2,5,8,4,7,6,9,10};  //二叉树的结点类型； typedef struct tree { 	int data; 	struct tree *lchild; 	struct tree *rchild; }BitTree;  //在二叉排序树中插入查找关键字可以； void Inserter(BitTree *bt,int key)   { 	BitTree *parent;   //表示双亲结点； 	BitTree *head = bt; 	BitTree *p=(BitTree *)malloc(sizeof(BitTree)); 	p-&gt;data=key;   //保存结点数据； 	p-&gt;lchild=p-&gt;rchild=NULL;  //左右子树置空； 	 	//查找需要添加的父结点，这个父结点是度为0的结点； 	while(head)  	{ 		parent=head; 		if(key&lt;head-&gt;data)   //若关键字小于结点的数据； 			head=head-&gt;lchild; //在左子树上查找；  		else   //若关键字大于结点的数据； 			head=head-&gt;rchild;  //在右子树上查找； 	} 	//判断添加到左子树还是右子树； 	if(key&lt;parent-&gt;data)   //小于父结点； 		parent-&gt;lchild=p;    //添加到左子树； 	else    //大于父结点； 		parent-&gt;rchild=p;   //添加到右子树； }  //n个数据在数组data[]中； BitTree *Createer(BitTree *bt,int data[],int n)   { 	bt=(BitTree *)malloc(sizeof(BitTree)); 	bt-&gt;data=data[0]; 	bt-&gt;lchild=bt-&gt;rchild=NULL; 	for(int i=1;i&lt;n;i++) 		Inserter(bt,data[i]); 	return bt; }  //中序遍历； void PreOrder(BitTree *bt) { 	if(bt) 	{ 		PreOrder(bt-&gt;lchild); 		printf("%d ",bt-&gt;data); 		PreOrder(bt-&gt;rchild); 	} }  //删除结点； void Deleteer(BitTree *bt,int key) { 	BitTree *L,*LL;    //在删除左右子树都有的结点时使用； 	BitTree *p=bt; 	BitTree *parent=bt; 	int child=0;  //0表示左子树，1表示右子树； 	if(!bt)    //如果排序树为空，则退出； 		return ; 	while(p)  //二叉排序树有效； 	{ 		if(p-&gt;data==key) 		{ 			if(!p-&gt;lchild&amp;&amp;!p-&gt;rchild)  //叶结点(左右子树都为空)； 			{ 				if(p==bt)  //被删除的结点只有根结点； 					free(p); 				else if(child==0) 				{ 					parent-&gt;lchild=NULL;  //设置父结点左子树为空； 					free(p);   //释放结点空间； 				} 				else   //父结点为右子树； 				{ 					parent-&gt;rchild=NULL;  //设置父结点右子树为空； 					free(p);  //释放结点空间； 				} 			}  			else if(!p-&gt;lchild)  //左子树为空，右子树不为空； 			{ 				if(child==0)    //是父结点的左子树； 					parent-&gt;lchild=p-&gt;rchild; 				else      //是父结点的右子树； 					parent-&gt;rchild=p-&gt;rchild; 				free(p);  //释放被删除的结点； 			}  			else if(!p-&gt;rchild)  //右子树为空，左子树不为空； 			{ 				if(child==0)  //是父结点的左子树； 					parent-&gt;lchild=p-&gt;lchild; 				else      //是父结点的右子树； 					parent-&gt;rchild=p-&gt;lchild; 				free(p);  //释放被删除的结点； 			}  			else 			{ 				LL=p;  //保存左子树的结点； 				L=p-&gt;rchild;  //从当前结点的右子树进行查找； 				if(L-&gt;lchild)  //左子树不为空； 				{ 					LL=L; 					L=L-&gt;lchild;   //查找左子树； 					p-&gt;data=L-&gt;data;  //将左子树的数据保存到被删除结点； 					LL-&gt;lchild=L-&gt;lchild;  //设置父结点的左子树指针为空； 					for(;L-&gt;lchild;L=L-&gt;lchild); 					L-&gt;lchild=p-&gt;lchild; 					p-&gt;lchild=NULL; 				} 				else 				{ 					p-&gt;data=L-&gt;data; 					LL-&gt;rchild=L-&gt;rchild; 				} 			} 			p=NULL; 		}  		else if(key&lt;p-&gt;data)  //需删除记录的关键字小于结点的数据； 		{ 			//要删除的结点p是parent的左子树； 			child=0;  //标记在当前结点左子树； 			parent=p;//保存当前结点作为父结点； 			p=p-&gt;lchild;  //查找左子树； 		}  		else  //需删除记录的关键字大于结点的数据； 		{ 			//要删除的结点p是parent的右子树； 			child=1;  //标记在当前结点右子树查找； 			parent=p;  //保存当前结点作为父结点； 			p=p-&gt;rchild;  //查找右子树； 		} 	} }  int main(void) { 	BitTree *bt;  //保存二叉排序树根结点； 	printf("数组数据为:\n"); 	for(int i=0;i&lt;N;i++) 		printf("%d ",a[i]); 	printf("\n\n");  	bt=Createer(bt,a,N); 	printf("遍历后的二叉排序树为(中序遍历输出):\n"); 	PreOrder(bt); 	printf("\n\n\n");  	printf("     **将数据8插入到二叉树中**\n\n"); 	printf("插入后的二叉树为(中序遍历输出):\n"); 	Inserter(bt,8); 	PreOrder(bt); 	printf("\n\n\n"); 	 	printf("     **将数据5从二叉树中删除**\n\n"); 	printf("删除后的二叉树为(中序遍历输出):\n"); 	Deleteer(bt,5);   //删除拥有左右子树的结点有问题； 	PreOrder(bt); 	printf("\n"); 	return 0; }</code></pre> <p>//输出结果截图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/4c417782039f0873ab4dfc97e5e2ef5c.jpg" alt="C语言实现二叉树的插入和删除"></p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-893.htm">CEPH-4：ceph RadowGW对象存储功能详解</a></p>
                                                                        <p>下一个：<a href="/html/category/article-895.htm">Spring boot aop之后访问接口所有bean注入为空问题</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1024.htm" title="mybatis 加载配置文件的方法（两种方式）">mybatis 加载配置文件的方法（两种方式）</a></li>
                        <li class="py-2"><a href="/html/category/article-1046.htm" title="如何加快循环操作和Numpy数组运算速度！">如何加快循环操作和Numpy数组运算速度！</a></li>
                        <li class="py-2"><a href="/html/category/article-1031.htm" title="spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL">spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL</a></li>
                        <li class="py-2"><a href="/html/category/article-1000.htm" title="@RequestBody接受参数报415错误">@RequestBody接受参数报415错误</a></li>
                        <li class="py-2"><a href="/html/category/article-1016.htm" title="helm部署单节点redis">helm部署单节点redis</a></li>
                        <li class="py-2"><a href="/html/category/article-1026.htm" title="源码分析 Spring Security OAuth2 生成 token 的执行流程">源码分析 Spring Security OAuth2 生成 token 的执行流程</a></li>
                        <li class="py-2"><a href="/html/category/article-1007.htm" title="vue的插槽">vue的插槽</a></li>
                        <li class="py-2"><a href="/html/category/article-1010.htm" title="Redis 数据持久化实践">Redis 数据持久化实践</a></li>
                        <li class="py-2"><a href="/html/category/article-1059.htm" title="TypeError: Cannot read properties of undefined (reading ‘state‘)">TypeError: Cannot read properties of undefined (reading ‘state‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-1040.htm" title="Hbase(四)：Hbase原理">Hbase(四)：Hbase原理</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>