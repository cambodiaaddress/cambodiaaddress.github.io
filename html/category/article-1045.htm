<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-1045.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Spring中@Scheduled功能的使用方法详解_java - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>Spring中@Scheduled功能的使用方法详解_java</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">前言</a></li> <li><a href="#_label1" rel="nofollow">一、Spring @Scheduled Annotation</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_1_0" rel="nofollow">1.2 如何启用@Scheduled 注释</a></li> <li><a href="#_lab2_1_1" rel="nofollow">1.3 使用@Scheduled 注释</a></li> </ul> <li><a href="#_label2" rel="nofollow">二、固定的延时和频率使用@Scheduled</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label3" rel="nofollow">三、配合cron表达式使用@Scheduled</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label4" rel="nofollow">四、使用properties文件配置Cron</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label5" rel="nofollow">五、使用context配置Cron</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label6" rel="nofollow">总结</a></li> <ul class="second_class_ul"></ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>前言</h2> <p>Spring 为任务调度和基于使用@Scheduled 注释的 cron 表达式的异步方法执行提供了极好的支持。可以将@Scheduled 注释与触发器元数据一起添加到方法中。在这篇文章中，我将以4种不同的方式展示@Scheduled 功能的使用方法。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>一、Spring @Scheduled Annotation</h2> <p>@ scheduled注释用于任务调度。触发器信息需要与这个注释一起提供。</p> <p>您可以使用属性 fixedDelay/fixedRate/cron 来提供触发信息。</p> <ul> <li>fixedRate 使 Spring 定期运行任务，即使最后一次调用仍在运行</li> <li>fixedDelay 特别控制最后一次执行结束时的下一次执行时间。</li> <li>Cron 是一个源自 Unix cron 实用工具的特性，并且根据您的需求有各种选项。</li> </ul> <p>示例用法如下:</p> <div class="ay1code"> <pre class="brush:java;">@Scheduled Usages  @Scheduled(fixedDelay =30000)  public void demoServiceMethod () {... }     @Scheduled(fixedRate=30000)  public void demoServiceMethod () {... }     @Scheduled(cron="0 0 * * * *")  public void demoServiceMethod () {... }</pre> </div> <p class="maodian"><a name="_lab2_1_0" rel="nofollow"></a></p> <h3>1.2 如何启用@Scheduled 注释</h3> <p>要在 spring 应用程序中使用@Scheduled，必须首先在 applicationConfig.xml 文件中定义 xml 名称空间和模式位置定义。还添加任务: 注释驱动，以支持基于注释的任务调度。</p> <div class="ay1code"> <pre class="brush:xml;">applicationConfig.xml  xmlns:task="http://www.springframework.org/schema/task"  http://www.springframework.org/schema/task/  http://www.springframework.org/schema/task/spring-task-3.0.xsd     &lt;task:annotation-driven&gt;</pre> </div> <p>上面的添加是必要的，因为我们将使用基于注释的配置。</p> <p class="maodian"><a name="_lab2_1_1" rel="nofollow"></a></p> <h3>1.3 使用@Scheduled 注释</h3> <p>下一步是在类中创建一个类和一个方法，如下所示:</p> <div class="ay1code"> <pre class="brush:java;">DemoService.java  public class DemoService  {    @Scheduled(cron="*/5 * * * * ?")    public void demoServiceMethod()    {      System.out.println("Method executed at every 5 seconds. Current time is :: "+ new Date());    }  }</pre> </div> <p>在上面的例子中</p> <ul> <li>使用@Scheduled 注释反过来会使 Spring 容器理解这个注释下面的方法将作为作业运行。</li> <li>记住，带@Scheduled 注释的方法不应该有传递给它们的参数。</li> <li>它们也不应该返回任何值</li> <li>如果希望在@Scheduled 方法中使用外部对象，应该使用自动连接将它们注入到 DemoService 类中，而不是将它们作为参数传递给@Scheduled 方法。</li> </ul> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>二、固定的延时和频率使用@Scheduled</h2> <p>在这个方法中，fixedDelay 属性与@Scheduled 注释一起使用。</p> <p>举例：</p> <div class="ay1code"> <pre class="brush:xhtml;">DemoServiceBasicUsageFixedDelay.java  package com.howtodoinjava.service;     import java.util.Date;  import org.springframework.scheduling.annotation.Scheduled;     public class DemoServiceBasicUsageFixedDelay  {   &amp;nbsp;@Scheduled(fixedDelay = 5000)   &amp;nbsp;//@Scheduled(fixedRate = 5000)  //Or use this   &amp;nbsp;public void demoServiceMethod()    {   &amp;nbsp; &amp;nbsp;System.out.println("Method executed at every 5 seconds. Current time is :: "+ new Date());    }  }  复制代码</pre> </div> <p>应用程序配置如下:</p> <div class="ay1code"> <pre class="brush:xml;">applicationContext.xml  &lt; ?xml  version="1.0" encoding="UTF-8"?&gt;  &lt;beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns:task="http://www.springframework.org/schema/task"   xmlns:util="http://www.springframework.org/schema/util"   xmlns:context="http://www.springframework.org/schema/context"   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd      http://www.springframework.org/schema/context/ http://www.springframework.org/schema/context/spring-context.xsd      http://www.springframework.org/schema/util/ http://www.springframework.org/schema/util/spring-util.xsd          http://www.springframework.org/schema/task/ http://www.springframework.org/schema/task/spring-task-3.0.xsd"&gt;      &lt;task:annotation-driven /&gt;      &lt;bean id="demoServiceBasicUsageFixedDelay" class="com.howtodoinjava.service.DemoServiceBasicUsageFixedDelay"&gt;&lt;/bean&gt;  &lt;/beans&gt;</pre> </div> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>三、配合cron表达式使用@Scheduled</h2> <p>在此方法中，cron 属性与@Scheduled 注释一起使用。</p> <p>举例：</p> <div class="ay1code"> <pre class="brush:java;">DemoServiceBasicUsageCron.java  package com.howtodoinjava.service;  import java.util.Date;  import org.springframework.scheduling.annotation.Scheduled;  public class DemoServiceBasicUsageCron  {    @Scheduled(cron="*/5 * * * * ?")    public void demoServiceMethod()    {      System.out.println("Method executed at every 5 seconds. Current time is :: "+ new Date());    }  }</pre> </div> <p>应用程序配置如下:</p> <div class="ay1code"> <pre class="brush:xml;">applicationContext.xml  &lt; ?xml  version="1.0" encoding="UTF-8"?&gt;  &lt;beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns:task="http://www.springframework.org/schema/task"   xmlns:util="http://www.springframework.org/schema/util"   xmlns:context="http://www.springframework.org/schema/context"   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd      http://www.springframework.org/schema/context/ http://www.springframework.org/schema/context/spring-context.xsd      http://www.springframework.org/schema/util/ http://www.springframework.org/schema/util/spring-util.xsd          http://www.springframework.org/schema/task/ http://www.springframework.org/schema/task/spring-task-3.0.xsd"&gt;      &lt;task:annotation-driven /&gt;      &lt;bean id="demoServiceBasicUsageCron" class="com.howtodoinjava.service.DemoServiceBasicUsageCron"&gt;&lt;/bean&gt;  &lt;/beans&gt;</pre> </div> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>四、使用properties文件配置Cron</h2> <p>在这个方法中，cron 属性与@Scheduled 注释一起使用。此属性的值必须是 cron 表达式，如前面的方法所示，但是，此 cron 表达式将在属性文件中定义，相关属性的键将用于@Scheduled 注释。</p> <p>这将使 cron 表达式与源代码分离，从而使更改变得容易。</p> <div class="ay1code"> <pre class="brush:java;">DemoServicePropertiesExample.java  package com.howtodoinjava.service;  import java.util.Date;  import org.springframework.scheduling.annotation.Scheduled;  public class DemoServicePropertiesExample {    @Scheduled(cron = "${cron.expression}")    public void demoServiceMethod()    {      System.out.println("Method executed at every 5 seconds. Current time is :: "+ new Date());    }  }</pre> </div> <p>应用程序配置如下:</p> <div class="ay1code"> <pre class="brush:xml;">applicationContext.xml  &lt;?xml  version="1.0" encoding="UTF-8"?&gt;  &lt;beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns:task="http://www.springframework.org/schema/task"   xmlns:util="http://www.springframework.org/schema/util"   xmlns:context="http://www.springframework.org/schema/context"   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd      http://www.springframework.org/schema/context/ http://www.springframework.org/schema/context/spring-context.xsd      http://www.springframework.org/schema/util/ http://www.springframework.org/schema/util/spring-util.xsd          http://www.springframework.org/schema/task/ http://www.springframework.org/schema/task/spring-task-3.0.xsd"&gt;      &lt;task:annotation-driven /&gt;      &lt;util:properties id="applicationProps" location="application.properties" /&gt;    &lt;context:property-placeholder properties-ref="applicationProps" /&gt;      &lt;bean id="demoServicePropertiesExample" class="com.howtodoinjava.service.DemoServicePropertiesExample"&gt;&lt;/bean&gt;  &lt;/beans&gt;</pre> </div> <p class="maodian"><a name="_label5" rel="nofollow"></a></p> <h2>五、使用context配置Cron</h2> <p>该方法在属性文件中配置 cron 表达式，在配置文件中使用 cron 表达式的属性键配置作业调度。主要的变化是您不需要在任何方法上使用@Scheduled 注释。方法配置也是在应用程序配置文件中完成的。</p> <p>举例：</p> <div class="ay1code"> <pre class="brush:java;">DemoServiceXmlConfig.java  package com.howtodoinjava.service;  import java.util.Date;  public class DemoServiceXmlConfig  {    public void demoServiceMethod()    {      System.out.println("Method executed at every 5 seconds. Current time is :: "+ new Date());    }  }</pre> </div> <p>应用程序配置如下：</p> <div class="ay1code"> <pre class="brush:xml;">applicationContext.xml  &lt;?xml  version="1.0" encoding="UTF-8"?&gt;  &lt;beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns:task="http://www.springframework.org/schema/task"   xmlns:util="http://www.springframework.org/schema/util"   xmlns:context="http://www.springframework.org/schema/context"   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd      http://www.springframework.org/schema/context/ http://www.springframework.org/schema/context/spring-context.xsd      http://www.springframework.org/schema/util/ http://www.springframework.org/schema/util/spring-util.xsd          http://www.springframework.org/schema/task/ http://www.springframework.org/schema/task/spring-task-3.0.xsd"&gt;      &lt;task:annotation-driven /&gt;      &lt;util:properties id="applicationProps" location="application.properties" /&gt;    &lt;context:property-placeholder properties-ref="applicationProps" /&gt;    &lt;bean id="demoServiceXmlConfig" class="com.howtodoinjava.service.DemoServiceXmlConfig" /&gt;    &lt;task:scheduled-tasks&gt;        &lt;task:scheduled ref="demoServiceXmlConfig" method="demoServiceMethod" cron="#{applicationProps['cron.expression']}"&gt;&lt;/task:scheduled&gt;    &lt;/task:scheduled-tasks&gt;  &lt;/beans&gt;</pre> </div> <p class="maodian"><a name="_label6" rel="nofollow"></a></p> <h2>总结</h2> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1044.htm">C ++程序，实现布斯的乘法算法来对两个有符号数相乘</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1046.htm">如何加快循环操作和Numpy数组运算速度！</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1045.htm" title="Spring中@Scheduled功能的使用方法详解_java">Spring中@Scheduled功能的使用方法详解_java</a></li>
                        <li class="py-2"><a href="/html/category/article-1029.htm" title="python连接数据库并执行SQL语句">python连接数据库并执行SQL语句</a></li>
                        <li class="py-2"><a href="/html/category/article-1051.htm" title="FeignClient参数">FeignClient参数</a></li>
                        <li class="py-2"><a href="/html/category/article-3128.htm" title="nohup: redirecting stderr to stdout">nohup: redirecting stderr to stdout</a></li>
                        <li class="py-2"><a href="/html/category/article-3429.htm" title="认证与授权流程与spring boot整合 spring security">认证与授权流程与spring boot整合 spring security</a></li>
                        <li class="py-2"><a href="/html/category/article-3736.htm" title="分布式一致性算法 2PC与3PC">分布式一致性算法 2PC与3PC</a></li>
                        <li class="py-2"><a href="/html/category/article-2535.htm" title="win11系统磁盘被写保护怎么解除">win11系统磁盘被写保护怎么解除</a></li>
                        <li class="py-2"><a href="/html/category/article-1338.htm" title="Kafka启动后进程过一段时间自己消失，问题解决">Kafka启动后进程过一段时间自己消失，问题解决</a></li>
                        <li class="py-2"><a href="/html/category/article-1060.htm" title="已解决：TypeError: Cannot read properties of undefined (reading ‘value‘)">已解决：TypeError: Cannot read properties of undefined (reading ‘value‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-1328.htm" title="vue2.x版本中computed和watch的使用入门详解-关联和区别_在线工具">vue2.x版本中computed和watch的使用入门详解-关联和区别_在线工具</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>