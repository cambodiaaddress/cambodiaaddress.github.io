<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>文章分类 - CambodiaAddress - 第2页</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h1>文章分类</h1>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li class="active">文章分类</li>
                                </ol>

                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1960.htm" title="面试官：请用SQL模拟一个死锁">
                                            <img class="img-responsive" src="/uploads/20240502/ea7022259d49e02c26f0760191a0711f.webp" alt="面试官：请用SQL模拟一个死锁">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1960.htm" title="面试官：请用SQL模拟一个死锁">面试官：请用SQL模拟一个死锁</a></h3>
                                        <p>
                                            文章首发于公众号：BiggerBoy  有读者说面试被问到怎么用SQL模拟数据库死锁？ 这位读者表示对Java中的死锁还是略知一二的，但是突然用SQL写死锁的案例之前还真没遇到过，这个问题没答上来。所                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1959.htm" title="实战代码（十）：Springboot RestTemplate连接池">
                                            <img class="img-responsive" src="/uploads/20240502/f8cddf75f39866f4b21c03f0c4899dd3.webp" alt="实战代码（十）：Springboot RestTemplate连接池">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1959.htm" title="实战代码（十）：Springboot RestTemplate连接池">实战代码（十）：Springboot RestTemplate连接池</a></h3>
                                        <p>
                                            一、理论基础 RestTemplate是Springboot中内置的Http请求工具，可以直接注入使用。 两个常用的构造方法如下图 (点击进入文档地址)  从上面可以看出，最简单的方式就是使用默认配置                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1946.htm" title="dao层和serivce层的作用和区别">
                                            <img class="img-responsive" src="/uploads/20240502/5b64b8ad8a2a6cbfb539e5fd2501ce08.webp" alt="dao层和serivce层的作用和区别">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1946.htm" title="dao层和serivce层的作用和区别">dao层和serivce层的作用和区别</a></h3>
                                        <p>
                                            文章载来源：【http://blog.csdn.net/qq_34825926/article/details/69346084】   访问数据库的传统方法&nbsp;传统访问数据库的方法非常面向过程                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1945.htm" title="Interlaken协议介绍">
                                            <img class="img-responsive" src="/uploads/20240502/73f5ccf853b079ba84adb4851df141be.webp" alt="Interlaken协议介绍">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1945.htm" title="Interlaken协议介绍">Interlaken协议介绍</a></h3>
                                        <p>
                                            个人学习Interlaken协议，持续更新中 ，请忽略模板文字。。。 提示：文章写完后，目录可以自动生成，如何生成可参考右边的帮助文档  文章目录  前言 一、pandas是什么？ 二、使用步骤                                           </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1932.htm" title="nohup: redirecting stderr to stdout的解决办法">
                                            <img class="img-responsive" src="/uploads/20240502/b32c8a5d7127ac0cdf2de5114b4b98d5.webp" alt="nohup: redirecting stderr to stdout的解决办法">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1932.htm" title="nohup: redirecting stderr to stdout的解决办法">nohup: redirecting stderr to stdout的解决办法</a></h3>
                                        <p>
                                            &nbsp;最近发现在用服务器上用nohup后台运行matlab命令时，输入回车后总是有“nohup: redirecting stderr to stdout”这样的提示，我的命令是这样的： noh                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1931.htm" title="SpringMVC中MultipartFile转File的两种方式_java">
                                            <img class="img-responsive" src="/uploads/20240502/8e65f2a3139f96cf5093e7e5047d250f.webp" alt="SpringMVC中MultipartFile转File的两种方式_java">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1931.htm" title="SpringMVC中MultipartFile转File的两种方式_java">SpringMVC中MultipartFile转File的两种方式_java</a></h3>
                                        <p>
                                            在spring上传文件中，一般都使用了MultipartFile来接收，但是有需要用到File的地方，这里只介绍两种转为File的方法，当然也有一些其他的方法，我试了有些错误，所以就不提了；  tra                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1918.htm" title="java基础面试题">
                                            <img class="img-responsive" src="/uploads/20240502/888b44e30e7aece27b0a7fc9f63050eb.webp" alt="java基础面试题">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1918.htm" title="java基础面试题">java基础面试题</a></h3>
                                        <p>
                                            java基础面试题2 1.说一说接口和抽象类  2.什么是序列化？为什么要进行序列化 在Java中，对象序列化表示将对象表示为字节序列。字节包括对象的数据和信息。可以将序列化的对象写入文件/数据库，然                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1917.htm" title="css图片上面显示文字">
                                            <img class="img-responsive" src="/uploads/20240502/3377606fa177c6a47ff640f0675dba4c.webp" alt="css图片上面显示文字">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1917.htm" title="css图片上面显示文字">css图片上面显示文字</a></h3>
                                        <p>
                                            &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;title&gt;&lt;/title&gt;                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1636.htm" title="模型的威力：基于模型，快速梳理源码_在线工具">
                                            <img class="img-responsive" src="/uploads/20240502/270416637cdcba9191d2539312383ebe.webp" alt="模型的威力：基于模型，快速梳理源码_在线工具">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1636.htm" title="模型的威力：基于模型，快速梳理源码_在线工具">模型的威力：基于模型，快速梳理源码_在线工具</a></h3>
                                        <p>
                                            上一篇我们将梳理的核心流程整合进了概念模型，得到了一个相对详细的流程。本篇是《如何高效阅读源码》专题的第十篇，我们来通过阅读源码来验证上面得到的流程图是否正确，同时进一步细化，从核心流程向外围流程进行                                        </p>
                                    </div>
                                </div>
                                                                <div class="featured-content-wrapper item">
                                    <div class="col-md-3">
                                        <a href="/html/category/article-1635.htm" title="Vue.js 3.x 中跨层级组件如何传递数据？_在线工具">
                                            <img class="img-responsive" src="/uploads/20240502/c073bc35b9e8b96faa39b3403f718da9.webp" alt="Vue.js 3.x 中跨层级组件如何传递数据？_在线工具">
                                        </a>
                                    </div>
                                    <div class="col-md-9">
                                        <h3><a href="/html/category/article-1635.htm" title="Vue.js 3.x 中跨层级组件如何传递数据？_在线工具">Vue.js 3.x 中跨层级组件如何传递数据？_在线工具</a></h3>
                                        <p>
                                            provide/inject 基本用法 在 Vue.js 中，跨层级组件如果想要传递数据，我们可以直接使用 props 来将祖先组件的数据传递给子孙组件：   注：上图来自 Vue.js 官网：Pro                                        </p>
                                    </div>
                                </div>
                                
                                <ul class="pagination"><li class="disabled"><span>&laquo;</span></li> <li class="active"><span>1</span></li><li><a href="/html/category/page-2.htm">2</a></li><li><a href="/html/category/page-3.htm">3</a></li><li><a href="/html/category/page-4.htm">4</a></li><li><a href="/html/category/page-5.htm">5</a></li><li><a href="/html/category/page-6.htm">6</a></li><li><a href="/html/category/page-7.htm">7</a></li><li><a href="/html/category/page-8.htm">8</a></li><li class="disabled"><span>...</span></li><li><a href="/html/category/page-27.htm">27</a></li><li><a href="/html/category/page-28.htm">28</a></li> <li><a href="/html/category/page-2.htm">&raquo;</a></li></ul>                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1021.htm" title="electron-vite新一代electron开发构建工具_vue.js_">electron-vite新一代electron开发构建工具_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-1031.htm" title="spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL">spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL</a></li>
                        <li class="py-2"><a href="/html/category/article-1044.htm" title="C ++程序，实现布斯的乘法算法来对两个有符号数相乘">C ++程序，实现布斯的乘法算法来对两个有符号数相乘</a></li>
                        <li class="py-2"><a href="/html/category/article-1946.htm" title="dao层和serivce层的作用和区别">dao层和serivce层的作用和区别</a></li>
                        <li class="py-2"><a href="/html/category/article-1016.htm" title="helm部署单节点redis">helm部署单节点redis</a></li>
                        <li class="py-2"><a href="/html/category/article-1060.htm" title="已解决：TypeError: Cannot read properties of undefined (reading ‘value‘)">已解决：TypeError: Cannot read properties of undefined (reading ‘value‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-1059.htm" title="TypeError: Cannot read properties of undefined (reading ‘state‘)">TypeError: Cannot read properties of undefined (reading ‘state‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-1034.htm" title="java.sql.ResultSet">java.sql.ResultSet</a></li>
                        <li class="py-2"><a href="/html/category/article-1017.htm" title="SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪">SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪</a></li>
                        <li class="py-2"><a href="/html/category/article-1043.htm" title="springsecurity 中 核心过滤器和请求">springsecurity 中 核心过滤器和请求</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
</body>

</html>