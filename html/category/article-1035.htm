<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-1035.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Go1.18 新特性之多模块Multi-Module工作区模式_Golang - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>Go1.18 新特性之多模块Multi-Module工作区模式_Golang</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> <a href="#title-0" title="初始化一个新的工作区">初始化一个新的工作区</a></li> </ul><span class="log-zd"><span class="log-close"><a title="隐藏目录"><i class="be be-cross"></i><strong>目录</strong></a></span></span></div>  			</div> <div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">背景</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_0_0" rel="nofollow">举例：未发布的 module</a></li> </ul> <li><a href="#_label1" rel="nofollow">Go1.18 新特性：多模块（Multi-Module）工作区模式</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_1_1" rel="nofollow">Go1.18 工作区模式</a></li> <ul class="third_class_ul"> <li><a href="#_label3_1_1_0" rel="nofollow">初始化一个新的工作区</a></li> </ul> <li><a href="#_lab2_1_2" rel="nofollow">go.work 文件结构</a></li> <ul class="third_class_ul"></ul> <li><a href="#_lab2_1_3" rel="nofollow">go.work 文件优先级高于 go.mod 中定义在</a></li> <ul class="third_class_ul"></ul> <li><a href="#_lab2_1_4" rel="nofollow">如何禁用工作区</a></li> <ul class="third_class_ul"></ul> </ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>背景</h2> <p>在 go 中使用多个模块可能真的是一件苦差事。特别是当您的一个模块依赖于另一个模块时，您需要同时编辑这两个模块！</p> <p>您编辑父模块，但是然后您需要将其推送到repo。然后在依赖模块中运行 update 以下载新版本。最终使用2行修复您需要的。至少可以说是一种痛苦。</p> <p>在 Go 1.18之前，建议使用依赖模块中的 replace 指令来处理这个问题。</p> <p>这个方法是有效的，但也有自己的问题，比如需要手动编辑 go.mod，确保你提交代码时候，不commit 这个 replace等等。</p> <p>最后，从 Go 1.18开始，引入了一种同时处理多个模块的新方法，这种方法消除了这些问题: go.work。</p> <p>Multi-Module, Single Workspace<br />https://medium.com/@michael_epps/multi-module-single-workspace-3493528555ad</p> <p class="maodian"><a name="_lab2_0_0" rel="nofollow"></a></p> <h3>举例：未发布的 module</h3> <p>在做本地的 Go 项目开发时，可能会在本地同时开发多个库（项目库、工具库、第三方库）等。</p> <p>如下代码：</p> <div class="ay1code"> <pre class="brush:plain;">package main     import (      "github.com/eddycjy/pkgutil"  )     func main() {      pkgutil.PrintFish()  }  </pre> </div> <p>我们看到：该代码对外唯一的依赖是module path为"github.com/eddycjy/pkgutil"的module，但后者是一个尚在本地进行开发，还未发布到http://github.com上的module。</p> <p>如果这个时候运行 go run 或是 go mod tidy，都不行，会运行失败。<br />报如下类似错误：</p> <blockquote> <p>fatal: repository 'https://github.com/eddycjy/pkgutil/' not found</p> </blockquote> <p>这个问题报错是因为 github.com/eddycjy/pkgutil 这个库，在 GitHub 是没有的，自然也就拉取不到。</p> <p>因此，许多同学会发出灵魂质疑：Go 的依赖都必须要上传到 GitHub 吗，强绑定？</p> <p>解决方法：在 Go1.18 以前，我们会通过 replace，又或是直接上传到 Github 上，自然也就能被 Go 工具链拉取到依赖了。</p> <p>用replace指示符将该版本指向本地的module的开发目录。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>Go1.18 新特性：多模块（Multi-Module）工作区模式</h2> <p>2022 年 3 月 15 日 go 1.18 正式发布，新版本除了对性能的提升之外，还引入了很多新功能，其中就有 go 期盼已久的功能泛型(Generics)，同时还引入的多模块工作区(Workspaces)和模糊测试(Fuzzing)。</p> <blockquote> <p>弥补了当前go module构建模式的一些不足，堪称是go module构建模式的最后一块拼图。</p> </blockquote> <p>Go 多模块工作区能够使开发者能够更容易地同时处理多个模块的工作，如:</p> <ul> <li>方便进行依赖的代码调试(打断点、修改代码)、排查依赖代码 bug</li> <li>方便同时进行多个仓库/模块并行开发调试</li> </ul> <p>go 使用的是多模块工作区，可以让开发者更容易同时处理多个模块的开发。在 Go 1.17 之前，只能使用 go.mod replace 指令来实现，如果你正巧是同时进行多个模块的开发，使用它可能是很痛苦的。每次当你想要提交代码的时候，都不得不删除掉 go.mod 中的 replace 才能使模块稳定的发布版本。</p> <p class="maodian"><a name="_lab2_1_1" rel="nofollow"></a></p> <h3>Go1.18 工作区模式</h3> <p>在社区的多轮反馈下，Michael Matloob 提出了提案《Proposal: Multi-Module Workspaces in cmd/go[1]》进行了大量的讨论和实施，在 Go1.18 正式落地。</p> <p>新提案的一个核心概念，就是增加了 go work 工作区的概念，针对的是 Go Module 的依赖管理模式。</p> <p>这个提案引入一个go.work文件用于开启Go工作区模式。<strong>go.work通过directory指示符设置一些本地路径，这些路径下的go module构成一个工作区(workspace)</strong>，Go命令可以操作这些路径下的go module，也会<strong>优先使用工作区中的go module</strong>。</p> <p>其能够在本地项目的 go.work 文件中，通过设置一系列依赖的模块本地路径，再将路径下的模块组成一个当前 Go 工程的工作区，也就是 <strong>N 个 Go Module 组成 1 个 Go Work， 工作区的读取优先级是最高的。</strong></p> <blockquote> <p>总结： 当你的本地有很多module，且这些module存在相互依赖，那么我们可以在这些module的外面建立一个Go工作区，基于这个Go工作区开发与调试这些module就变得十分方便。</p> </blockquote> <p class="maodian"><a name="_label3_1_1_0" rel="nofollow"></a></p> <span class="directory"></span><h4 id="title-0">初始化一个新的工作区</h4> <p>只要执行 go work init 就可以初始化一个新的工作区，后面跟的参数就是要生成的具体子模块 mod。</p> <p>命令如下：</p> <div class="ay1code"> <pre class="brush:bash;">go work init ./mod ./tools</pre> </div> <p>项目目录如下：</p> <div class="ay1code"> <pre class="brush:plain;">awesomeProject  ├── mod  │   ├── go.mod      // 子模块  │   └── main.go  ├── go.work         // 工作区  └── tools      ├── fish.go      └── go.mod      // 子模块</pre> </div> <h5>go work 支持命令</h5> <ul> <li>通常情况下，建议不要提交 go.work 文件到 git 上，因为它主要用于本地代码开发。</li> <li>推荐在: $GOPATH 路径下执行，生成 go.work 文件</li> <li>go work init 初始化工作区文件，用于生成 go.work 工作区文件</li> </ul> <p>初始化并写入一个新的 go.work 到当前路径下，可以指定需要添加的代码模块<br />示例: go work init ./hello 将本地仓库 hello 添加到工作区<br />hello 仓库必须是 go mod 依赖管理的仓库(./hello/go.mod 文件必须存在)</p> <h5>go work use 添加新的模块到工作区</h5> <p>use 指定使用的模块目录</p> <p>命令示例:</p> <div class="ay1code"> <pre class="brush:bash;">go work use ./example 添加一个模块到工作区</pre> </div> <p>命令示例:</p> <div class="ay1code"> <pre class="brush:bash;">go work use ./example 添加一个模块到工作区  go work use ./example ./example1 添加多个模块到工作区  go work use -r ./example 递归 ./example 目录到当前工作区  删除命令使用 go work edit -dropuse=./example 功能</pre> </div> <p>可以使用 go work use hello 添加模块，也可以手动修改 go.work 工作区添加新的模块<br /><strong>在工作区中添加了模块路径，编译的时候会自动使用 use 中的本地代码进行代码编译，和 replaces 功能类似。</strong></p> <div class="ay1code"> <pre class="brush:bash;"># 单模块结构  use ./hello  # 多模块结构  use (      ./hello      ./example  )  </pre> </div> <h5>go work edit 用于编辑 go.work 文件</h5> <p><code>go work edit</code> 用于编辑 go.work 文件<br />可以使用 edit 命令编辑和手动编辑 go.work 文件效果是相同的<br />示例:</p> <div class="ay1code"> <pre class="brush:bash;">go work edit -fmt go.work 重新格式化 go.work 文件  go work edit -replace=github.com/link1st/example=./example go.work 替换代码模块  go work edit -dropreplace=github.com/link1st/example 删除替换代码模块  go work edit -use=./example go.work 添加新的模块到工作区  go work edit -dropuse=./example go.work 从工作区中删除模块</pre> </div> <h5>go work sync 将工作区的构建列表同步到工作区的模块</h5> <p>go env GOWORK</p> <p>查看环境变量，查看当前工作区文件路径<br />可以排查工作区文件是否设置正确，go.work 路径找不到可以使用 GOWORK 指定</p> <p class="maodian"><a name="_lab2_1_2" rel="nofollow"></a></p> <h3>go.work 文件结构</h3> <p>文件结构和 go.mod 文件结构类似，支持 Go 版本号、指定工作区和需要替换的仓库<br />文件结构示例:</p> <div class="ay1code"> <pre class="brush:plain;">go 1.18    use (      ./hello      ./example  )    replace (      github.com/link1st/example =&gt; ./example1  )</pre> </div> <p>replaces 替换依赖仓库地址<br /><strong>replaces 命令与 go.mod 指令相同，用于替换项目中依赖的仓库地址</strong><br />需要注意的是 replaces 和 use 不能同时指定相同的本地路径</p> <p>错误示例<br />同时在 use 和 replace 指定相同的本地路径</p> <div class="ay1code"> <pre class="brush:plain;">go 1.18    use (      ./hello      ./example  )    replace (      github.com/link1st/example =&gt; ./example  )</pre> </div> <p class="maodian"><a name="_lab2_1_3" rel="nofollow"></a></p> <h3>go.work 文件优先级高于 go.mod 中定义在</h3> <p>同时使用 go.work 和 go.mod replace 功能的的时候分别指定不同的代码仓库路径，go.work 优先级高于 go.mod 中定义</p> <p class="maodian"><a name="_lab2_1_4" rel="nofollow"></a></p> <h3>如何禁用工作区</h3> <p>Go 全局变量 GOWORK 设置 off 则可以禁用工作区功能</p> <div class="ay1code"> <pre class="brush:bash;">export GOWORK=off</pre> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1034.htm">java.sql.ResultSet</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1036.htm">@DateTimeFormat和@JsonFormat使用</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1039.htm" title="使用Kotlin实现百思不得姐弹出菜单">使用Kotlin实现百思不得姐弹出菜单</a></li>
                        <li class="py-2"><a href="/html/category/article-1041.htm" title="JavaScript深入理解系列：call与apply">JavaScript深入理解系列：call与apply</a></li>
                        <li class="py-2"><a href="/html/category/article-1357.htm" title="pandas读取csv文件时报错的解决方式，你get到了吗？">pandas读取csv文件时报错的解决方式，你get到了吗？</a></li>
                        <li class="py-2"><a href="/html/category/article-1015.htm" title="Css 弹性布局（Flex）详细介绍（Flex 属性详解、场景分析）">Css 弹性布局（Flex）详细介绍（Flex 属性详解、场景分析）</a></li>
                        <li class="py-2"><a href="/html/category/article-1052.htm" title="Spring AOP打通两个切面之间的通信详解">Spring AOP打通两个切面之间的通信详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1059.htm" title="TypeError: Cannot read properties of undefined (reading ‘state‘)">TypeError: Cannot read properties of undefined (reading ‘state‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-1358.htm" title="Logback及其MDC功能详解">Logback及其MDC功能详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1029.htm" title="python连接数据库并执行SQL语句">python连接数据库并执行SQL语句</a></li>
                        <li class="py-2"><a href="/html/category/article-1048.htm" title="Spring Boot + Mybatis-Plus + jasypt 数据库连接加密">Spring Boot + Mybatis-Plus + jasypt 数据库连接加密</a></li>
                        <li class="py-2"><a href="/html/category/article-1347.htm" title="VUE3setup响应式函数系统API详解">VUE3setup响应式函数系统API详解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>