<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-3127.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>vuex配置项、多组件数据共享案例详解 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>vuex配置项、多组件数据共享案例详解</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li>getters 配置项</li> <li>mapState、mapGetters</li> <li>mapActions、mapMutations</li> <li>多组件共享数据</li> </ul> </div> <p> 没有看过上一篇的同学可以查看：Vue Vuex学习(搭建vuex环境、vuex求和案例)</p> <h1>getters 配置项</h1> <p><strong>index.js</strong> 中增加 getters 配置项</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>Count.vue</strong> 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h1</span><span class="token punctuation">></span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h1</span><span class="token punctuation">></span></span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/4903191c1d43bf651694443206693635.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /><strong>总结</strong><br /> 1.概念：当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工<br /> 2.在<code>store.js</code>中追加<code>getters</code> 配置</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>3.组件中读取数据：<code>$store.getters.bigSum</code></p> <h1>mapState、mapGetters</h1> <p>首先引入问题。我们在 index.js 中增加学校和学科字段</p> <pre><code class="prism language-js"><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//当前和</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">"三里屯小学"</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">"Vue"</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre> <p>Count.vue 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h1</span><span class="token punctuation">></span></span>当前求和为：{<!-- -->{$store.state.sum}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>我在：{<!-- -->{$store.state.school}}学习{<!-- -->{$store.state.subject}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span></code></pre> <p>查看下当前效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/a8e3e5441375a2dbc196a9ff914dec94.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 我们发现每次取值时都是<code>store.state.xxx</code>或者<code>$store.getters.xxx</code>，太长了，有的同学想到了写计算属性来简化</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h1</span><span class="token punctuation">></span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span>  computed:{     he(){       return this.$store.state.sum     },     xuexiao(){       return this.$store.state.school     },     xueke(){       return this.$store.state.subject     }   }</code></pre> <p>当然可以使用要学习的这个<code>mapState</code></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h1</span><span class="token punctuation">></span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span> 	computed:{     	//借助mapstate生成计算属性，从state中读取数据（对象写法）     	...mapState({he:"sum",xuexiao:"school",xueke:"subject"})     	//或者     	//借助mapstate生成计算属性，从state中读取数据（数组写法）    		...mapState(['sum','school',"subject"])   	},</code></pre> <p>其中…这里是 ES6 的语法，举个例子</p> <pre><code class="prism language-js"><span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">...</span>obj1<span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">}</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/7bb05e93e5adf2c42ccda763b7632a09.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 所以<code>...mapState({he:"sum",xuexiao:"school",xueke:"subject"})</code>就相当于我们在 computed 中增加了开始写的那一堆方法</p> <p>同样 mapGetters</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token punctuation">></span></span>当前求和10倍为：{<!-- -->{ bigSum }}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span>  computed: {    ......     //...mapGetters({bigSum:'bigSum'})     ...mapGetters(['bigSum'])   },</code></pre> <h1>mapActions、mapMutations</h1> <p>mapMutations 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>decrement(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span>  	methods: {     /*increment() {       this.$store.commit("JIA", this.n);     },     decrement() {       this.$store.commit("JIAN", this.n);     },*/     ...mapMutations({"increment":"JIA","decrement":"JIAN"}),    ......   }</code></pre> <p>mapMutations 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIA(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIAN(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span>  	//借助 mapMutations 生成对用的方法，方法中会调用 commit去联系mutations(数组写法)     ...mapMutations(["JIA","JIAN"]),</code></pre> <p>数组的这种写法意思是生成方法名为 JIA，commit 的方法名也为 JIA 才能这样写，所以调用时，我们方法名要写 JIA，同样的也要把参数传进去<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/c9b1790a7b9c8d7d9c1ef414c2152e24.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> mapAtions 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span>      methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(对象写法) 	...mapActions({incrementOdd:"jiaOdd",incrementWait:"jiaWait"}) }</code></pre> <p>mapAtions 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span>     methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(数组写法)     ...mapActions(["jiaOdd","jiaWait"])     }</code></pre> <h1>多组件共享数据</h1> <p>现在再写一个 Person 组件，展示人员信息。要完成 Person 组件展示刚才 Count 组件中的 sum 值。而 Count 组件展示人员信息</p> <p>我们首先完成 Person 组件的人员展示和添加。首先在 index.js 中的 state 中存入<code>personList</code> 做为要展示的人员数据。然后在 Person.vue 中使用<code>v-for</code> 循环出人员数据</p> <p>然后实现添加人员方法。正常应该在 index.js 中的 actions 写方法，然后 commit 给 mutations，但是因为逻辑比较简单，所以我们直接在 mutations 中写一个添加人员的方法<code>ADD_PERSON</code>，然后在 Person.vue 中使用<code>this.$store.commit</code>提交添加的人员数据即可。先看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/422ece0b29d05848f0f3b01c6a754932.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> <p>完整代码如下(仅展示改动的代码)：</p> <p><strong>index.js</strong></p> <pre><code class="prism language-js"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//准备mutations；用于操作数据（state）</span><span class="token keyword">const</span> mutations<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token constant">ADD_PERSON</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mutations中的ADD_PERSON被调用了"</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>         state<span class="token punctuation">.</span>personList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//准备state；用于存储数据</span><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">personList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"001"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"张三"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"002"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"李四"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span></code></pre> <p><strong>Person.vue</strong></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>div</span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h1</span><span class="token punctuation">></span></span>人员信息<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>input</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入名字<span class="token punctuation">"</span></span><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>li</span><span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person in personList<span class="token punctuation">"</span></span><span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{<!-- -->{person.name}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>nanoid<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"nanoid"</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"Person"</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> personObj<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"ADD_PERSON"</span><span class="token punctuation">,</span>personObj<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">personList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personList<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>style</span><span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">select, button</span><span class="token punctuation">{<!-- --></span><span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>style</span><span class="token punctuation">></span></span></code></pre> <p>App.vue 中引入组件并使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>Count</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>hr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>Person</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> Count<span class="token keyword">from</span><span class="token string">"@/components/Count"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Person<span class="token keyword">from</span><span class="token string">"@/components/Person"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'App'</span><span class="token punctuation">,</span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span>Count<span class="token punctuation">,</span>Person<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>style</span><span class="token punctuation">></span></span></code></pre> <p>下面实现数据共享，我们让 Count 组件展示 Person 组件中总人数，Person 组件展示 Count 组件的求和数</p> <p>修改 Count 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Person组件的总人数为{<!-- -->{personList.length}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">"subject"</span><span class="token punctuation">,</span><span class="token string">"personList"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>script</span><span class="token punctuation">></span></span></code></pre> <p>修改 Person 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Count组件求和为{<!-- -->{sum}}<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>script</span><span class="token punctuation">></span></span></code></pre> <p>查看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/f59590800569f717e090583a9d8fc0d7.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-2830.htm">JavaScript定时器的各种案例</a></p>
                                                                        <p>下一个：<a href="/html/category/article-3128.htm">nohup: redirecting stderr to stdout</a></p>
                                                                    </div>

                                                                <div class="panel panel-default mt-5">
                                    <div class="panel-heading">
                                        <h3 class="m-0">推荐文章</h3>
                                    </div>
                                    <div class="panel-body">
                                        <ul class="p-0 x-0">
                                                                                        <li class="py-2"><a href="/html/category/article-2830.htm">JavaScript定时器的各种案例</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-974.htm">Spark连接Hive，进行Hive数据表的读写操作</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-935.htm">Clickhouse 用户自定义外部函数</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-899.htm">anyMatch和allMatch以及noneMatch的区别</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-893.htm">CEPH-4：ceph RadowGW对象存储功能详解</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-884.htm">webpack常见面试题</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-847.htm">使用IntelliJ IDEA 配置Maven入门教程</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-827.htm">Java两个List＜T＞ 求交集,差集,并集,去重后的并集_java</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-814.htm">mysql5.7版本的窗口函数实现</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-797.htm">抛奇怪硬币在C ++中</a></li>
                                                                                    </ul>
                                    </div>
                                </div>
                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6759.htm" title="宠物粮业务员好干吗工资高吗 宠物粮业务员好干吗工资高吗知乎">宠物粮业务员好干吗工资高吗 宠物粮业务员好干吗工资高吗知乎</a></li>
                        <li class="py-2"><a href="/html/category/article-6067.htm" title="动物医院教案（教学动物医院）">动物医院教案（教学动物医院）</a></li>
                        <li class="py-2"><a href="/html/category/article-7402.htm" title="狗狗回收站在哪（小狗回收站）">狗狗回收站在哪（小狗回收站）</a></li>
                        <li class="py-2"><a href="/html/category/article-6989.htm" title="动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）">动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-6005.htm" title="动物疫苗法律法规最新（动物疫苗法案）">动物疫苗法律法规最新（动物疫苗法案）</a></li>
                        <li class="py-2"><a href="/html/category/article-6066.htm" title="宠物粮怎样跑销售 宠物粮销售渠道">宠物粮怎样跑销售 宠物粮销售渠道</a></li>
                        <li class="py-2"><a href="/html/category/article-6804.htm" title="猫咪跑丢了一般会去哪里（猫在房间里凭空不见了）">猫咪跑丢了一般会去哪里（猫在房间里凭空不见了）</a></li>
                        <li class="py-2"><a href="/html/category/article-6154.htm" title="动物疫苗不小心扎到人身上会怎么样吗视频教程（动物打的疫苗）">动物疫苗不小心扎到人身上会怎么样吗视频教程（动物打的疫苗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7449.htm" title="动物打一针疫苗多少钱 动物打一针疫苗多少钱啊">动物打一针疫苗多少钱 动物打一针疫苗多少钱啊</a></li>
                        <li class="py-2"><a href="/html/category/article-7035.htm" title="有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)">有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>