<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-2536.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>java实现线程安全的单例模型 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>java实现线程安全的单例模型</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <blockquote> <p>单例模式：确保某要给类只有一个实例，并提供一个全局访问带你来访问这个实例。</p> </blockquote> <h1> 单例模式分为饿汉模型和懒汉模式</h1> <pre><code class="prism language-java"><span class="token comment">//饿汉模式：（线程安全）</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton1</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">// 静态私有成员变量</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Singleton1 instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 私有构造函数</span>     <span class="token keyword">private</span> <span class="token function">Singleton1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span> 　　<span class="token comment">// 静态公有工厂方法，返回唯一实例</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton1 <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> instance<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <pre><code class="prism language-java"><span class="token comment">// 懒汉模式：（线程不安全，需要通过双重检查锁定机制控制）（双检锁）</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton2</span> <span class="token punctuation">{<!-- --></span>  　　<span class="token comment">// 静态私有成员变量</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Singleton2 instance <span class="token operator">=</span> null<span class="token punctuation">;</span> 　　<span class="token comment">// 私有构造函数</span>     <span class="token keyword">private</span> <span class="token function">Singleton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span> 　　<span class="token comment">// 静态公有工厂方法，判断成员变量是否为空，不为空则实例化</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton2 <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span>             instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> instance<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>优缺点：</p> <blockquote> <p>饿汉模型不需要考虑线程安全问题，调用速度和访问速度优于懒汉模型，但是由于它不管是是否被调用都会提前创建类的实例，所以资源利用率比较低，系统加载时间比较长。<br /> 懒汉模式实现了延迟加载，但是需要克服多线程同时访问的问题，需要通过双检锁（双重检查锁定机制）来进行控制，导致性能受到一定影响。</p> </blockquote> <h1> 为什么懒汉模型线程不安全？</h1> <p><strong>假设有两个线程AB，其中A执行到检查方法，判断实例为空null,那么A会得到ture的结果，但是B线程运行，也有可能出现判断实例为空null的情况，那么两个线程都会执行instance = new Singleton();从而创建了两个实例。</strong></p> <h2> 双检锁（双重检查锁定机制）</h2> <p>为了避免以上这种尴尬的情况，需要将这两行代码加上同步锁。但这还不够完美，每次调用函数得到实例都要试图加上一个同步锁（类锁），而加锁是一个非常耗时的操作，没有必要的情况下应该尽量避免。基于这种想法，我们可以在加锁前再次判断实例是否为空。这就是双重检查锁定机制。</p> <p>还有一点，定义 instance 变量时需要使用 volatile 进行修饰，因为需要保证 instance 变量发生修改后可以及时将结果刷新到主内存中，对其他线程可见。</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton3</span> <span class="token punctuation">{<!-- --></span> 　　<span class="token comment">// 私有静态成员变量</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> Singleton3 instance <span class="token operator">=</span> null<span class="token punctuation">;</span> 　　<span class="token comment">// 私有构造函数</span>     <span class="token keyword">private</span> <span class="token function">Singleton3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span> 　　<span class="token comment">// 共有静态工厂方法</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton3 <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 　　<span class="token comment">// 判断 instance 是否为空,为空->加锁，创建实例（为了进程安全，再次判断），不为空->返回实例</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>Singleton3<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span>                     instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> instance<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h1> 使用静态内部类创建实例（推荐使用）</h1> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span><span class="token punctuation">{<!-- --></span> 	<span class="token comment">//私有构造函数</span> 	<span class="token keyword">private</span> <span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	<span class="token punctuation">}</span>     <span class="token comment">//静态内部类</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">HolderClass</span><span class="token punctuation">{<!-- --></span>     	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Singleton instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> 	<span class="token comment">//静态公有工厂方法，返回内部类中创建的实现</span> 	<span class="token keyword">public</span> <span class="token keyword">static</span> singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> HolderClass<span class="token punctuation">.</span>instance<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <blockquote> <p>加载Singleton类的过程中，会为类变量在方法区中分配内存空间并初始化，但是，<strong>并不会加载静态内部类HolderClass</strong>.<br /> 当调用Singleton.getInstance()，执行return HolderClass.instance语句时，HolderClass类才会被加载，instance对象才会被初始化。</p> </blockquote> <p>上面的解释说明使用静态内部类创建实例是 懒加载 的； HolderClass 只会加载一次，保证了 instance 是单例的；类加载过程是线程安全的，保证 instance 初始化的过程是线程安全的。</p> <h1> 通过枚举实现单例模型</h1> <p>利用枚举的特性，让JVM来帮我们保证线程安全和单一实例</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> Singleton <span class="token punctuation">{<!-- --></span>      INSTANCE<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doSomething"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Singleton<span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span>   </code></pre> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-2535.htm">win11系统磁盘被写保护怎么解除</a></p>
                                                                        <p>下一个：<a href="/html/category/article-2829.htm">CSS实现文字垂直居中</a></p>
                                                                    </div>

                                                                <div class="panel panel-default mt-5">
                                    <div class="panel-heading">
                                        <h3 class="m-0">推荐文章</h3>
                                    </div>
                                    <div class="panel-body">
                                        <ul class="p-0 x-0">
                                                                                        <li class="py-2"><a href="/html/category/article-1032.htm">@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1023.htm">在C ++中替换后检查Word是否有效</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1019.htm">网络层-IP地址详解&amp;Linux配置IP地址（centos7）</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-961.htm">Go Gin框架：连接MySQL数据库</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-924.htm">win11系统如何激活超级管理员账户</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-899.htm">anyMatch和allMatch以及noneMatch的区别</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-889.htm">如何阅读一份源代码</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-871.htm">GUI编程之AWT组件详解</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-858.htm">PowerBI开发：用自然语言来探索数据&#8211;Q&amp;A</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-824.htm">GCC降级</a></li>
                                                                                    </ul>
                                    </div>
                                </div>
                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7357.htm" title="宠物店月收入多少（宠物店月收入多少钱）">宠物店月收入多少（宠物店月收入多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7218.htm" title="猫猫打疫苗要多少针多少钱（猫打疫苗一般需要多少钱）">猫猫打疫苗要多少针多少钱（猫打疫苗一般需要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7081.htm" title="动物疫苗法律法规知识培训（动物疫苗法案）">动物疫苗法律法规知识培训（动物疫苗法案）</a></li>
                        <li class="py-2"><a href="/html/category/article-7034.htm" title="宠物店的狗粮能买吗（宠物店的狗粮能买吗现在）">宠物店的狗粮能买吗（宠物店的狗粮能买吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-6667.htm" title="宠物用品批发进货渠道一件代发可以吗现在（宠物用品批发进货渠道一件代发可以吗现在）">宠物用品批发进货渠道一件代发可以吗现在（宠物用品批发进货渠道一件代发可以吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-6989.htm" title="动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）">动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-6621.htm" title="动物疫苗种类及类型分类表（动物疫苗的种类和制备原理）">动物疫苗种类及类型分类表（动物疫苗的种类和制备原理）</a></li>
                        <li class="py-2"><a href="/html/category/article-6988.htm" title="蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）">蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7173.htm" title="绿联和零度的手机壳哪个好用(绿联和零度的手机壳哪个好一点)">绿联和零度的手机壳哪个好用(绿联和零度的手机壳哪个好一点)</a></li>
                        <li class="py-2"><a href="/html/category/article-7035.htm" title="有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)">有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>