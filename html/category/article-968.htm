<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-968.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Java 树形结构数据生成导出excel文件 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>Java 树形结构数据生成导出excel文件</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="htmledit_views"> <ol> <li> <h3>效果<br /><img fetchpriority="high" decoding="async" alt="" height="484" src="http://img.555519.xyz/uploads/20230118/741dce55a5c2c9e146a1c463bdee5d5d.jpg"><br /> </h3> </li> <li> <h3>用法</h3> <pre><code class="language-java">String jsonStr = "{\"name\":\"aaa\",\"children\":[{\"name\":\"bbb\",\"children\":[{\"name\":\"eee\"},{\"name\":\"fff\",\"children\":[{\"name\":\"iii\"},{\"name\":\"jjj\",\"children\":[{\"name\":\"qqq\"},{\"name\":\"ttt\"}]}]},{\"name\":\"www\"}]},{\"name\":\"ccc\",\"children\":[{\"name\":\"ggg\"},{\"name\":\"hhh\",\"children\":[{\"name\":\"kkk\",\"children\":[{\"name\":\"ttt\"},{\"name\":\"mmm\"}]},{\"name\":\"uuu\"}]},{\"name\":\"ooo\"}]},{\"name\":\"ddd\",\"children\":[{\"name\":\"ggg\"},{\"name\":\"hhh\",\"children\":[{\"name\":\"kkk\"},{\"name\":\"uuu\"}]}]}]}"; Map tree = JSONObject.parseObject(jsonStr, Map.class); tree2Excel(tree, "E:\\" + System.currentTimeMillis() + ".xls", "name", "children");</code></pre> </li> <li> <h3>源码<br /> &nbsp;</h3> <pre><code class="language-java">package pers.xxx.demo.tree2excel;  import org.apache.poi.hssf.usermodel.HSSFWorkbook; import org.apache.poi.ss.usermodel.*; import org.apache.poi.xssf.usermodel.XSSFWorkbook;  import java.io.Closeable; import java.io.File; import java.io.FileOutputStream; import java.io.IOException; import java.util.List; import java.util.Map;  /**  * 树形结构数据导出excel工具  * &lt;p&gt;  * Created by lzy on 2021/2/24 14:09  */ @SuppressWarnings("ALL") public class Tree2ExcelUtil {      /**      * 树形结构数据生成excel文件      *      * @param tree     树形数据      * @param filePath 文件路径      * @return      */     public static boolean tree2Excel(Map tree, String filePath) {         return tree2Excel(tree, filePath, null, null);     }      /**      * 树形结构数据生成excel文件      *      * @param tree         树形数据      * @param filePath     文件路径      * @param lableName    标签Key名称      * @param childrenName 子节点Key名称      * @return      */     public static boolean tree2Excel(Map tree, String filePath, String lableName, String childrenName) {         if (isBlank(filePath)) {             System.err.println("文件名称不能为空");             return false;         }         try {             doSame(tree, lableName, childrenName);             createExcel(filePath, tree);             return true;         } catch (IOException e) {             e.printStackTrace();         }         return false;     }      /**      * 树形结构数据生成Workbook对象      *      * @param tree    树形数据      * @param fileSuf 文件后缀，xls/xlsx      * @return      */     public static Workbook tree2Worbook(Map tree, String fileSuf) {         return tree2Worbook(tree, fileSuf, null, null);     }      /**      * 树形结构数据生成Workbook对象      *      * @param tree         树形数据      * @param fileSuf      文件后缀，xls/xlsx      * @param lableName    标签Key名称      * @param childrenName 子节点Key名称      * @return      */     public static Workbook tree2Worbook(Map tree, String fileSuf, String lableName, String childrenName) {         if (isBlank(fileSuf)) {             System.err.println("必须指定文件后缀");             return null;         }         try {             doSame(tree, lableName, childrenName);             return procesData(tree, fileSuf);         } catch (Exception e) {             e.printStackTrace();         }         return null;     }       //具体实现      /**      * 标识最大列      */     private static int maxCol = 0;     private static String lableName = "lable";     private static String childrenName = "children";     private static final String COL = "col";     private static final String ROW = "row";     private static final String ROW_OFT = "rowOft";     private static final String ROW_SIZE = "rowSize";       private static void doSame(Map tree, String lableName, String childrenName) {         if (!isBlank(lableName)) {             Tree2ExcelUtil.lableName = lableName;         }         if (!isBlank(childrenName)) {             Tree2ExcelUtil.childrenName = childrenName;         }         coreAlgoCol(tree, 1);         coreAlgoRow(tree);     }      /**      * 主要算法，计算列的坐标，计算每个节点所占行      *      * @param tree  数据      * @param col   递增的列      * @param trees 把高级别向下传递计算递增的行高      */     private static void coreAlgoCol(Map tree, int col, Map... trees) {         tree.put(COL, col);         Object childrenObj = tree.get(childrenName);         if (childrenObj != null) {             List&lt;Map&gt; children = (List&lt;Map&gt;) childrenObj;             if (children.size() &gt; 0) {                 int size = children.size() * 2 - 1;                 tree.put(ROW_SIZE, size);                 int len = trees != null ? trees.length + 1 : 1;                 Map[] arrData = new Map[len];                  if (trees != null &amp;&amp; trees.length &gt; 0) {                     for (int i = 0; i &lt; trees.length; i++) {                         Map tree1 = trees[i];                         tree1.put(ROW_SIZE, toInt(tree1.get(ROW_SIZE), 1) + size - 1);                         arrData[i] = tree1;                     }                 }                 arrData[len - 1] = tree;                 for (Map tree1 : children) {                     int newCol = col + 1;                     if (newCol &gt; maxCol) {                         maxCol = newCol;                     }                     coreAlgoCol(tree1, newCol, arrData);                 }             }         }     }      /**      * 主要算法，计算行的坐标      *      * @param tree      */     private static void coreAlgoRow(Map tree) {         if (toInt(tree.get(ROW)) == 0) {             tree.put(ROW, Math.round(toInt(tree.get(ROW_SIZE), 1) / 2.0f));         }         Object childrenObj = tree.get(childrenName);         if (childrenObj != null) {             List&lt;Map&gt; children = (List&lt;Map&gt;) childrenObj;             if (children.size() &gt; 0) {                 int tempOft = toInt(tree.get(ROW_OFT));                 for (Map tree1 : children) {                     int rowSize = toInt(tree1.get(ROW_SIZE), 1);                     tree1.put(ROW_OFT, tempOft);                     tree1.put(ROW, tempOft + Math.round(rowSize / 2.0f));                     tempOft += rowSize + 1;                     coreAlgoRow(tree1);                 }             }         }     }      /**      * 创建excel文件      *      * @param filePath 文件路径，具体路径到文件名      * @param tree     数据      * @throws IOException      */     private static void createExcel(String filePath, Map tree) throws IOException {         File file = new File(filePath);         boolean bfile = file.createNewFile();         // 复制模板到新文件         if (bfile) {             Workbook wk = procesData(tree, filePath);             if (wk != null) {                 FileOutputStream fos = null;                 try {                     fos = new FileOutputStream(file);                     wk.write(fos);                      fos.flush();                 } finally {                     closeStream(fos);                     wk.close();                 }             }         }     }       /**      * 处理excel数据      *      * @param tree 数据      * @return 工作表对象      */     private static Workbook procesData(Map tree, String fileName) {          Workbook wk = null;         if (fileName.endsWith("xls")) {             wk = new HSSFWorkbook();         }         if (fileName.endsWith("xlsx")) {             wk = new XSSFWorkbook();         }         if (wk == null) {             System.err.println("文件名称不正确");             return null;         }          //创建一个sheet页         Sheet sheet = wk.createSheet("Sheet1");          int colSize = maxCol * 2 + 2;         int rowSize = toInt(tree.get(ROW_SIZE), 1);         for (int i = 0; i &lt;= rowSize; i++) {             Row row = sheet.createRow(i);             for (int j = 0; j &lt;= colSize; j++) {                 row.createCell(j);             }         }         //配置单元格背景色         CellStyle style1 = wk.createCellStyle();         style1.setFillForegroundColor(IndexedColors.LIGHT_GREEN.getIndex());         style1.setFillPattern(FillPatternType.SOLID_FOREGROUND);         CellStyle style2 = wk.createCellStyle();         style2.setFillForegroundColor(IndexedColors.LIGHT_YELLOW.getIndex());         style2.setFillPattern(FillPatternType.SOLID_FOREGROUND);          dealCell(sheet, tree, style1, style2);          return wk;     }      /**      * 根据计算好的坐标填充每一个单元格      *      * @param sheet  #      * @param tree   数据      * @param style1 单元格格式      * @param style2 单元格格式      */     private static void dealCell(Sheet sheet, Map tree, CellStyle style1, CellStyle style2) {         Row row = sheet.getRow(toInt(tree.get(ROW)));         int oftCol = (toInt(tree.get(COL)) - 1) * 2 + 1;         Cell cell = row.getCell(oftCol);         cell.setCellStyle(style1);         cell.setCellValue(String.valueOf(tree.get(lableName)));          sheet.setColumnWidth(oftCol, 256 * 20);          Object childrenObj = tree.get(childrenName);         if (childrenObj != null) {             List&lt;Map&gt; children = (List&lt;Map&gt;) childrenObj;             if (children.size() &gt; 0) {                 int size = children.size();                  int startRow = toInt(children.get(0).get(ROW));                 int endRow = toInt(children.get(size - 1).get(ROW));                 int col = oftCol + 1;                 sheet.setColumnWidth(col, 256);                 for (; startRow &lt;= endRow; startRow++) {                     sheet.getRow(startRow).getCell(col).setCellStyle(style2);                 }                  for (Map child : children) {                     dealCell(sheet, child, style1, style2);                 }             }         }     }      private static int toInt(Object val) {         return toInt(val, 0);     }      private static int toInt(Object val, Integer defVal) {         try {             return Integer.parseInt(String.valueOf(val));         } catch (NumberFormatException ignored) {         }         return defVal;     }      private static boolean isBlank(String str) {         return str == null || str.trim().length() == 0;     }      /**      * 关闭流      *      * @param closeables 不定长数组 流对象      */     public static void closeStream(Closeable... closeables) {         for (Closeable closeable : closeables) {             if (closeable != null) {                 try {                     closeable.close();                 } catch (IOException e) {                     e.printStackTrace();                 }             }         }     }  }</code></pre> </li> </ol> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-967.htm">Flask中请求数据的获取和返回响应</a></p>
                                                                        <p>下一个：<a href="/html/category/article-969.htm">python三大器物&#8212;装饰器</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2246.htm" title="Java中自定义注解的使用">Java中自定义注解的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-3128.htm" title="nohup: redirecting stderr to stdout">nohup: redirecting stderr to stdout</a></li>
                        <li class="py-2"><a href="/html/category/article-3735.htm" title="RabbitMQ第三个实操小案例——发布者/订阅者（Publish/Subscribe）">RabbitMQ第三个实操小案例——发布者/订阅者（Publish/Subscribe）</a></li>
                        <li class="py-2"><a href="/html/category/article-1059.htm" title="TypeError: Cannot read properties of undefined (reading ‘state‘)">TypeError: Cannot read properties of undefined (reading ‘state‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-1327.htm" title="java-websocket断线重连">java-websocket断线重连</a></li>
                        <li class="py-2"><a href="/html/category/article-4073.htm" title="动态修改springboot中的scheduling(动态修改定时任务执行时间)">动态修改springboot中的scheduling(动态修改定时任务执行时间)</a></li>
                        <li class="py-2"><a href="/html/category/article-1037.htm" title="启动zookeeper、kafka报错，sudo java未找到">启动zookeeper、kafka报错，sudo java未找到</a></li>
                        <li class="py-2"><a href="/html/category/article-1918.htm" title="java基础面试题">java基础面试题</a></li>
                        <li class="py-2"><a href="/html/category/article-3429.htm" title="认证与授权流程与spring boot整合 spring security">认证与授权流程与spring boot整合 spring security</a></li>
                        <li class="py-2"><a href="/html/category/article-2830.htm" title="JavaScript定时器的各种案例">JavaScript定时器的各种案例</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>