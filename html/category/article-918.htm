<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-918.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>【MQTT】mqtt 服务器部署&#8211;go 生产和消费demo - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>【MQTT】mqtt 服务器部署&#8211;go 生产和消费demo</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="htmledit_views"> <h2>1. 背景</h2> <p>Golang 是谷歌开发的一种静态强类型、编译、并发和垃圾收集编程语言。围棋富有表现力，干净，高效。它的并发机制使得编写最大限度地利用多核和网络机器的程序变得容易，它的创新类型系统使得灵活和模块化的程序构造成为可能。Go 可以快速编译成机器代码，但具有垃圾收集的便利性和运行时反射的强大功能。它是一个快速的、静态类型的、编译语言的，就像一个动态类型的、直译语言的。</p> <p>MQTT 是一种基于发布/订阅模型的轻量级物联网消息传递协议，它只需要很少的代码和带宽，就可以为物联网设备提供实时可靠的消息传递服务。它适用于硬件资源有限的设备和带宽有限的网络环境。因此，MQTT 协议广泛应用于物联网、移动互联网、物联网、电力等行业。源码<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/emqx/emqx-rel"  title="GitHub - emqx/emqx-rel: Release Project for EMQ X Broker prior to 4.3. Newer releases are built here: https://github.com/emqx/emqx" rel="nofollow">GitHub - emqx/emqx-rel: Release Project for EMQ X Broker prior to 4.3. Newer releases are built here: https://github.com/emqx/emqx</a></p> <p>本文主要介绍如何在 Golang 项目中使用 paho.MQTT.Golang 客户端库，并实现客户端与 MQTT 代理之间的连接、订阅和消息传递。</p> <h2>2.&nbsp; 设计原理</h2> <p><img fetchpriority="high" decoding="async" alt="" height="806" src="http://img.555519.xyz/uploads/20230210/b07be2c60975fdc426aa9b5d76eefc64.jpg"></p> <h2>&nbsp;3. 服务部署</h2> <p><strong>方法一：命令安装</strong><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.emqx.io/docs/en/v3.0/install.html#debian"  title="Installation | EMQX 3.0 Documentation" rel="nofollow">Installation | EMQX 3.0 Documentation</a></p> <ul> <li>apt-get install lksctp-tools</li> <li>curl -s https://assets.emqx.com/scripts/install-emqx-deb.sh | sudo bash</li> <li>sudo apt-get install emqx</li> </ul> <p><strong>&nbsp;方法二：源码编译</strong></p> <ul> <li>$ git clone https://github.com/emqx/emqx-rel.git emqx-rel<br /> $ cd emqx-rel<br /> $ git checkout $(git describe --tags $(git rev-list --tags --max-count=1))<br /> $ make emqx-pkg<br /> $ ls _packages/emqx</li> </ul> <p><img decoding="async" alt="" height="1200" src="http://img.555519.xyz/uploads/20230210/3b1ae0c595ff63b61845f994f3455119.jpg"></p> <p><img decoding="async" alt="" height="1200" src="http://img.555519.xyz/uploads/20230210/fdb28ae8b182ac153f9fea952b98e114.jpg">&nbsp;</p> <h2>&nbsp;4. go 生产消费源码</h2> <p><img loading="lazy" decoding="async" alt="" height="141" src="http://img.555519.xyz/uploads/20230210/e24715133aa2932d689386a21341fe9f.jpg"></p> <p>common.go&nbsp;</p> <pre><code class="hljs">package main  import ( 	"fmt" 	mqtt "github.com/eclipse/paho.mqtt.golang" )  var broker = "你的broker ip" var port = 1883 var userName = "emqx" var passwd = "你的密码" var topic = "topic/test"  func sub(client mqtt.Client, producer bool) { 	token := client.Subscribe(topic, 1, nil) 	token.Wait() 	if producer { 		fmt.Printf("Producer subscribed to topic %s", topic) 	} else { 		fmt.Printf("Consumer subscribed to topic %s", topic) 	} } </code></pre> <p>producer.go</p> <pre><code class="hljs">package main  import ( 	"fmt" 	mqtt "github.com/eclipse/paho.mqtt.golang" 	"time" )  var messagePubHandler mqtt.MessageHandler = func(client mqtt.Client, msg mqtt.Message) { 	fmt.Printf("Producer Received message: %s from topic: %s\n", msg.Payload(), msg.Topic()) }  var connectHandler mqtt.OnConnectHandler = func(client mqtt.Client) { 	fmt.Println("Connected") }  var connectLostHandler mqtt.ConnectionLostHandler = func(client mqtt.Client, err error) { 	fmt.Printf("Connect lost: %v", err) }  func producerPoint() { 	opts := mqtt.NewClientOptions() 	opts.AddBroker(fmt.Sprintf("tcp://%s:%d", broker, port)) 	opts.SetClientID("go_mqtt_producer") 	opts.SetUsername(userName) 	opts.SetPassword(passwd) 	opts.SetKeepAlive(8 * time.Second) 	opts.SetDefaultPublishHandler(messagePubHandler) 	opts.OnConnect = connectHandler 	opts.OnConnectionLost = connectLostHandler 	client := mqtt.NewClient(opts) 	if token := client.Connect(); token.Wait() &amp;&amp; token.Error() != nil { 		panic(token.Error()) 	}  	sub(client, true) 	publish(client)  	time.Sleep(30 * time.Second) 	client.Disconnect(250) }  func publish(client mqtt.Client) { 	num := 10 	for i := 0; i &lt; num; i++ { 		text := fmt.Sprintf("Message %d", i) 		token := client.Publish(topic, 0, false, text) 		token.Wait() 		time.Sleep(time.Second) 	} } </code></pre> <p>consumer.go</p> <pre><code class="hljs">package main  import ( 	"fmt" 	mqtt "github.com/eclipse/paho.mqtt.golang" 	"time" )  var messageRecHandler mqtt.MessageHandler = func(client mqtt.Client, msg mqtt.Message) { 	fmt.Printf("Clenit Received message: %s from topic: %s\n", msg.Payload(), msg.Topic()) }  // 其实consumer既可以收到消息，也可以发送消息 // 作为互联网硬件收集器，采集的环境信息数据（温度、湿度等）发送到broker // 作为互联网硬件执行器，可以接受broker的消息（执行指令信息，如显示文字、声音等），并根据消息执行硬件行为  func consumerPoint() { 	opts := mqtt.NewClientOptions() 	opts.AddBroker(fmt.Sprintf("tcp://%s:%d", broker, port)) 	opts.SetClientID("go_mqtt_consumer") 	opts.SetUsername(userName) 	opts.SetPassword(passwd) 	opts.SetKeepAlive(8 * time.Second) 	opts.SetDefaultPublishHandler(messageRecHandler) 	opts.OnConnect = connectHandler 	opts.OnConnectionLost = connectLostHandler 	client := mqtt.NewClient(opts) 	if token := client.Connect(); token.Wait() &amp;&amp; token.Error() != nil { 		panic(token.Error()) 	}  	sub(client, false) 	time.Sleep(30 * time.Second) 	client.Disconnect(250) } </code></pre> <p>main.go</p> <pre><code class="hljs">package main  import "time"  func main() { 	go consumerPoint() 	go producerPoint() 	time.Sleep(30 * time.Second) } </code></pre> <p>结果：</p> <p><img loading="lazy" decoding="async" alt="" height="342" src="http://img.555519.xyz/uploads/20230210/7c0eb3cd50610661bd9015b8e50c6436.jpg"></p> <h2>&nbsp;5. 小结</h2> <ol> <li>其实consumer既可以收到消息，也可以发送消息</li> <li>作为互联网硬件收集器，采集的环境信息数据（温度、湿度等）发送到broker</li> <li>作为互联网硬件执行器，可以接受broker的消息（执行指令信息，如显示文字、声音等），并根据消息执行硬件行为</li> </ol> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-917.htm">MySQL的安装和配置(超详细图文教程)</a></p>
                                                                        <p>下一个：<a href="/html/category/article-919.htm">微信小程序，自定义导航栏组件</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1025.htm" title="Spring-RabbitMQ 消费者消息确认案例实践">Spring-RabbitMQ 消费者消息确认案例实践</a></li>
                        <li class="py-2"><a href="/html/category/article-1023.htm" title="在C ++中替换后检查Word是否有效">在C ++中替换后检查Word是否有效</a></li>
                        <li class="py-2"><a href="/html/category/article-1017.htm" title="SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪">SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪</a></li>
                        <li class="py-2"><a href="/html/category/article-1635.htm" title="Vue.js 3.x 中跨层级组件如何传递数据？_在线工具">Vue.js 3.x 中跨层级组件如何传递数据？_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-1946.htm" title="dao层和serivce层的作用和区别">dao层和serivce层的作用和区别</a></li>
                        <li class="py-2"><a href="/html/category/article-1917.htm" title="css图片上面显示文字">css图片上面显示文字</a></li>
                        <li class="py-2"><a href="/html/category/article-1035.htm" title="Go1.18 新特性之多模块Multi-Module工作区模式_Golang">Go1.18 新特性之多模块Multi-Module工作区模式_Golang</a></li>
                        <li class="py-2"><a href="/html/category/article-1038.htm" title="spring boot 导入导出">spring boot 导入导出</a></li>
                        <li class="py-2"><a href="/html/category/article-1032.htm" title="@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验">@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验</a></li>
                        <li class="py-2"><a href="/html/category/article-1918.htm" title="java基础面试题">java基础面试题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>