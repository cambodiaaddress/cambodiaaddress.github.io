<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-795.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Springboot中整合knife4j接口文档 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>Springboot中整合knife4j接口文档</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<blockquote> <p>在项目开发过程中，web项目的前后端分离开发，APP开发，需要由前端后端工程师共同定义接口，编写接口文档，之后大家都根据这个接口文档进行开发。</p> </blockquote> <h1 id="什么是knife4j">什么是knife4j</h1> <p>简单说knife4j就swagger的升级版API文档的一个框架,但是用起来比swagger方便多了，UI更加丰富。</p> <h1 id="界面欣赏">界面欣赏</h1> <h2 id="主页">主页</h2> <p><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425163047.png#crop=0&crop=0&crop=1&crop=1&id=j0EnO&originHeight=674&originWidth=1658&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/></p> <h2 id="接口文档">接口文档</h2> <p><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425163318.png#crop=0&crop=0&crop=1&crop=1&id=vI3w0&originHeight=849&originWidth=1875&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/></p> <h2 id="调试界面">调试界面</h2> <p><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425163234.png#crop=0&crop=0&crop=1&crop=1&id=StKDA&originHeight=714&originWidth=1905&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/></p> <h2 id="参数实体">参数实体</h2> <p><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425163408.png#crop=0&crop=0&crop=1&crop=1&id=sPAOH&originHeight=620&originWidth=1879&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/></p> <h1 id="整合-knife4j">整合 knife4j</h1> <h2 id="引入-maven-依赖">引入maven 依赖</h2> <pre><code class="language-xml"><dependency>     <groupId>com.github.xiaoymin</groupId>     knife4j-spring-boot-starter</artifactId>     <!--在引用时请在maven中央仓库搜索3.X最新版本号-->     <version>3.0.3</version> </dependency></code></pre> <h2 id="knife4j-配置文件">knife4j 配置文件</h2> <p>创建 Knife4jConfig 文件</p> <pre><code class="language-json">package com.didiplus.common.config;  import com.github.xiaoymin.knife4j.spring.annotations.EnableKnife4j; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import springfox.documentation.builders.ApiInfoBuilder; import springfox.documentation.builders.PathSelectors; import springfox.documentation.builders.RequestHandlerSelectors; import springfox.documentation.service.ApiInfo; import springfox.documentation.spi.DocumentationType; import springfox.documentation.spring.web.plugins.Docket;  /**  * Author: didiplus  * Email: 972479352@qq.com  * CreateTime: 2022/4/25  * Desc: knife4j 配置  */ @Configuration @EnableKnife4j public class Knife4jConfig {      @Bean     public Docket createRestApi() {         return new Docket(DocumentationType.SWAGGER_2)                 .apiInfo(apiInfo())                 .select()                 .apis(RequestHandlerSelectors.basePackage("com.didiplus"))                 .paths(PathSelectors.any())                 .build();     }      private ApiInfo apiInfo() {         return new ApiInfoBuilder()                 .title("SpringBoot项目 后台服务API接口文档")                 .description("使用 knife4j 搭建的后台服务API接口文档")                 .termsOfServiceUrl("http://localhost:8080/")                 .contact("didiplus")                 .version("1.0.0")                 .build();     } }</code></pre> <h2 id="配置api接口">配置API接口</h2> <pre><code class="language-java">package com.didiplus.modules.sys.controller;  import com.didiplus.modules.sys.domain.SysDictType; import io.swagger.annotations.Api; import io.swagger.annotations.ApiOperation; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RestController;  /** * Author: didiplus * Email: 972479352@qq.com * CreateTime: 2022/4/25 * Desc: 数据字典控制器 */ @RestController @Api(tags = "数据字典") @RequestMapping("/api/sys/dictType") public class SysDictTypeController {          @ApiOperation("添加")     @PostMapping("/add")     public SysDictType add() {         SysDictType dictType = new SysDictType();         dictType.setId("1");         dictType.setTypeName("用户状态");         dictType.setTypeCode("user_type");         dictType.setDescription("用户状态");         dictType.setEnable("true");         return  dictType;     }      }</code></pre> <p>通过<code> @Api</code>注解标注需要生成接口文档，通过<code>@ApiOperation</code>注解标注接口名。   同时我们给<code>SysDictType</code>也加上对应的注解</p> <pre><code class="language-java">package com.didiplus.modules.sys.domain;  import io.swagger.annotations.ApiModel; import io.swagger.annotations.ApiModelProperty; import lombok.Data;  import javax.validation.constraints.NotEmpty;  /**  * Author: didiplus  * Email: 972479352@qq.com  * CreateTime: 2022/4/25  * Desc: 字典类型领域模型  */  @Data @ApiModel(value = "字典类型") public class SysDictType {      @ApiModelProperty("ID")     private String id;      @NotEmpty(message = "字典编码不能为空")     @ApiModelProperty(name = "字典名称",example = "用户ID")     private String typeName;      @NotEmpty(message = "字典编码不能为空")     @ApiModelProperty(value = "字典编码")     private String typeCode;      @ApiModelProperty(value = "字典描述")     private String description;      @NotEmpty(message = "字典状态不能为空")     @ApiModelProperty(value = "字典状态")     private String enable; }</code></pre> <p>通过<code>@ApiModel</code>标注这是一个参数实体，通过<code>@ApiModelProperty</code>标注字段说明。<br /> 访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8080/doc.html%E4%BD%93%E9%AA%8C%E4%B8%80%E4%B8%8B,%E5%87%BA%E7%8E%B0%E8%AE%BF%E9%97%AE%E8%B5%84%E6%BA%90%E5%BC%82%E5%B8%B8"  target="_blank" rel="nofollow">http://localhost:8080/doc.html体验一下,出现访问资源异常<br /><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/VeryCapture_20220425160840.jpg#crop=0&crop=0&crop=1&crop=1&id=i1ZRI&originHeight=660&originWidth=1697&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/><br /> 出现这个问题的原因是因为我们加上了<code> ResponseBodyAdvice</code>统一处理返回值/响应体，导致给Swagger的返回值也包装了一层，UI页面无法解析。可以通过http://localhost:8080/v2/api-docs?group=SwaggerDemo观察Swagger返回的json数据。<br /><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425161942.png#crop=0&crop=0&crop=1&crop=1&id=lQ0YY&originHeight=761&originWidth=836&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/><br /> 既然知道了问题原因那就很好解决了，我们只需要在<code>ResponseBodyAdvice</code>处理类中只转换我们自己项目的接口即可。</p> <pre><code class="language-java">@RestControllerAdvice(basePackages = "com.didiplus.modules") public class ResponseAdvice  implements ResponseBodyAdvice<Object> { ....省略.... }</code></pre> <p>详细的可以参考SpringBoot 如何统一后端返回格式。通过添加<code>basePackage</code>属性限定统一返回值的范围，这样就不影<code>Swagger</code>了 ，重启服务器再次访问<code>swagger</code>接口地址，就可以看到接口文档页面了。<br /><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425162834.png#crop=0&crop=0&crop=1&crop=1&id=sPsqC&originHeight=651&originWidth=1773&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt="" loading="lazy"/></p> <h1 id="knife4j-常用特性">knife4j 常用特性</h1> <p>knife4j 在 swagger 的基础上做了许多增强，这里介绍几个最常用的。使用增强特性需在<code>application.yml</code>中开启 。</p> <pre><code class="language-yaml">knife4j:   production: false   enable: true</code></pre> <h2 id="全局参数">全局参数</h2> <p>前后端分离开发中一般使用 token 作为请求参数进行身份与权限鉴定，有放在 query（表单）和 header（请求头）的，knife4j 对这两种都进行了支持，只需在侧边栏‘文档管理 -> 全局参数设置’中设置。<br /><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425164252.png#crop=0&crop=0&crop=1&crop=1&id=y2vTi&originHeight=588&originWidth=1573&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=stroke&title=" alt="" loading="lazy"/></p> <h2 id="离线文档">离线文档</h2> <p>有时我们需要一份离线文档可以随时随地进行查看，knife4j 支持导出四种格式（ md、html、doc 、json）的离线文档，在侧边栏‘文档管理 -> 离线文档’中导出。<br /><img decoding="async" src="https://gitee.com/didiplus/imgbed/raw/master/static/20220425164422.png#crop=0&crop=0&crop=1&crop=1&id=dpOra&originHeight=535&originWidth=1737&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt="" loading="lazy"/></p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>下一个：<a href="/html/category/article-796.htm">elemen-ui表格默认样式的修改</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4074.htm" title="win11系统怎么清理c盘垃圾文件">win11系统怎么清理c盘垃圾文件</a></li>
                        <li class="py-2"><a href="/html/category/article-4130.htm" title="C#二分查找算法_C#教程">C#二分查找算法_C#教程</a></li>
                        <li class="py-2"><a href="/html/category/article-1932.htm" title="nohup: redirecting stderr to stdout的解决办法">nohup: redirecting stderr to stdout的解决办法</a></li>
                        <li class="py-2"><a href="/html/category/article-1060.htm" title="已解决：TypeError: Cannot read properties of undefined (reading ‘value‘)">已解决：TypeError: Cannot read properties of undefined (reading ‘value‘)</a></li>
                        <li class="py-2"><a href="/html/category/article-4328.htm" title="汉字听写大赛过关技巧（中国汉字听写大会）干货满满，">汉字听写大赛过关技巧（中国汉字听写大会）干货满满，</a></li>
                        <li class="py-2"><a href="/html/category/article-4521.htm" title="动物疫苗打到人身上会怎么样吗会传染吗视频（动物注射疫苗）">动物疫苗打到人身上会怎么样吗会传染吗视频（动物注射疫苗）</a></li>
                        <li class="py-2"><a href="/html/category/article-3430.htm" title="关于Spring中@Order注解的使用">关于Spring中@Order注解的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-4485.htm" title="宠物医院美团好评回复模板 宠物医院美团好评回复模板怎么写">宠物医院美团好评回复模板 宠物医院美团好评回复模板怎么写</a></li>
                        <li class="py-2"><a href="/html/category/article-4073.htm" title="动态修改springboot中的scheduling(动态修改定时任务执行时间)">动态修改springboot中的scheduling(动态修改定时任务执行时间)</a></li>
                        <li class="py-2"><a href="/html/category/article-3761.htm" title="OpenFeign调用自定义异常处理">OpenFeign调用自定义异常处理</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>