<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-1013.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>【译】defer-panic-and-recover_在线工具 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>【译】defer-panic-and-recover_在线工具</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<p>Go 有通用的控制流程：if，for，switch，goto。它也有go语句用于让代码运行在单独的协程。这里我将讨论一些不常见的问题：defer，panic 和 recover。</p> <p><strong>defer语句</strong>将函数调用推送到列表。这个保存调用的列表在函数返回后执行。<code>defer</code>通常用于简化执行各种清理操作。</p> <p>例如，让我们看一个打开两个文件并将一个文件的内容复制到另一个文件的函数：</p> <pre><code>func CopyFile(dstName, srcName string) (written int64, err error) {     src, err := os.Open(srcName)     if err != nil {         return     }      dst, err := os.Create(dstName)     if err != nil {         return     }      written, err = io.Copy(dst, src)     dst.Close()     src.Close()     return }</code></pre> <p>这个能工作，但有一个漏洞。如果调用<code>os.Create</code> 失败，函数将在不关闭源文件的情况下返回。这可以轻松补救，在第二个<code>return</code> 语句之前调用<code>src.Close</code>，但如果函数更复杂，则问题可能不那么容易被注意到和解决。通过引入<code>defer</code>语句，我们可以确保文件始终关闭：</p> <pre><code>func CopyFile(dstName, srcName string) (written int64, err error) {     src, err := os.Open(srcName)     if err != nil {         return     }     defer src.Close()      dst, err := os.Create(dstName)     if err != nil {         return     }     defer dst.Close()      return io.Copy(dst, src) }</code></pre> <p><code>defer</code>语句允许我们在打开每个文件后立即考虑关闭它，从而保证无论函数中的<code>return</code>语句数量是多少，这些文件都将被关闭。</p> <p><code>defer</code>语句的行为是简单直接且可预测的。有三个简单的规则：</p> <p>1、当<code>defer</code>被声明时，其参数就会被计算。</p> <p>在此示例中，当<code>Println</code>调用被defer声明，将计算表达式“i”。<code>defer</code>调用将在函数返回后打印“0”。</p> <p>2、<code>defer</code>的执行顺序为先进后出。</p> <p>此函数打印“3210”：</p> <pre><code>func b() {     for i := 0; i < 4; i++ {         defer fmt.Print(i)     } }</code></pre> <p>3、<code>defer</code>可以读取有名返回值。<br /> 在此示例中，defer函数在函数返回后递增返回值<code>i</code>。因此，此函数返回2：</p> <pre><code>func c() (i int) {     defer func() { i++ }()     return 1 }</code></pre> <p>这对于修改函数的错误返回值很方便；我们很快就会看到一个这样的例子。</p> <p><code>Panic</code>是一个内置功能，可以停止普通的控制流程并开始<code>Panicing</code>。当函数<code>F</code>调用<code>panic</code>时，<code>F</code>的执行会停止，<code>F</code>中的任何<code>defer</code>函数都正常执行，然后<code>F</code>返回给其调用方。对于调用方，<code>F</code>的表现就像是<code>panic</code>。该过程继续在堆栈中向上移动，直到当前协程 中的所有函数都返回，此时程序崩溃。可以通过直接调用<code>panic</code>来启动<code>panic</code>。它们也可能是由运行时错误引起的，例如越界数组访问。</p> <p><code>recover</code>是一个内置功能，可以重新获得对正在<code>panic</code>的协程的控制。<code>recover</code>仅在<code>defer</code>函数中有用。在正常执行期间，<code>recover</code>调用将返回<code>nil</code>，并且没有其他效果。如果当前协程 出现<code>panic</code>，则调用<code>recover</code>将捕获<code>panic</code>提供的值并恢复正常执行。</p> <p>下面是一个示例程序，演示了<code>panic</code>和<code>defer</code>的机制：</p> <pre><code>package main  import "fmt"  func main() {     f()     fmt.Println("Returned normally from f.") }  func f() {     defer func() {         if r := recover(); r != nil {             fmt.Println("Recovered in f", r)         }     }()     fmt.Println("Calling g.")     g(0)     fmt.Println("Returned normally from g.") }  func g(i int) {     if i > 3 {         fmt.Println("Panicking!")         panic(fmt.Sprintf("%v", i))     }     defer fmt.Println("Defer in g", i)     fmt.Println("Printing in g", i)     g(i + 1) }</code></pre> <p>函数<code>g</code>获取<code>int i</code>，如果<code>i</code>大于 3，则会出现<code>panic</code>，否则它将使用参数<code>i+1</code>调用自己。函数<code>f</code><code>defer</code>调用<code>recover</code>并输出恢复值的函数（如果该值为非<code>nil</code>）。在继续阅读之前，请尝试想象此程序的输出可能是什么。</p> <p>程序将输出：</p> <pre><code>Calling g. Printing in g 0 Printing in g 1 Printing in g 2 Printing in g 3 Panicking! Defer in g 3 Defer in g 2 Defer in g 1 Defer in g 0 Recovered in f 4 Returned normally from f.</code></pre> <p>如果我们从<code>f</code>中删除<code>derfer</code>函数，则不会恢复<code>panic</code>，并在到达协程调用堆栈顶部时终止程序。这个修改后的程序将输出：</p> <pre><code>Calling g. Printing in g 0 Printing in g 1 Printing in g 2 Printing in g 3 Panicking! Defer in g 3 Defer in g 2 Defer in g 1 Defer in g 0 panic: 4  panic PC=0x2a9cd8 [stack trace omitted]</code></pre> <p>有关<code>panic</code>和<code>recover</code>的真实例子，请参阅<code>Go</code>标准库中的json 包。它使用一组递归函数对接口进行编码。如果在遍历该值时发生错误，则会调用<code>panic</code>将堆栈展开到最上层的函数调用，该调用将从<code>panic</code> 中恢复并返回适当的错误值（请参阅encode.go 中 encodeState 类型的“error”和“marshal”方法）。</p> <p><code>Go</code>库中的约定是，即使包在内部使用<code>panic</code>，其对外的<code>API</code>仍会展示显式错误返回值。</p> <p><code>defer</code>的其他用法（除了前面给出的<code>file.Close</code>例子）还包括释放互斥锁：</p> <pre><code>mu.Lock() defer mu.Unlock()</code></pre> <p>打印页脚：</p> <pre><code>printHeader() defer printFooter()</code></pre> <p>以及更多。</p> <p>总之，<code>defer</code>语句（有/没有<code>panic</code>和<code>recover</code>）为控制流提供了一种不同寻常且功能强大的机制。它可用于对其他编程语言中特殊用途结构实现的许多特性进行建模。试试吧。</p> <hr/> <p>原文https://golang.google.cn/blog/defer-panic-and-recover</p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1012.htm">【ASP.NET Core】自己编程来生成自签名的服务器证书</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1014.htm">EFCore 的 DbFirst 模式</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6759.htm" title="宠物粮业务员好干吗工资高吗 宠物粮业务员好干吗工资高吗知乎">宠物粮业务员好干吗工资高吗 宠物粮业务员好干吗工资高吗知乎</a></li>
                        <li class="py-2"><a href="/html/category/article-6575.htm" title="宠物食品代理怎么做的（宠物食品代工需要什么手续）">宠物食品代理怎么做的（宠物食品代工需要什么手续）</a></li>
                        <li class="py-2"><a href="/html/category/article-7264.htm" title="合肥在哪里领养狗狗的（合肥领养狗狗的网站）">合肥在哪里领养狗狗的（合肥领养狗狗的网站）</a></li>
                        <li class="py-2"><a href="/html/category/article-6198.htm" title="动物注射疫苗后过敏反应的处理方法是什么（动物注射疫苗后过敏反应的处理方法是什么意思）">动物注射疫苗后过敏反应的处理方法是什么（动物注射疫苗后过敏反应的处理方法是什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-7265.htm" title="hdpe双壁波纹管(;!)(hdpe双壁波纹管de200)">hdpe双壁波纹管(;!)(hdpe双壁波纹管de200)</a></li>
                        <li class="py-2"><a href="/html/category/article-6897.htm" title="种植牙在邢台多少钱一颗啊(种植牙在邢台多少钱一颗牙)">种植牙在邢台多少钱一颗啊(种植牙在邢台多少钱一颗牙)</a></li>
                        <li class="py-2"><a href="/html/category/article-6005.htm" title="动物疫苗法律法规最新（动物疫苗法案）">动物疫苗法律法规最新（动物疫苗法案）</a></li>
                        <li class="py-2"><a href="/html/category/article-6804.htm" title="猫咪跑丢了一般会去哪里（猫在房间里凭空不见了）">猫咪跑丢了一般会去哪里（猫在房间里凭空不见了）</a></li>
                        <li class="py-2"><a href="/html/category/article-7495.htm" title="耐安克是什么牌子（继母后妈电视剧）">耐安克是什么牌子（继母后妈电视剧）</a></li>
                        <li class="py-2"><a href="/html/category/article-7449.htm" title="动物打一针疫苗多少钱 动物打一针疫苗多少钱啊">动物打一针疫苗多少钱 动物打一针疫苗多少钱啊</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>