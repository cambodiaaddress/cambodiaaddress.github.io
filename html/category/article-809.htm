<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-809.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>ES 文档与索引介绍 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>ES 文档与索引介绍</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<p>在之前的文章中，介绍了 ES 整体的架构和内容，这篇主要针对 ES 最小的存储单位 - 文档以及由文档组成的索引进行详细介绍。</p> <p>会涉及到如下的内容：</p> <ol> <li>文档的 CURD 操作。</li> <li>Dynamic Mapping 和显示 Mapping 的区别</li> <li>常见 Mapping 类型与常见参数介绍</li> <li>Index Template 和 Dynamic Template</li> </ol> <h2 id="对文档进行操作">对文档进行操作</h2> <h3 id="单个文档-crud">单个文档 CRUD</h3> <p>和常见的数据库类似，ES 也支持 CURD 操作：</p> <p>下面展示了对单个 ES 文档的操作：</p> <table> <thead> <tr> <th>操作名称</th> <th>URL</th> <th>解释</th> </tr> </thead> <tbody> <tr> <td>Index</td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1861307/202204/1861307-20220415094752058-2069665508.png" alt="ES 文档与索引介绍"></td> <td>创建或者更新索引中的文档。在指定 id 的情况下，如果 id 存在，则会更新。如果不指定，则会创建。</td> </tr> <tr> <td>Get</td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1861307/202204/1861307-20220415094753171-240782846.png" alt="ES 文档与索引介绍"></td> <td>查询某个文档。</td> </tr> <tr> <td>Delete</td> <td>DELETE /<index>/_doc/<_id></index></td> <td>删除某个指定的文档。</td> </tr> <tr> <td>Update</td> <td>POST /<index>/_update/<_id></index></td> <td>更新某个文档中的内容，可以理解成 Patch 的更新。如果想完全替换文档，请使用 index.</td> </tr> </tbody> </table> <p>下面是实际操作文档的例子, 打开 kibana 的开发者工具：</p> <p>先来创建一个文档：</p> <p>ES 在创建文档时，会有两种方式 index 和 create。index 与 create 不同在于，在指定 id 的情况下，如果 id 存在，index 会覆盖，同时版本号+1，而 create 会报错不让创建。</p> <p>这里手动指定 id 为10，使用 index 方法，创建了一个文档，注意版本号为 1。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3e42cf2e5b7b6b373c6af0ca9e186918.jpg" alt="ES 文档与索引介绍"></p> <p>注意再次发送同样的情况，可以看到正常执行，版本号变成 2了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/89a5948bb7df732d8f6396beab8c9fb6.jpg" alt="ES 文档与索引介绍"></p> <p>但是使用 create 方法：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/42324759fc6e72acd55cdd4b70421be0.jpg" alt="ES 文档与索引介绍"></p> <p>这里报错，显示文档已经存在。</p> <p>需要注意的 ES 这里的更新并不是正常理解的更新，而是先把老文档删掉，然后创建一个新文档出来。</p> <p>接着对文档进行更新：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/517272532d71bab4e67718a75f533047.jpg" alt="ES 文档与索引介绍"></p> <p>可以看到这里只更新 user 字段，这种更新和之前 index 那种更新不同，属于部分更新，将增加的内容 merge 进原始文档。</p> <p>对文档进行读取，这里由于之前更新了三次，所以 version = 3：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cf17aa8ba9ea9f75ebb21cb601dcba84.jpg" alt="ES 文档与索引介绍"></p> <p>删除文档就很好理解了，但有一点需要注意，删除文档时并不会立马释放空间，而是将文档标记位 deleted 状态，后台进程会在合适的时候清理这些标记位已经删除的文档。</p> <h3 id="批量文档操作">批量文档操作</h3> <p>批量写入</p> <p>相较于当个文档的操作，大批量的操作对于 ES 来说，是更为常见的场景。ES 也提供了批量 API，该 API 支持在一次 API请求中包含 4 种类型, 并且 Response 中会针对每一条操作返回一个对应的结果。</p> <pre><code>POST _bulk { "index" : { "_index" : "test", "_id" : "1" } } { "field1" : "value1" } { "delete" : { "_index" : "test", "_id" : "2" } } { "create" : { "_index" : "test", "_id" : "3" } } { "field1" : "value3" } { "update" : {"_id" : "1", "_index" : "test"} } { "doc" : {"field2" : "value2"} }</code></pre> <p>批量读取</p> <p>可以同时传入多个文档 id，进行读取，多个文档可以属于不同的索引。</p> <pre><code>GET /_mget {   "docs": [     {       "_index": "my-index-000001",       "_id": "1"     },     {       "_index": "my-index-000001",       "_id": "2"     }   ] }</code></pre> <h2 id="索引---mapping">索引 - Mapping</h2> <p>索引是多个文档的集合，体现了逻辑空间的概念。对于每个索引来说都可以设置 Mapping 和 Setting 两部分。</p> <p>其中 Mapping 定义了文档包含字段的类型与名称，以及如倒排索引，分词的一些设置。Setting 定义了如何将数据分布保存在不同的节点上。</p> <h3 id="数据类型">数据类型</h3> <p>ES 中的数据类型分为三种：</p> <ul> <li>简单类型</li> <li>复杂类型 <ul> <li>对象类型</li> <li>嵌套类型</li> </ul> </li> <li>特殊类型 <ul> <li>地理位置等</li> </ul> </li> </ul> <p>下图中显示了 ES 中常见的简单数据类型以及和 SQL 对应的关系。</p> <table> <thead> <tr> <th><strong>Elasticsearch type</strong></th> <th><strong>Elasticsearch SQL type</strong></th> <th><strong>SQL type</strong></th> <th><strong>SQL precision</strong></th> </tr> </thead> <tbody> <tr> <td><strong>Core types</strong></td> <td></td> <td></td> <td></td> </tr> <tr> <td><code>null</code></td> <td><code>null</code></td> <td>NULL</td> <td>0</td> </tr> <tr> <td><code>boolean</code></td> <td><code>boolean</code></td> <td>BOOLEAN</td> <td>1</td> </tr> <tr> <td><code>byte</code></td> <td><code>byte</code></td> <td>TINYINT</td> <td>3</td> </tr> <tr> <td><code>short</code></td> <td><code>short</code></td> <td>SMALLINT</td> <td>5</td> </tr> <tr> <td><code>integer</code></td> <td><code>integer</code></td> <td>INTEGER</td> <td>10</td> </tr> <tr> <td><code>long</code></td> <td><code>long</code></td> <td>BIGINT</td> <td>19</td> </tr> <tr> <td><code>double</code></td> <td><code>double</code></td> <td>DOUBLE</td> <td>15</td> </tr> <tr> <td><code>float</code></td> <td><code>float</code></td> <td>REAL</td> <td>7</td> </tr> <tr> <td><code>half_float</code></td> <td><code>half_float</code></td> <td>FLOAT</td> <td>3</td> </tr> <tr> <td><code>scaled_float</code></td> <td><code>scaled_float</code></td> <td>DOUBLE</td> <td>15</td> </tr> <tr> <td>keyword type family</td> <td><code>keyword</code></td> <td>VARCHAR</td> <td>32,766</td> </tr> <tr> <td><code>text</code></td> <td><code>text</code></td> <td>VARCHAR</td> <td>2,147,483,647</td> </tr> <tr> <td><code>binary</code></td> <td><code>binary</code></td> <td>VARBINARY</td> <td>2,147,483,647</td> </tr> <tr> <td><code>date</code></td> <td><code>datetime</code></td> <td>TIMESTAMP</td> <td>29</td> </tr> <tr> <td><code>ip</code></td> <td><code>ip</code></td> <td>VARCHAR</td> <td>39</td> </tr> </tbody> </table> <h3 id="dynamic-mapping">Dynamic Mapping</h3> <p>我们知道，Mapping 类似于数据库 Scheme 的定义，但回想之前对文档 CURD 的操作时，我们并未手动设置 Mapping，但可以自动创建文档，原因就在于利用了 Dynamic Mapping 的特性。就是即使索引不存在时，也可以手动创建索引，并根据文档信息自动推算出对应的 Mapping 关系。</p> <p>比如之前创建的文档，如下就是生成的 Mapping 关系，ES 自动将 company 和 user 推断为 text 字段。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1159f3e7e5b65fa348195508ea45f5d7.jpg" alt="ES 文档与索引介绍"></p> <p>当 Dynamic Mapping 也有自己的缺点：就是推算不准确，比如上面的例子，company 和 user 的字段为 keyword 类型更为合适，以至于搜索时出现一些问题。</p> <p>dynamic Mapping 可以通过<code>dynamic</code> 字段进行控制, 其值为 true，false，strict 三种类型。</p> <p>对于已经创建的索引，在修改 Mapping 分为两种情况：</p> <ul> <li>增加新的字段： <ul> <li>dynamic 为 true，新字段写入后，Mapping 也会被更新</li> <li>dynamic 为 false，字段可以写入到 _source, 但 Mapping 不会被更新，自然也不会被索引</li> <li>dynamic 为 strict，不允许写入</li> </ul> </li> <li>修改已经存在字段的类型： <ul> <li>不允许修改，因为 Lucene 生成的倒排索引，不允许被修改。</li> <li>除非重新生成索引。</li> </ul> </li> </ul> <h3 id="显示指定-mapping">显示指定 Mapping</h3> <p>与 Dynamic Mapping 不同，显示指定 Mapping 可以允许我们手动指定 Mapping 结构。</p> <p>编写 Mapping 有两种方式：</p> <ul> <li>可以参考doc</li> <li>利用 dynamic 自动创建功能，查询后，自己再编辑成想要的结构。</li> </ul> <p>看一个简单的例子：</p> <pre><code>PUT user  {   "user" : {     "mappings" : {       "properties" : {         "company" : {           "type" : "keyword"           "null_value": "NULL"           }         },         "name" : {           "type" : "keyword"，           "index_options": "offsets"         },         "id_card" : {           "type" : "keyword",           "index": false # 表示该字段不需要被索引，不用被搜索到         }       }   } }</code></pre> <p>"null_value"：表示对 NULL 值可以进行搜索。</p> <p>"index": false 表示该字段不需要被索引，不用被搜索到</p> <p>"index_options": "offsets" 表示对倒排索引的结构进行设置：</p> <ul> <li>docs ：表示记录 doc id</li> <li>freqs ：表示记录 doc id 和 term frequencies</li> <li>position ：表示记录 doc id 和 term frequencies 和 term position（Text 类型默认记录为 position）</li> <li>offsets:  表示记录 doc id 和 term frequencies 和 term position 以及 character offset.</li> </ul> <p>关于倒排可以查看之前写的这篇文章。</p> <h3 id="index-template-和-dynamic-template">Index Template 和 Dynamic Template</h3> <h4 id="index-template">Index Template</h4> <p>考虑到数据不断增长的情况的，就需要按照一定的规则，将数据分散在不同的 Index 中。但每次都需要为每个 Index 设置 Mapping 和 Setting 关系。</p> <p>这时 Index Template 就可以很好满足这个需求。</p> <p>在 Index Template 中，可以通过设置一个通配名称，当创建的索引的名称，满足该条件时，就会使用模板的规则。</p> <p>Note：</p> <ul> <li>模板只会在创建新索引时生效，修改模板不会影响已经创建的索引。</li> <li>可以设置多个模板，通过 "order" 参数，控制那个模板的规则生效。</li> </ul> <p>下面这个例子就是为告警建立的一个 template，当创建的名字以 alarm 开头时，就会使用该索引。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/21f577a806e9ac5ff6456dceb7f3577f.jpg" alt="ES 文档与索引介绍"></p> <h4 id="dynamic-template">Dynamic Template</h4> <p>在上面 Dynamic Mapping 的介绍中知道，ES 对于没有设置 Mapping 字段的内容，会自己推算一个类型，但这就可能造成推算类型不准确的情况。</p> <p>这时就可以用 Dynamic Template 来解决，通过规范插入的字段的名称，来指定他的类型：</p> <ul> <li>比如可以 is 开头的字段，都设置成 boolean</li> <li>long_ 开头的字段，设置成 long</li> <li>所有字符串类型，设置成 keyword</li> </ul> <p>Dynamic Template 直接作用在索引上, 看下面这个例子。</p> <pre><code>PUT my-index-000001 {   "mappings": {     "dynamic_templates": [       {         "longs_as_strings": {           "match_mapping_type": "string",           "match":   "long_*",           "unmatch": "*_text",           "mapping": {             "type": "long"           }         }       }     ]   } }  PUT my-index-000001/_doc/1 {   "long_num": "5",    "long_text": "foo"  }</code></pre> <p>当匹配到以 long 开头的字符串时并且不包含以 _text 结尾，会将其设置成 long 类。</p> <h2 id="总结">总结</h2> <p>本篇文章中，主要是对 ES 文档和索引的设置进行了说明。</p> <p>ES 文档支持 CURD 操作，但需要知道 Index 和 create 的区别在于，对于指定 id 情况下的处理方式不同。同时为了适应大数据量的读取和写入，可以用 bulk api.</p> <p>对于 ES 索引来说，在创建时，支持两种方式来指定 Setting 和 Mapping 的关系。一种 Dynamic Mapping，这种方式不需要手动设置 Index 格式，会根据文档自动的创建，但缺点在于推断的类型不不准确。而显示 Mapping，可以手动规定 index 的格式。</p> <p>考虑到数据不断增长的情况，需要将数据拆分到不同的 index 上，可以通过 IndexTemplate 实现。</p> <p>对于 Dynamic Mapping，推断不准确的情况，可以通过 Dynamic Template 手动规定创建的类型。</p> <h2 id="参考">参考</h2> <p>https://www.elastic.co/guide/en/elasticsearch/reference/7.16/docs.html</p> <p>https://www.elastic.co/guide/en/elasticsearch/reference/7.1/mapping-params.html</p> <p>https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html</p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-808.htm">netty系列之:netty中的核心编码器base64</a></p>
                                                                        <p>下一个：<a href="/html/category/article-810.htm">SpringBoot2.3应用制作Docker镜像详解</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6989.htm" title="动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）">动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-7264.htm" title="合肥在哪里领养狗狗的（合肥领养狗狗的网站）">合肥在哪里领养狗狗的（合肥领养狗狗的网站）</a></li>
                        <li class="py-2"><a href="/html/category/article-7265.htm" title="hdpe双壁波纹管(;!)(hdpe双壁波纹管de200)">hdpe双壁波纹管(;!)(hdpe双壁波纹管de200)</a></li>
                        <li class="py-2"><a href="/html/category/article-4592.htm" title="国内宠物粮食十大厂家有哪些 国内宠物粮食十大厂家有哪些品牌">国内宠物粮食十大厂家有哪些 国内宠物粮食十大厂家有哪些品牌</a></li>
                        <li class="py-2"><a href="/html/category/article-6851.htm" title="收购土狗联系方式（收购土狗联系方式长治）">收购土狗联系方式（收购土狗联系方式长治）</a></li>
                        <li class="py-2"><a href="/html/category/article-6621.htm" title="动物疫苗种类及类型分类表（动物疫苗的种类和制备原理）">动物疫苗种类及类型分类表（动物疫苗的种类和制备原理）</a></li>
                        <li class="py-2"><a href="/html/category/article-6988.htm" title="蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）">蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）</a></li>
                        <li class="py-2"><a href="/html/category/article-4448.htm" title="包含生产动物疫苗的上市公司有哪些企业的词条">包含生产动物疫苗的上市公司有哪些企业的词条</a></li>
                        <li class="py-2"><a href="/html/category/article-7310.htm" title="三国杀武将翻面有什么用（三国杀中武将翻面什么意思）">三国杀武将翻面有什么用（三国杀中武将翻面什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-6759.htm" title="宠物粮业务员好干吗工资高吗 宠物粮业务员好干吗工资高吗知乎">宠物粮业务员好干吗工资高吗 宠物粮业务员好干吗工资高吗知乎</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>