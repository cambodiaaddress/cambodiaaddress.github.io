<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-877.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>DjangoRestFramework框架三种分页功能的实现 &#8211; 在DjangoStarter项目模板中封装 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>DjangoRestFramework框架三种分页功能的实现 &#8211; 在DjangoStarter项目模板中封装</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<h2 id="前言">前言</h2> <p>继续Django后端开发系列文章。刚好遇到一个分页的需求，就记录一下。</p> <p>Django作为一个“全家桶”型的框架，本身啥都有，分页组件也是有的，但默认的分页组件没有对API开发做优化，所以DjangoRestFramework这个专门写API的框架又把Django的分页组件包装了一层，集成在<code>viewsets</code>里的时候会更方便。</p> <p>不过我们不可能一直用<code>viewsets</code>，有一部分API还是要用自由度更高的<code>ApiView</code>的，但<code>ApiView</code>里又没办法直接使用默认的分页组件，这时我们就需要封装一下。</p> <p>并且DjangoRestFramework默认的分页信息也不够全，比如没有总页数，这点我们也可以在封装的时候魔改一下。</p> <h2 id="drf中的分页方式">DRF中的分页方式</h2> <p>DRF中为我们封装了三种分页方式，分别是：</p> <ul> <li><code>PageNumberPagination</code>：顾名思义，不解释</li> <li><code>LimitOffsetPagination</code>：Offset分页</li> <li><code>CursorPagination</code>：加密分页</li> </ul> <p>本文打算只介绍最常用的第一种，后面两种同时也会做封装，但篇幅关系就不介绍了，有兴趣的同学可以尝试使用一下。</p> <h2 id="开始代码">开始代码</h2> <p>首先还是在我们的「DjangoStarter」项目中，在<code>utils</code>目录下新建一个名为<code>paginator</code>的Python Package。</p> <p>因为代码不多，我们直接写在<code>utils/paginator/__init__.py</code>文件下就好。</p> <pre><code class="language-python">from collections import OrderedDict  from django.core.paginator import Paginator from rest_framework.pagination import PageNumberPagination, LimitOffsetPagination, CursorPagination from rest_framework.response import Response   class NumberPaginator(PageNumberPagination):     """页码分页"""     def __init__(             self,             page_size,             page_size_query_param='page_size',             page_query_param='page',             max_page_size=None     ):         """         初始化分页          :param page_size: 每页显示多少条         :param page_size_query_param: URL中每页显示条数的参数         :param page_query_param: URL中页码的参数         :param max_page_size: 最大页码数限制         """         self.page_size = page_size         self.page_size_query_param = page_size_query_param         self.page_query_param = page_query_param         self.max_page_size = max_page_size      def get_paginated_response(self, data):         paginator: Paginator = self.page.paginator          return Response(OrderedDict([             ('total_item_count', paginator.count),             ('page_count', paginator.num_pages),             ('page_number', self.page.number),             ('page_size', self.page_size),             ('next', self.get_next_link()),             ('previous', self.get_previous_link()),             ('results', data)         ]))   class LimitOffsetPaginator(LimitOffsetPagination):     """Offset分页"""     default_limit = 1     limit_query_param = 'limit'     offset_query_param = 'offset'     max_limit = 999   class CursorPaginator(CursorPagination):     """加密分页"""     cursor_query_param = 'cursor'     page_size = 1     ordering = '-id'  # 重写要排序的字段</code></pre> <p>针对前面说的“DjangoRestFramework默认的分页信息也不够全”问题，我重写了<code>get_paginated_response</code>方法，在返回值中加入这几个参数</p> <ul> <li><code>page_count</code>：总页数</li> <li><code>page_number</code>：当前页码</li> <li><code>page_size</code>：每页数量</li> </ul> <p>然后另外两个参数也改了名字，更直观，更符合我们平时的开发习惯。</p> <p><code>...</code></p> <p>这样就完成了封装，我们接下来在代码里测试一下</p> <h2 id="测试接口">测试接口</h2> <p>来写个测试接口看看效果</p> <pre><code class="language-python">from utils.paginator import NumberPaginator  @swagger_auto_schema(     method='get', operation_summary='测试分页功能',     manual_parameters=[         openapi.Parameter('page', openapi.IN_QUERY, type=openapi.TYPE_NUMBER),         openapi.Parameter('page_size', openapi.IN_QUERY, type=openapi.TYPE_NUMBER),     ]) @api_view() def test_page(request):     # 测试数据     data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]     paginator = NumberPaginator(request.query_params.get('page_size', 10))     return paginator.get_paginated_response({         'data': paginator.paginate_queryset(queryset=data, request=request)     })</code></pre> <p>配置一下路由</p> <pre><code class="language-python">urlpatterns = [     path('test_page', views.test_page), ]</code></pre> <h2 id="测试效果">测试效果</h2> <p>写完的接口接受两个参数，<code>page</code>和<code>page_size</code>，我在<code>@swagger_auto_schema</code>装饰器里声明了这两个参数，方便我们在Swagger文档中做测试。</p> <p>我们设定<code>page_size=5</code>，拿到的JSON数据是这样的：</p> <pre><code class="language-json">{   "message": "请求成功",   "code": 200,   "data": {     "total_item_count": 10,     "page_count": 2,     "page_number": 1,     "page_size": "5",     "next": "http://127.0.0.1:8005/core/test_page?page=2&page_size=5",     "previous": null,     "results": {       "data": [         1,         2,         3,         4,         5       ]     }   } }</code></pre> <p>效果不错，很清晰。</p> <p>收工。</p> <h2 id="参考资料">参考资料</h2> <ul> <li>https://www.cnblogs.com/liwenzhou/p/9398959.html</li> </ul> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-876.htm">Spring Boot拦截器示例及源码原理分析</a></p>
                                                                        <p>下一个：<a href="/html/category/article-878.htm">Feign的hystrix熔断器不起作用</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3735.htm" title="RabbitMQ第三个实操小案例——发布者/订阅者（Publish/Subscribe）">RabbitMQ第三个实操小案例——发布者/订阅者（Publish/Subscribe）</a></li>
                        <li class="py-2"><a href="/html/category/article-4408.htm" title="什么牌子女鞋鞋底软(女士鞋底比较软的鞋)">什么牌子女鞋鞋底软(女士鞋底比较软的鞋)</a></li>
                        <li class="py-2"><a href="/html/category/article-4555.htm" title="爱滋病大学生(得艾滋病的大学生)">爱滋病大学生(得艾滋病的大学生)</a></li>
                        <li class="py-2"><a href="/html/category/article-4101.htm" title="java利用RestTemplate 发送post请求">java利用RestTemplate 发送post请求</a></li>
                        <li class="py-2"><a href="/html/category/article-1931.htm" title="SpringMVC中MultipartFile转File的两种方式_java">SpringMVC中MultipartFile转File的两种方式_java</a></li>
                        <li class="py-2"><a href="/html/category/article-4298.htm" title="建议穷人养的10种猫布偶（没钱别养布偶）">建议穷人养的10种猫布偶（没钱别养布偶）</a></li>
                        <li class="py-2"><a href="/html/category/article-4521.htm" title="动物疫苗打到人身上会怎么样吗会传染吗视频（动物注射疫苗）">动物疫苗打到人身上会怎么样吗会传染吗视频（动物注射疫苗）</a></li>
                        <li class="py-2"><a href="/html/category/article-3429.htm" title="认证与授权流程与spring boot整合 spring security">认证与授权流程与spring boot整合 spring security</a></li>
                        <li class="py-2"><a href="/html/category/article-1347.htm" title="VUE3setup响应式函数系统API详解">VUE3setup响应式函数系统API详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2246.htm" title="Java中自定义注解的使用">Java中自定义注解的使用</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>