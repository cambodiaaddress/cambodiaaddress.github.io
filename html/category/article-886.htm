<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-886.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>pyspark从hive导出数据到clickhouse - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>pyspark从hive导出数据到clickhouse</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> 需求</h2> <p>从hive导出数据到clickhouse 大概有两百个字段，两千多万数据，30G左右</p> <h2> 实现</h2> <p>采用pyspark导入，先上代码</p> <pre><code class="prism language-python"><span class="token comment">#_*_ coding=UTF-8 _*_</span> <span class="token keyword">import</span> os <span class="token keyword">import</span> sys <span class="token keyword">from</span> pyspark<span class="token punctuation">.</span>sql <span class="token keyword">import</span> SparkSession   <span class="token keyword">def</span> <span class="token function">sparksession_read_hive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># .master("local[*]")</span>     spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">'bi_pharaoh_mkt_lead_detail_to_clickhouse'</span><span class="token punctuation">)</span>\         <span class="token punctuation">.</span>enableHiveSupport<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>     hive_df <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span><span class="token triple-quoted-string string">"""select       place_type                  ,sub_place_type                       from  dm.test where pt = 20220314     """</span><span class="token punctuation">)</span>      <span class="token keyword">print</span><span class="token punctuation">(</span>hive_df<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sparkcontext_read_hive读取完毕，开始准备写入'</span><span class="token punctuation">)</span>     properties <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token string">'driver'</span><span class="token punctuation">:</span> <span class="token string">'ru.yandex.clickhouse.ClickHouseDriver'</span><span class="token punctuation">,</span>                   <span class="token string">"socket_timeout"</span><span class="token punctuation">:</span> <span class="token string">"300000"</span><span class="token punctuation">,</span>                   <span class="token string">"rewriteBatchedStatements"</span><span class="token punctuation">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>                   <span class="token string">"batchsize"</span><span class="token punctuation">:</span> <span class="token string">"1000000"</span><span class="token punctuation">,</span>                   <span class="token string">"numPartitions"</span><span class="token punctuation">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                   <span class="token string">'user'</span><span class="token punctuation">:</span> <span class="token string">'user'</span><span class="token punctuation">,</span>                   <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'pass'</span><span class="token punctuation">,</span>                   <span class="token string">'isolationLevel'</span><span class="token punctuation">:</span> <span class="token string">'NONE'</span>                   <span class="token punctuation">}</span>      hive_df<span class="token punctuation">.</span>write<span class="token punctuation">.</span>jdbc<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'jdbc:clickhouse://{url}:8123/analysis'</span><span class="token punctuation">,</span>                        table<span class="token operator">=</span><span class="token string">'test_table'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'append'</span><span class="token punctuation">,</span> properties<span class="token operator">=</span>properties<span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sparksession_read_hive写入完成'</span><span class="token punctuation">)</span>     spark<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">spark_te</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">'clickhouse'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>     properties <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token string">"driver"</span><span class="token punctuation">:</span> <span class="token string">"ru.yandex.clickhouse.ClickHouseDriver"</span><span class="token punctuation">,</span>                   <span class="token string">"socket_timeout"</span><span class="token punctuation">:</span> <span class="token string">"300000"</span><span class="token punctuation">,</span>                   <span class="token string">"rewriteBatchedStatements"</span><span class="token punctuation">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>                   <span class="token string">"batchsize"</span><span class="token punctuation">:</span> <span class="token string">"1000000"</span><span class="token punctuation">,</span>                   <span class="token string">"numPartitions"</span><span class="token punctuation">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                   <span class="token string">'user'</span><span class="token punctuation">:</span> <span class="token string">'user'</span><span class="token punctuation">,</span>                   <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'pass'</span><span class="token punctuation">}</span>     df <span class="token operator">=</span> spark<span class="token punctuation">.</span>read<span class="token punctuation">.</span>jdbc<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'jdbc:clickhouse://{url}:8123/analysis'</span><span class="token punctuation">,</span>                          table<span class="token operator">=</span><span class="token string">'bi_pharaoh_mkt_lead_detail_da'</span><span class="token punctuation">,</span> properties<span class="token operator">=</span>properties<span class="token punctuation">)</span>     <span class="token comment"># spark.read.jdbc(properties=properties)</span>     <span class="token comment"># print(spark.sql('select * from default.test'))</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>     sparksession_read_hive<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># spark_te()</span> </code></pre> <h2> 1 PySpark简介</h2> <p>Apache Spark是用Scala编程语言编写的。为了用Spark支持Python，Apache Spark社区发布了一个工具PySpark。使用PySpark，您也可以使用Python编程语言处理RDD。正是由于一个名为Py4j的库，他们才能实现这一目标。<br /> 这里不介绍PySpark的环境设置，主要介绍一些实例，以便快速上手。</p> <h2> 2 PySpark - SparkContext</h2> <p>SparkContext是任何spark功能的入口点。当我们运行任何Spark应用程序时，会启动一个驱动程序，它具有main函数，并且此处启动了SparkContext。然后，驱动程序在工作节点上的执行程序内运行操作。</p> <p>SparkContext使用Py4J启动JVM并创建JavaSparkContext。默认情况下，PySpark将SparkContext作为’sc’提供，因此创建新的SparkContext将不起作用。</p> <h2> 3 PySpark - Sparksession</h2> <p>Sparksession是更上层的接口，是对sparkcontext和Spark的封装，目前官方推荐使用SparkSession作为入口，实际上SparkSession中包含了SparkContext中的大部分方法。</p> <p>RDD和DataFrame是Spark中最常用的两种数据集合。Column和Row分别是DataFrame类型中的一列和一行。</p> <p>RDD，弹性分布式数据集，集合内对象分布在不同的节点之上，可以并行执行操作，是spark应用程序的基本数据结构。RDD中的元素类型是非结构化的，可以是任意JVM对象。</p> <p>DataFrame，类似于关系型数据库中的表，相比于RDD，其内部的每一条记录都是结构化的。一般而言，推荐优先使用这种数据结构，可以轻易的在其上使用sql类操作，与hive结合较好。</p> <p>再详细解释下，上面sparksession_read_hive() 这个方法是写入的方法，spark_te()这个方法是读取clickhouse的方法。spark简单语法如下：<br /> SparkSession是新版本推荐的入口api，所有的spark操作都需要SparkSession来执行，首先，创建一个入口类，(类似于python的实例化)<br /> 语法是这样的：SparkSession.builder 然后，有下面几个函数：</p> <ul> <li>.master()： 设置运行模式，即：本地模式还是yarn模式</li> <li>appName()： 顾名思义，设置名字</li> <li>enableHiveSupport() ：这是hive接口函数，如果想要查询hive的表就需要执行这个函数</li> <li>getOrCreate(：这是最终的函数，创建或者获取。</li> </ul> <p>然后如果是同一个数据库拿这个实例直接执行sql就可以了。如果是不同数据库那就需要像我这么写了，spark.write().jdbc()<br /> spark目前好像是与hive和mysql接口集成，即如果读写hive和mysql是不需要jdbc的方式的，其他的都需要。jdbc有四个参数，url table。mode(‘append’,‘overwrite’,‘error’,等) ，properties (连接的配置 ，以字典形式传入，其中‘driver’项是驱动，是固定的，连value一起都是固定传入，其他参数可以酌情使用),<br /> spark还有其他函数，这里就不一一介绍了。</p> <p>再说说踩过的坑，一开始配置好环境，环境配置可以参考<br />在pycharm中安装spark环境<br />Hadoop安装教程 Mac版<br /> 这两个结合着看就行</p> <h2> 坑点1:</h2> <p>报错<img decoding="async" src="http://img.555519.xyz/uploads/20221230/84e2cece848498c3f2f6ea5d360c72d3.jpg" alt="pyspark从hive导出数据到clickhouse"><br /> py4j.protocol.Py4JJavaError: An error occurred while calling o75.jdbc.<br /> java.lang.ClassNotFoundException:ru.yandex.clickhouse.ClickHouseDriver<br /> 没有clickhouse的驱动，去下载一个驱动，放进spark下的jars中解决。</p> <h2> 坑点2:可以读取，不可写入</h2> <p>这里耽误了好久，因为觉得已经能够读取了，那就肯定不是驱动的事，一直在找语法上的错误，最后在网上查到缺少guava-28.0-jre.jar包<br /> 错误信息为：<br /> java.lang.NoClassDefFoundError: com/google/common/escape/Escapers<br /> or<br /> NoClassDefFoundError: Could not initialize class ru.yandex.clickhouse.ClickHouseUtil<br /> 去下载一个放进 spark中的jar下，解决，但是要注意，3.1spark自带一个guava-14.0.jar,但自带的这个jar版本不够，必须放进去更高的版本。测试几次好像最低要guava-16.jar才行。另外，网上有人遇到放进spark的jars路径下无法解决，可以试试其他路径，参考链接：<br />Caused by: java.lang.NoClassDefFoundError: com/google/common/escape/Escapers</p> <h2> 坑点3:不能overwrite</h2> <p>这个坑目前未解决，只要我用overwrite模式，就会报错，错误信息很粗略，改用append模式就能够成功写入，现在采取的方案是在执行spark程序之前先用clickhouse_driver 进行清空表的操作，然后使用append的模式写入。另外说一下，好像好多etl工具的overwrite模式好像都不怎么靠谱，动不动就报错。</p> <p>最后，成功写入</p> <p>补充：在pycharm中添加spark的环境变量：<br /> 和上面文档中提示添加的路径变量没有任何关系，重新梳理一下pycarm中的配置步骤。</p> <h2> 1.</h2> <p>创建项目，指定python解释器的版本</p> <h2> 2.</h2> <p>配置项目依赖，<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/8dfe13de608763a03af2281826049193.jpg" alt="pyspark从hive导出数据到clickhouse"><br /> py4j 将Python代码转换为Java代码的库<br /> pyspark Python的Spark编程依赖库</p> <p>选择Add Content Root，在弹出的文件选择框中，选择Spark安装目录中的python文件夹下的lib目录中的py4j和pyspark的依赖文件，点击OK，将这两个依赖加入到当前项目的依赖库中。</p> <h2> 3.</h2> <p>点击右上角的程序配置，配置环境变量，添加SPARK_HOME值为SPARK安装包的解压路径，PYSAPRK_PYTHON指定PySpark的Python命令，注意python版本为3.6+。<img decoding="async" src="http://img.555519.xyz/uploads/20221230/5d82cac599bd875f5294a414b6561e8f.jpg" alt="pyspark从hive导出数据到clickhouse"></p> <h2> 调用</h2> <pre><code class="prism language-powershell">spark-submit <span class="token operator">--</span>master yarn <span class="token operator">--</span>deploy-mode cluster <span class="token operator">--</span>name dm_bi_pharaoh_mkt_lead_detail_a_test_task <span class="token operator">--</span>queue analysis <span class="token operator">--</span>conf spark<span class="token punctuation">.</span>pyspark<span class="token punctuation">.</span>python=python3 <span class="token operator">--</span>driver-<span class="token keyword">class</span><span class="token operator">-</span>path <span class="token operator">/</span>usr/lib/spark-current/driver-jars/ <span class="token operator">--</span>num-executors 8 <span class="token operator">--</span>executor-memory 4g <span class="token operator">--</span>executor-cores 4 <span class="token operator">--</span>driver-memory 4g <span class="token operator">--</span>conf spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>execution<span class="token punctuation">.</span>arrow<span class="token punctuation">.</span>enabled=true <span class="token operator">--</span>conf spark<span class="token punctuation">.</span>kryoserializer<span class="token punctuation">.</span>buffer<span class="token punctuation">.</span>max=2008 <span class="token operator">--</span>conf spark<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>extraClassPath=<span class="token operator">/</span>usr/lib/spark-current/driver-jars/clickhouse-jdbc-0<span class="token punctuation">.</span>2<span class="token punctuation">.</span>4<span class="token punctuation">.</span>jar <span class="token operator">--</span>conf spark<span class="token punctuation">.</span>executor<span class="token punctuation">.</span>extraClassPath=<span class="token operator">/</span>usr/lib/spark-current/driver-jars/clickhouse-jdbc-0<span class="token punctuation">.</span>2<span class="token punctuation">.</span>4<span class="token punctuation">.</span>jar   <span class="token operator">/</span>mnt/disk1/server/code/<span class="token keyword">data</span><span class="token operator">-</span>integration/script/huike/etl/core/dm/bi/bi_pharaoh_mkt_lead_detail_to_clickhouse<span class="token punctuation">.</span>py </code></pre> <h2> 后续补充1</h2> <p>问题：要使用自定义模块，报错找不到模块<br /> 解决：在调用命令里添加 --py-files 参数，把自定义模块的文件（含路径）写在后面，如果有多个用英文逗号隔开。<br /> 问题：要读取配置文件，报错没有section<br /> 解决：实际错误是找不到配置文件， 没有section=空文件=没有文件。在调用命令里添加 --files 参数 把文件写在后面，如果有多个用英文逗号隔开。</p> <p><strong>注意：</strong>–py-files 文件后填写的模块在导入时不需要考虑路径的问题，直接from xxx import Xxxx ， 在–files后写的文件使用时也不需要考虑路径，直接使用文件名即可</p> <p>参考文档<br />将数据通过spark从hive导入到Clickhouse</p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-885.htm">Kafka的零拷贝原理解析</a></p>
                                                                        <p>下一个：<a href="/html/category/article-887.htm">C#多态性02</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7035.htm" title="有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)">有个熊的奢侈品牌子(很贵的那个熊摆件叫什么来着)</a></li>
                        <li class="py-2"><a href="/html/category/article-7771.htm" title="动物疫苗使用的注意事项 动物疫苗使用的注意事项有哪些">动物疫苗使用的注意事项 动物疫苗使用的注意事项有哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-7218.htm" title="猫猫打疫苗要多少针多少钱（猫打疫苗一般需要多少钱）">猫猫打疫苗要多少针多少钱（猫打疫苗一般需要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7310.htm" title="三国杀武将翻面有什么用（三国杀中武将翻面什么意思）">三国杀武将翻面有什么用（三国杀中武将翻面什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-7402.htm" title="狗狗回收站在哪（小狗回收站）">狗狗回收站在哪（小狗回收站）</a></li>
                        <li class="py-2"><a href="/html/category/article-7126.htm" title="开一家宠物店需要投资多少（开一家宠物店投资多少钱）">开一家宠物店需要投资多少（开一家宠物店投资多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7034.htm" title="宠物店的狗粮能买吗（宠物店的狗粮能买吗现在）">宠物店的狗粮能买吗（宠物店的狗粮能买吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-7081.htm" title="动物疫苗法律法规知识培训（动物疫苗法案）">动物疫苗法律法规知识培训（动物疫苗法案）</a></li>
                        <li class="py-2"><a href="/html/category/article-6989.htm" title="动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）">动物防疫疫苗的运输规定是什么（动物防疫疫苗的运输规定是什么呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-6988.htm" title="蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）">蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>