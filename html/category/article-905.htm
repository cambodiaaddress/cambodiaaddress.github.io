<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-905.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Laravel学习三：路由以及跳转和重定向用法总结 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>Laravel学习三：路由以及跳转和重定向用法总结</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="htmledit_views"> <h1>1、路由的定义规则：</h1> <p> laravel 中路由规则可以自己定义！然后去使用。路由文件的位置在routes/web.php</p> <p>1）、路由的定义格式：Route::请求方式(‘请求的URL’, 匿名函数或控制器响应的方法)</p> <p>例;Route::get(‘/’,function(){return ‘hello word’});函数的返回值，就是请求的响应。<br /> 2）、路由中请求类型:</p> <pre class="has"><code>Route::get(‘$url’, $callback); Route::post(‘$url’, $callback); Route::put(‘$url’, $callback); Route::patch(‘$url’, $callback); Route::delete(‘$url’, $callback); Route::option(‘$url’, $callback);</code></pre> <p>有时候还需要注册路由响应多个http请求，可以通过match()方法来实现，或用any()方法注册一个路由来响应所有的http请求。</p> <p>例：</p> <pre class="has"><code class="language-php">Route::match(['get','post'],'/',function(){ // }); Route::any('foo',function(){ // });</code></pre> <p>3）、路由的传参：在访问的时候也可以进行传参，传的参数要用{}括起来，参数分为可选参数和必选参数</p> <p>必选参数：有时候我们需要在路由中捕获URL片段，比如，要从URL中获得用户ID ，需要通过如下方式定义路由参数：</p> <p>可选参数：有时候可能需要指定可选的路由参数，这可以通过在参数名后面加一个？标记实现，这种情况下要给相应变量指定默认值。</p> <pre class="has"><code class="language-php">//必选参数 Route::get('user/{id}',function($id){ &nbsp; &nbsp; return 'User'.$id; }); //可选参数 Route::get('user/{name?}',function($name=null){ &nbsp; &nbsp; return $name; }); Route::get('user/{name?}',function($name='John'){ &nbsp; &nbsp; return $name; });</code></pre> <p>当你进行访问的时候，有参数而你没有传参则会报错，如果不想让他报错就需要给参数一个默认值null,在命名传参的时候要在后面加?</p> <p>例: Route::get('hello5/{id?}',function($id=null){<!-- --></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $id;</p> <p>&nbsp;});</p> <p><strong>路由参数也可以进行正则匹配</strong></p> <pre class="has"><code class="language-php">Route::get('hello6/{id?}',function($id=null){ &nbsp; &nbsp;return $id; })-&gt;where('id','[A-Za-z]+');</code></pre> <p>路由参数也可以进行多个参数，也可以进行多个参数的正则匹配</p> <pre class="has"><code class="language-php">Route::get('hello7/{id}/{name}',function($id,$name){ &nbsp; &nbsp; return $id.$name; })-&gt;where(['id'=&gt;'[0-9]+','name'=&gt;'[A-Za-z]+']);</code></pre> <p><strong>路由别名:</strong>路由别名是为了拿这个方法的路径 方法route() 是用来拿到路径的</p> <pre class="has"><code class="language-php">Route::get('user/{name?}',function($name='John'){ &nbsp; &nbsp; return $name; })-&gt;name('zhangsan');</code></pre> <p>在命令行终端，可以使用命令以下命令查看系统已经定义好的路由别名：php artisan route:list</p> <p>路由群组</p> <p>把许多有共同前缀的的路由，为了方便管理，放到同一个分组中，使用prefix指定路由前缀。</p> <pre class="has"><code class="language-php">Route::group(['prefix'=&gt;'admin'],function(){ &nbsp; &nbsp; Route::get('user',function(){ &nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp; }); &nbsp; &nbsp; Route::get('food',function(){ &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp; }); });</code></pre> <h1><strong>2、配置控制器路由</strong></h1> <p>Route::get('Index/index/{id?}','IndexController@index');</p> <p>可以把每个控制器中的方法创建成一个群组方便管理</p> <p>例:</p> <pre class="has"><code class="language-php">Route::group(['prefix'=&gt;'Index'],function(){ &nbsp;&nbsp;&nbsp;&nbsp;//welcome方法 &nbsp;&nbsp;&nbsp;Route::get('welcome','IndexController@welcome'); &nbsp;&nbsp;&nbsp;&nbsp;//member方法 &nbsp;&nbsp;&nbsp;&nbsp;Route::get('member/{id?}/{name?}','IndexController@member'); });</code></pre> <p>【注】反斜杠不一样</p> <p><img decoding="async" alt="" class="has" height="80" src="http://img.555519.xyz/uploads/20230217/8511d88f6e228a4568febc5247a5fac9.jpg"></p> <h1>3、页面渲染：</h1> <p>return view('视图文件名称');</p> <p>视图可以进行分目录管理，例如需要展示home/test/test3视图，则可以写成：return view('home/test/test3'),当然也支持点的写法：view('home.test.test3')</p> <p>控制器给视图传递的数据形式有，字符串，数组，变量等,</p> <p>view(模板文件名,数组)</p> <p>view(模板文件名)-&gt;with(数组)</p> <p>view(模板文件名)-&gt;with(名称,值)-&gt;with(名称,值)</p> <p><img fetchpriority="high" decoding="async" alt="" class="has" height="165" src="http://img.555519.xyz/uploads/20230217/5d68fc6e48ffb52670c3acbfa0100855.jpg"></p> <p>compact函数是PHP内置函数，跟laravel框架没关系,该函数的作用：用于打包数组。</p> <h1>4、控制器调用模型：</h1> <p>1：在写模型时要先继承父类模型：use Illuminate\Database\Eloquent\Model;<br /> 2：模型在控制器中的使用方式有两种：&nbsp;&nbsp;</p> <p>①直接以调用静态方法为主的形式，该形式下模型不需要实例化，例如：Member::get()等价于 DB::table('member')-&gt;get();</p> <p>②实例化模型然后再使用模型类：例如：$member=new Member();&nbsp;$member-&gt;get();</p> <h1>5、在模板中展示数据要使用两个花括号 &nbsp;&nbsp;&nbsp;{<!-- -->{展示名}}</h1> <p>例: &nbsp;{<!-- -->{$name}};</p> <h1>6、laravel跳转与响应总结</h1> <p>1、常规的直接响应，例：展示视图：return view('welcome');&nbsp;&nbsp;直接返回某个字符串:return 'hello world';</p> <p>2、ajax响应： return response()-&gt;json(需要json输出的数据)，例：</p> <pre class="has"><code class="language-php">public function test(){ &nbsp; &nbsp; $data=Member::all(); &nbsp; &nbsp; return response()-&gt;json($data); }</code></pre> <p>补充：boolean值在laravel 中是不能通过return输出的，所以response也是不能响应bool值。</p> <p>3、跳转响应（重定向）也有两种方式：return redirect('路由'); （该路由可以是完整的请求路由，也可以是通过route()+别名获取的路由） 或者&nbsp;&nbsp;return redirect()-&gt;to('路由');&nbsp;</p> <p>&nbsp;</p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-904.htm">SpringAop实现原理及代理模式</a></p>
                                                                        <p>下一个：<a href="/html/category/article-906.htm">SpringCloud是如何动态更新配置的</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1039.htm" title="使用Kotlin实现百思不得姐弹出菜单">使用Kotlin实现百思不得姐弹出菜单</a></li>
                        <li class="py-2"><a href="/html/category/article-1025.htm" title="Spring-RabbitMQ 消费者消息确认案例实践">Spring-RabbitMQ 消费者消息确认案例实践</a></li>
                        <li class="py-2"><a href="/html/category/article-1040.htm" title="Hbase(四)：Hbase原理">Hbase(四)：Hbase原理</a></li>
                        <li class="py-2"><a href="/html/category/article-1035.htm" title="Go1.18 新特性之多模块Multi-Module工作区模式_Golang">Go1.18 新特性之多模块Multi-Module工作区模式_Golang</a></li>
                        <li class="py-2"><a href="/html/category/article-1032.htm" title="@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验">@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验</a></li>
                        <li class="py-2"><a href="/html/category/article-1034.htm" title="java.sql.ResultSet">java.sql.ResultSet</a></li>
                        <li class="py-2"><a href="/html/category/article-1049.htm" title="python怎么进入虚拟环境_Python 中如何使用 virtualenv 管理虚拟环境">python怎么进入虚拟环境_Python 中如何使用 virtualenv 管理虚拟环境</a></li>
                        <li class="py-2"><a href="/html/category/article-2246.htm" title="Java中自定义注解的使用">Java中自定义注解的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-1023.htm" title="在C ++中替换后检查Word是否有效">在C ++中替换后检查Word是否有效</a></li>
                        <li class="py-2"><a href="/html/category/article-1043.htm" title="springsecurity 中 核心过滤器和请求">springsecurity 中 核心过滤器和请求</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>