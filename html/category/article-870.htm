<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-870.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/xcblog/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d4f4fa28795fc6ca740cba32a590781c.jpg" alt="使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群"></p> <h2 id="bitnami-docker-postgresql-仓库">bitnami-docker-postgresql 仓库</h2> <p>源码：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/bitnami/bitnami-docker-postgresql"  target="_blank" rel="nofollow">bitnami-docker-postgresql</a></p> <ul> <li><small><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/bitnami/bitnami-docker-postgresql"  target="_blank" rel="nofollow">https://github.com/bitnami/bitnami-docker-postgresql</a></small></li> </ul> <h2 id="流复制相关环境变量">流复制相关环境变量</h2> <p>使用以下环境变量，可以使用<code>Bitnami PostgreSQL Docker 镜像</code> 轻松设置<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.postgresql.org/docs/9.4/static/warm-standby.html#STREAMING-REPLICATION"  target="_blank" rel="nofollow">流复制</a>集群：</p> <ul> <li><code>POSTGRESQL_REPLICATION_MODE</code>: replication 模式。可能的值<code>master</code>/<code>slave</code>。没有默认值。</li> <li><code>POSTGRESQL_REPLICATION_USER</code>: 首次运行时在主服务器上创建的 replication 用户。没有默认值。</li> <li><code>POSTGRESQL_REPLICATION_PASSWORD</code>: replication 用户密码。 没有默认值。</li> <li><code>POSTGRESQL_REPLICATION_PASSWORD_FILE</code>: 包含 replication 用户密码的文件的路径。这将覆盖<code>POSTGRESQL_REPLICATION_PASSWORD</code> 中指定的值。没有默认值。</li> <li><code>POSTGRESQL_MASTER_HOST</code>: replication master（slave 参数）Hostname/IP。没有默认值。</li> <li><code>POSTGRESQL_MASTER_PORT_NUMBER</code>: replication master 的服务器端口（slave 参数）。默认是<code>5432</code>。</li> </ul> <p>在<code>复制(replication)</code>集群中，您可以拥有一个<code>主(master)</code>服务器和零个或多个<code>从(slave)</code>服务器。 启用复制后，<code>master</code> 节点处于读写模式，而<code>slave</code> 节点处于只读模式。 为了获得最佳性能，建议将读取限制在<code>slave</code> 上。</p> <ul> <li><small><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.postgresql.org/docs/9.4/static/warm-standby.html#STREAMING-REPLICATION"  target="_blank" rel="nofollow">http://www.postgresql.org/docs/9.4/static/warm-standby.html#STREAMING-REPLICATION</a></small></li> </ul> <h2 id="第-1-步创建-replication-master">第 1 步：创建 replication master</h2> <p>第一步是启动 master。</p> <pre><code class="language-console">$ docker run --name postgresql-master \   -e POSTGRESQL_REPLICATION_MODE=master \   -e POSTGRESQL_USERNAME=my_user \   -e POSTGRESQL_PASSWORD=password123 \   -e POSTGRESQL_DATABASE=my_database \   -e POSTGRESQL_REPLICATION_USER=my_repl_user \   -e POSTGRESQL_REPLICATION_PASSWORD=my_repl_password \   bitnami/postgresql:latest</code></pre> <p>在此命令中，我们使用<code>POSTGRESQL_REPLICATION_MODE=master</code> 参数将容器配置为<code>master</code> 容器。使用<code>POSTGRESQL_REPLICATION_USER</code> 和<code>POSTGRESQL_REPLICATION_PASSWORD</code> 参数指定<code>replication</code> 用户。</p> <h2 id="步骤-2创建-replication-slave">步骤 2：创建 replication slave</h2> <p>接下来我们启动一个<code>replication slave</code> 容器。</p> <pre><code class="language-console">$ docker run --name postgresql-slave \   --link postgresql-master:master \   -e POSTGRESQL_REPLICATION_MODE=slave \   -e POSTGRESQL_MASTER_HOST=master \   -e POSTGRESQL_MASTER_PORT_NUMBER=5432 \   -e POSTGRESQL_REPLICATION_USER=my_repl_user \   -e POSTGRESQL_REPLICATION_PASSWORD=my_repl_password \   bitnami/postgresql:latest</code></pre> <p>在上面的命令中，使用<code>POSTGRESQL_REPLICATION_MODE</code> 参数将容器配置为<code>slave</code>。 在<code>replication slave</code> 启动之前，<code>slave</code> 容器使用<code>POSTGRESQL_MASTER_HOST</code> 和<code>POSTGRESQL_MASTER_PORT_NUMBER</code> 参数连接到<code>master</code> 并从<code>master</code> 复制初始数据库。<code>POSTGRESQL_REPLICATION_USER</code> 和<code>POSTGRESQL_REPLICATION_PASSWORD</code> 凭证用于向<code>master</code> 进行身份验证。为了改变<code>pg_hba.conf</code> 的默认设置，<code>slave</code> 需要知道是否设置了<code>POSTGRESQL_PASSWORD</code>。</p> <p>使用这两个命令，您现在可以启动并运行一个两节点<code>PostgreSQL</code> 主从(<code>master-slave</code>)流复制集群。 您可以通过添加/删除<code>从(slave)</code>服务器来扩展集群，而不会导致任何停机。</p> <blockquote> <p><strong>Note</strong>: 集群完整地复制 master 服务器，包括所有用户和数据库。</p> </blockquote> <p>如果<code>master</code> 服务器宕机，您可以重新配置一个<code>slave</code> 服务器作为<code>master</code> 服务器并通过创建触发器文件<code>/tmp/postgresql.trigger.5432</code> 开始接受写入。例如，以下命令将<code>postgresql-slave</code> 重新配置为<code>master</code> 服务器：</p> <pre><code class="language-console">$ docker exec postgresql-slave touch /tmp/postgresql.trigger.5432</code></pre> <blockquote> <p><strong>Note</strong>: 需要更新集群中其他<code>slave</code> 服务器的配置，以便他们知道新的<code>master</code> 服务器。这将要求您根据我们的示例使用<code>--link postgresql-slave:master</code> 重新启动其他<code>slave</code> 服务器。</p> </blockquote> <p>使用<code>Docker Compose</code>，可以使用以下方式设置主从复制：</p> <pre><code class="language-yaml">version: '2'  services:   postgresql-master:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     volumes:       - 'postgresql_master_data:/bitnami/postgresql'     environment:       - POSTGRESQL_REPLICATION_MODE=master       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_USERNAME=my_user       - POSTGRESQL_PASSWORD=my_password       - POSTGRESQL_DATABASE=my_database   postgresql-slave:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     depends_on:       - postgresql-master     environment:       - POSTGRESQL_REPLICATION_MODE=slave       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_MASTER_HOST=postgresql-master       - POSTGRESQL_PASSWORD=my_password       - POSTGRESQL_MASTER_PORT_NUMBER=5432  volumes:   postgresql_master_data:</code></pre> <p>使用以下方法缩放<code>slave</code> 的数量：</p> <pre><code class="language-console">$ docker-compose up --detach --scale postgresql-master=1 --scale postgresql-slave=3</code></pre> <p>上面的命令将<code>slave</code> 的数量增加到<code>3</code>。你可以用同样的方法缩小。</p> <blockquote> <p><strong>Note</strong>: 您不应该扩大/缩小主节点的数量。始终只运行一个主节点。</p> </blockquote> <h2 id="同步提交">同步提交</h2> <p>默认情况下，<code>slave</code> 实例配置为异步复制。为了保证更高的数据稳定性（以牺牲一些性能为代价），可以使用以下环境变量设置同步提交（即，在将事务提交写入一组副本之前，事务提交不会将成功返回给客户端）。</p> <ul> <li><code>POSTGRESQL_SYNCHRONOUS_COMMIT_MODE</code>: 建立同步提交的类型。可用选项有：<code>on</code>、<code>remote_apply</code>、<code>remote_write</code>、<code>local</code> 和<code>off</code>。 默认值为<code>on</code>。有关更多信息，请查看<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT"  target="_blank" rel="nofollow">官方 PostgreSQL 文档</a>。 <ul> <li><small><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT"  target="_blank" rel="nofollow">https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT</a></small></li> </ul> </li> <li><code>POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS</code>: 确定将启用同步复制的副本数。此数量不得超过您在集群中配置的<code>slave</code> 的数量。</li> </ul> <p>使用<code>Docker Compose</code>，可以按如下方式设置带有同步提交的主从复制：</p> <pre><code class="language-yaml">version: '2'  services:   postgresql-master:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     volumes:       - 'postgresql_master_data:/bitnami/postgresql'     environment:       - POSTGRESQL_REPLICATION_MODE=master       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_USERNAME=my_user       - POSTGRESQL_PASSWORD=my_password       - POSTGRESQL_DATABASE=my_database       - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=on       - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1     volumes:       - '/path/to/postgresql-persistence:/bitnami/postgresql'   postgresql-slave:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     depends_on:       - postgresql-master     environment:       - POSTGRESQL_REPLICATION_MODE=slave       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_MASTER_HOST=postgresql-master       - POSTGRESQL_MASTER_PORT_NUMBER=5432   postgresql-slave2:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     depends_on:       - postgresql-master     environment:       - POSTGRESQL_REPLICATION_MODE=slave       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_MASTER_HOST=postgresql-master       - POSTGRESQL_MASTER_PORT_NUMBER=5432</code></pre> <p>在上面的示例中，提交需要同时写入主服务器和其中一个从服务器才能被接受。另一个<code>slave</code> 将继续使用异步复制。使用以下<code>SQL</code> 查询对其进行检查：</p> <pre><code class="language-console">postgres=# select application_name as server, state, postgres-#       sync_priority as priority, sync_state postgres-#       from pg_stat_replication; | server      | state     | priority | sync_state | |-------------|-----------|----------|------------| | walreceiver | streaming | 0        | sync       | | walreceiver | streaming | 0        | async      |</code></pre> <blockquote> <p><strong>Note:</strong> 对于更高级的设置，您可以通过设置<code>POSTGRESQL_CLUSTER_APP_NAME</code> 环境变量，使用<code>application_name</code> 参数定义不同的复制组。</p> </blockquote> <h2 id="更多">更多</h2> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/Hbs5YQ2oKcnMKHzVWrp4Tw"  target="_blank" rel="nofollow">Pgpool-II 4.3 中文手册-前言</a></li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/a1l51jpMR_ObQwmGAdI8-w"  target="_blank" rel="nofollow">pgpool-II 4.3 中文手册 - 入门教程</a></li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/1X65AAs8O1qcddf5wqpRRQ"  target="_blank" rel="nofollow">「在 Kubernetes 上运行 Pgpool-Il」实现 PostgreSQL 查询(读)负载均衡和连接池</a></li> </ul> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-869.htm">Spring Security教程（13）&#8212;- 验证码功能的实现</a></p>
                                                                        <p>下一个：<a href="/html/category/article-871.htm">GUI编程之AWT组件详解</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1044.htm" title="C ++程序，实现布斯的乘法算法来对两个有符号数相乘">C ++程序，实现布斯的乘法算法来对两个有符号数相乘</a></li>
                        <li class="py-2"><a href="/html/category/article-1026.htm" title="源码分析 Spring Security OAuth2 生成 token 的执行流程">源码分析 Spring Security OAuth2 生成 token 的执行流程</a></li>
                        <li class="py-2"><a href="/html/category/article-1040.htm" title="Hbase(四)：Hbase原理">Hbase(四)：Hbase原理</a></li>
                        <li class="py-2"><a href="/html/category/article-1003.htm" title="Druid数据库连接 | Spring Boot 集成 Druid实现数据库连接和完善的SQL执行监控">Druid数据库连接 | Spring Boot 集成 Druid实现数据库连接和完善的SQL执行监控</a></li>
                        <li class="py-2"><a href="/html/category/article-1014.htm" title="EFCore 的 DbFirst 模式">EFCore 的 DbFirst 模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1035.htm" title="Go1.18 新特性之多模块Multi-Module工作区模式_Golang">Go1.18 新特性之多模块Multi-Module工作区模式_Golang</a></li>
                        <li class="py-2"><a href="/html/category/article-1009.htm" title="k8s TLS bootstrap解析-k8s TLS bootstrap流程分析">k8s TLS bootstrap解析-k8s TLS bootstrap流程分析</a></li>
                        <li class="py-2"><a href="/html/category/article-1041.htm" title="JavaScript深入理解系列：call与apply">JavaScript深入理解系列：call与apply</a></li>
                        <li class="py-2"><a href="/html/category/article-1020.htm" title="FreeRTOS使用任务通知实现命令行解释器_操作系统">FreeRTOS使用任务通知实现命令行解释器_操作系统</a></li>
                        <li class="py-2"><a href="/html/category/article-1004.htm" title="微服务架构概述(帝炎)">微服务架构概述(帝炎)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/xcblog/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>