<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-820.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>eureka server配置_程序员笔记|详解Eureka 缓存机制 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>eureka server配置_程序员笔记|详解Eureka 缓存机制</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="htmledit_views"> <div style="text-align:center;"></div> <h2><b>引言</b></h2> <p>Eureka是Netflix开源的、用于实现服务注册和发现的服务。Spring Cloud Eureka基于Eureka进行二次封装，增加了更人性化的UI，使用更为方便。但是由于Eureka本身存在较多缓存，服务状态更新滞后，最常见的状况是：服务下线后状态没有及时更新，服务消费者调用到已下线的服务导致请求失败。<b>本文基于Spring Cloud Eureka 1.4.4.RELEASE，在默认region和zone的前提下，介绍Eureka的缓存机制。</b></p> <h2><b>一、AP特性</b></h2> <p>从CAP理论看，Eureka是一个AP系统，优先保证可用性(A)和分区容错性(P)，不保证强一致性(C)，只保证最终一致性，因此在架构中设计了较多缓存。</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/502df436670129d28964f0a2b1d421cd.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div><figcaption>   Eureka高可用架构</figcaption><h2><b>二、服务状态</b></h2> <p>Eureka服务状态enum类：<code>com.netflix.appinfo.InstanceInfo.InstanceStatus</code></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/de3841daa80c6b2437c57716ea2d7ae8.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <h2><b>三、Eureka Server</b></h2> <p>在Eureka高可用架构中，Eureka Server也可以作为Client向其他server注册，多节点相互注册组成Eureka集群，集群间相互视为peer。Eureka Client向Server注册、续约、更新状态时，接受节点更新自己的服务注册信息后，逐个同步至其他peer节点。</p> <p><b>【注意】</b>如果server-A向server-B节点单向注册，则server-A视server-B为peer节点，server-A接受的数据会同步给server-B，但server-B接受的数据不会同步给server-A。</p> <h3><b>3.1 缓存机制</b></h3> <p>Eureka Server存在三个变量：(<b>registry、readWriteCacheMap、readOnlyCacheMap</b>)保存服务注册信息，默认情况下定时任务每30s将readWriteCacheMap同步至readOnlyCacheMap，每60s清理超过90s未续约的节点，Eureka Client每30s从readOnlyCacheMap更新服务注册信息，而UI则从registry更新服务注册信息。</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/fec592f60237672450bc48a49b85eed6.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <p><b>三级缓存</b></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/82634bd7bed60079eb53615f3d47c2e7.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <p><b>缓存相关配置</b></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/4e36b7167b815be570716b93334bcf42.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <p><b>关键类</b></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/69bdae1b247bc876b4418422c2875f48.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <h2><b>四、Eureka Client</b></h2> <p>Eureka Client存在两种角色：<b>服务提供者</b>和<b>服务消费者</b>，作为服务消费者一般配合Ribbon或Feign（Feign内部使用Ribbon）使用。Eureka Client启动后，作为服务提供者立即向Server注册，默认情况下每30s续约(renew)；作为服务消费者立即向Server全量更新服务注册信息，默认情况下每30s增量更新服务注册信息；Ribbon延时1s向Client获取使用的服务注册信息，默认每30s更新使用的服务注册信息，只保存状态为UP的服务。</p> <p><b>二级缓存</b></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/6fdad8591e31b63d2de74b0319fa9431.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <p><b>缓存相关配置</b></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/30fe536a31a42b42972721be9ae2be41.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <p><b>关键类</b></p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/e2a4d590514252c967d45f161e89b1dd.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <h2><b>五、默认配置下服务消费者最长感知时间</b></h2> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/0378ad3ef582900ea794829129b772a3.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <p><b>考虑如下情况</b></p> <ul> <li>0s时服务未通知Eureka Client直接下线；</li> <li>29s时第一次过期检查evict未超过90s；</li> <li>89s时第二次过期检查evict未超过90s；</li> <li>149s时第三次过期检查evict未续约时间超过了90s，故将该服务实例从registry和readWriteCacheMap中删除；</li> <li>179s时定时任务从readWriteCacheMap更新至readOnlyCacheMap;</li> <li>209s时Eureka Client从Eureka Server的readOnlyCacheMap更新；</li> <li>239s时Ribbon从Eureka Client更新。</li> </ul> <p>因此，极限情况下服务消费者最长感知时间将无限趋近240s。</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/274cfce539a7ab604ab0432c0302e4e6.jpg" alt="eureka server配置_程序员笔记|详解Eureka 缓存机制"></div> <h2><b>六、应对措施</b></h2> <p>服务注册中心在选择使用Eureka时说明已经接受了其优先保证可用性(A)和分区容错性(P)、不保证强一致性(C)的特点。如果需要优先保证强一致性(C)，则应该考虑使用ZooKeeper等CP系统作为服务注册中心。分布式系统中一般配置多节点，单个节点服务上线的状态更新滞后并没有什么影响，这里主要考虑服务下线后状态更新滞后的应对措施。</p> <h3><b>6.1 Eureka Server</b></h3> <ul> <li>1.<b>缩短readOnlyCacheMap更新周期</b>。缩短该定时任务周期可减少滞后时间。</li> </ul> <div class="has"> <pre class="has"><code>eureka.server.responsecCacheUpdateIntervalMs: 10000  # Eureka Server readOnlyCacheMap更新周期</code></pre> </div> <ul> <li>2.<b>关闭readOnlyCacheMap</b>。中小型系统可以考虑该方案，Eureka Client直接从readWriteCacheMap更新服务注册信息。</li> </ul> <div class="has"> <pre class="has"><code>eureka.server.useReadOnlyResponseCache: false        # 是否使用readOnlyCacheMap</code></pre> </div> <h3><b>6.2 Eureka Client</b></h3> <ul> <li>1.<b>服务消费者使用容错机制</b>。如Spring Cloud Retry和Hystrix，Ribbon、Feign、Zuul都可以配置Retry，服务消费者访问某个已下线节点时一般报ConnectTimeout，这时可以通过Retry机制重试下一个节点。</li> <li>2.<b>服务消费者缩短更新周期</b>。Eureka Client和Ribbon二级缓存影响状态更新，缩短这两个定时任务周期可减少滞后时间，例如配置：</li> </ul> <div class="has"> <pre class="has"><code>eureka.client.registryFetchIntervalSeconds: 5        # Eureka Client更新周期 ribbon.ServerListRefreshInterval: 2000               # Ribbon更新周期</code></pre> </div> <ul> <li>3.<b>服务提供者保证服务正常下线</b>。服务下线时使用kill或kill -15命令，避免使用kill -9命令，kill或kill -15命令杀死进程时将触发Eureka Client的shutdown()方法，主动删除Server的registry和readWriteCacheMap中的注册信息，不必依赖Server的evict清除。</li> <li>4.<b>服务提供者延迟下线</b>。服务下线之前先调用接口使Eureka Server中保存的服务状态为DOWN或OUT_OF_SERVICE后再下线，二者时间差根据缓存机制和配置决定，比如默认情况下调用接口后延迟90s再下线服务即可保证服务消费者不会调用已下线服务实例。</li> </ul> <h2><b>七、网关实现服务下线实时感知</b></h2> <p>在软件工程中，没有一个问题是中间层解决不了的，而网关是服务提供者和服务消费者的中间层。以Spring Cloud Zuul网关为例，网关作为Eureka Client保存了服务注册信息，服务消费者通过网关将请求转发给服务提供者，只需要做到服务提供者下线时通知网关在自己保存的服务列表中使该服务失效。为了保持网关的独立性，可实现一个独立服务接收下线通知并协调网关集群。<b>下篇文章将详细介绍网关如何实现服务下线实时感知</b>，敬请期待！</p> <p>作者：冯永彪</p> <p>内容来源：</p> <p> 宜信技术学院college.creditease.cn</p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-819.htm">SpringBoot profiles 实现多环境配置</a></p>
                                                                        <p>下一个：<a href="/html/category/article-821.htm">IDEA2020配置maven环境</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7173.htm" title="绿联和零度的手机壳哪个好用(绿联和零度的手机壳哪个好一点)">绿联和零度的手机壳哪个好用(绿联和零度的手机壳哪个好一点)</a></li>
                        <li class="py-2"><a href="/html/category/article-5576.htm" title="国产狗粮排名前十品牌（国产狗粮品牌排行榜）">国产狗粮排名前十品牌（国产狗粮品牌排行榜）</a></li>
                        <li class="py-2"><a href="/html/category/article-7034.htm" title="宠物店的狗粮能买吗（宠物店的狗粮能买吗现在）">宠物店的狗粮能买吗（宠物店的狗粮能买吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-6758.htm" title="有回收狗的地方吗（狗回收中心）">有回收狗的地方吗（狗回收中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-6199.htm" title="猫咪驱虫一般多少钱一次啊（猫驱虫一次要多少钱）">猫咪驱虫一般多少钱一次啊（猫驱虫一次要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7310.htm" title="三国杀武将翻面有什么用（三国杀中武将翻面什么意思）">三国杀武将翻面有什么用（三国杀中武将翻面什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-7218.htm" title="猫猫打疫苗要多少针多少钱（猫打疫苗一般需要多少钱）">猫猫打疫苗要多少针多少钱（猫打疫苗一般需要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-6620.htm" title="孕期让猫挠了轻微出血有事吗（怀孕让猫挠了出血有事吗）">孕期让猫挠了轻微出血有事吗（怀孕让猫挠了出血有事吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7127.htm" title="宠物领养网免费同城多少钱一只（宠物领养平台）">宠物领养网免费同城多少钱一只（宠物领养平台）</a></li>
                        <li class="py-2"><a href="/html/category/article-7126.htm" title="开一家宠物店需要投资多少（开一家宠物店投资多少钱）">开一家宠物店需要投资多少（开一家宠物店投资多少钱）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>