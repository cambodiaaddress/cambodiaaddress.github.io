<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://cambodiaaddress.github.io/html/category/article-844.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Springmvc记录操作日志到数据库 - CambodiaAddress</title>
        <link rel="icon" href="/assets/addons/xcblog/img/cambodiaaddress/favicon.ico" type="image/x-icon"/>
    <!-- web-fonts -->
    <link href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,700,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <!-- off-canvas -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/mobile-menu.css" rel="stylesheet">
    <!-- font-awesome -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <!-- Flat Icon -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/cambodiaaddress/style.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?8022148af1f0848b976ee8f0e7db4477";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <div id="main-wrapper">
        <!-- Page Preloader -->
        <div id="preloader">
            <div id="status">
                <div class="status-mes"></div>
            </div>
        </div>
        <div class="uc-mobile-menu-pusher">
            <div class="content-wrapper">
                                <!-- .navbar-top -->
                <nav class="navbar m-menu navbar-default">
                    <div class="container">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                                                        <a class="navbar-brand" href="/">Cambodia Address</a>
                                                    </div>
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="#navbar-collapse-1">
                            <ul class="nav navbar-nav navbar-right main-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                        <!-- .navbar-collapse -->
                    </div>
                    <!-- .container -->
                </nav>
                <!-- .nav -->
                <section class="single-page-title single-page-title-about">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <h2>Springmvc记录操作日志到数据库</h2>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- .page-title -->
                <section class="featured-box">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                <ol class="breadcrumb">
                                  <li><a href="/">首页</a></li>
                                  <li><a href="/html/category/">文章分类</a></li>
                                  <li class="active">正文</li>
                                </ol>

                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="_0" rel="nofollow"></a>数据库字段</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230119/bdad15460a26675218d945498efcb3a8.jpg" alt="Springmvc记录操作日志到数据库"></p> <h2> <a id="_4" rel="nofollow"></a>建表语句</h2> <p>CREATE TABLE <code>log_table</code> (<br /><code>log_id</code> int(11) NOT NULL auto_increment COMMENT ‘主键’,<br /><code>log_ipAddress</code> varchar(64) default NULL COMMENT ‘请求的IP地址’,<br /><code>log_createtime</code> varchar(64) default NULL COMMENT ‘时间’,<br /><code>log_moduleName</code> varchar(128) default NULL COMMENT ‘模块名称’,<br /><code>log_desc</code> varchar(128) default NULL COMMENT ‘功能’,<br /><code>log_type</code> varchar(32) default NULL COMMENT ‘操作类型’,<br /><code>log_methodName</code> varchar(128) default NULL COMMENT ‘请求的方法名’,<br /><code>log_params</code> varchar(1000) default NULL COMMENT ‘请求的参数’,<br /><code>log_paramter</code> varchar(2000) default NULL COMMENT ‘请求的参数’,<br /> PRIMARY KEY (<code>log_id</code>)<br /> ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=‘操作日志表’;</p> <h2> <a id="applicationaopxml_19" rel="nofollow"></a>配置application-aop.xml</h2> <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans" 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	xmlns:context="http://www.springframework.org/schema/context" 	xmlns:aop="http://www.springframework.org/schema/aop" 	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"&gt; 	 	&lt;!-- 配置包扫描器，扫描@Service主键的类[此处只扫描后台的包] --&gt; 	&lt;context:component-scan base-package="com.kindergarten.log"&gt;&lt;/context:component-scan&gt;    	&lt;!-- 定义操作日志切面 --&gt; 	&lt;bean id="logAspect" class="com.kindergarten.log.LogAopAspect"&gt;&lt;/bean&gt; 	&lt;!-- 通知Spring使用cglib而不是jdk的来生成代理方法  AOP可以拦截到Controller --&gt; 	&lt;aop:aspectj-autoproxy proxy-target-class="true"&gt; 		&lt;aop:include name="logAspect"/&gt; 	&lt;/aop:aspectj-autoproxy&gt;  </code></pre> <h2> <a id="_43" rel="nofollow"></a>实体类</h2> <pre><code>package com.kindergarten.log;  public class Logentity { 	/** 	 * 主键 	 **/     private String logId = ""; 	/** 	 * 请求的IP地址 	 **/     private String logIpAddress = ""; 	/** 	 * 时间 	 **/     private String logCreatetime = ""; 	/** 	 * 模块名称 	 **/     private String logModulename = ""; 	/** 	 * 功能 	 **/     private String logDesc = "";     /** 	 * 操作类型  	 **/     private String logType = ""; 	/** 	 * 请求的方法名 	 **/     private String logMethodname = ""; 	/** 	 * 请求的参数 	 **/     private String logParams = "";    	/**    	 * 请求的参数    	 **/     private String logParamter = "";                     	public String getLogId() { 		return logId; 	} 	public void setLogId(String logId) { 		this.logId = logId; 	} 	public String getLogIpAddress() { 		return logIpAddress; 	} 	public void setLogIpAddress(String logIpAddress) { 		this.logIpAddress = logIpAddress; 	} 	public String getLogCreatetime() { 		return logCreatetime; 	} 	public void setLogCreatetime(String logCreatetime) { 		this.logCreatetime = logCreatetime; 	} 	public String getLogModulename() { 		return logModulename; 	} 	public void setLogModulename(String logModulename) { 		this.logModulename = logModulename; 	} 	public String getLogDesc() { 		return logDesc; 	} 	public void setLogDesc(String logDesc) { 		this.logDesc = logDesc; 	} 	public String getLogType() { 		return logType; 	} 	public void setLogType(String logType) { 		this.logType = logType; 	} 	public String getLogMethodname() { 		return logMethodname; 	} 	public void setLogMethodname(String logMethodname) { 		this.logMethodname = logMethodname; 	} 	public String getLogParams() { 		return logParams; 	} 	public void setLogParams(String logParams) { 		this.logParams = logParams; 	} 	public String getLogParamter() { 		return logParamter; 	} 	public void setLogParamter(String logParamter) { 		this.logParamter = logParamter; 	} 	      }  </code></pre> <h2> <a id="Service_151" rel="nofollow"></a>Service接口</h2> <pre><code>package com.kindergarten.log;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Service;  import com.kindergarten.mapper.LogMapper;  @Service public class LogServiceImpl implements LogService{ 	@Autowired 	private LogMapper logMapper; 	/** 	 *add log  	*/ 	@Override 	public void insertlog(Logentity logentity){ 		logMapper.insertlog(logentity); 	} }  </code></pre> <h2> <a id="Service_176" rel="nofollow"></a>Service</h2> <pre><code>package com.kindergarten.log;  public interface LogService { 	/** 	 *add log  	*/ 	public void insertlog(Logentity logentity); }  </code></pre> <h2> <a id="_190" rel="nofollow"></a>日志切面</h2> <pre><code>package com.kindergarten.log;  import java.lang.reflect.Method; import java.util.Date; import java.util.Map;  import javax.servlet.http.HttpServletRequest;  import org.aspectj.lang.JoinPoint; import org.aspectj.lang.annotation.AfterReturning; import org.aspectj.lang.annotation.Aspect; import org.aspectj.lang.annotation.Pointcut; import org.aspectj.lang.reflect.MethodSignature; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.core.LocalVariableTableParameterNameDiscoverer; import org.springframework.stereotype.Component; import org.springframework.web.context.request.RequestContextHolder; import org.springframework.web.context.request.ServletRequestAttributes;  import com.alibaba.fastjson.JSON; import com.kindergarten.util.DateUtil; import com.kindergarten.util.IpAddress;  import java.util.HashMap;  @Aspect @Component public class LogAopAspect { 	private static final Logger LOGGER = LoggerFactory.getLogger(LogAopAspect.class); 	@Autowired 	private LogService logService; 	 	/** 	 * Controller层切点  	 */ 	@Pointcut("@annotation(com.kindergarten.log.LogAopPointcut)") 	public void aopPoint() { 		 	} 	 	 	/** 	 * 切面 配置通知  	 */     @AfterReturning("aopPoint()")     public void saveSysLog(JoinPoint joinPoint) {         //保存日志         Logentity log = new Logentity();                  //从切面织入点处通过反射机制获取织入点处的方法         MethodSignature signature = (MethodSignature) joinPoint.getSignature();         //获取切入点所在的方法         Method method = signature.getMethod();          //获取操作         LogAopPointcut logAopPointcut = method.getAnnotation(LogAopPointcut.class);         //--------------------         if (logAopPointcut != null) {         	//模块名称             log.setLogModulename(logAopPointcut.logModulename());             //功能             log.setLogDesc(logAopPointcut.logDesc());             //操作类型             String index = logAopPointcut.logType().getIndex();             String name = logAopPointcut.logType().getLogname();             log.setLogType(name);         }                  //时间         log.setLogCreatetime(DateUtil.getDate_YMDHMS_S());         //--------------------         //获取请求的方法名         String methodName = method.getName();         log.setLogMethodname(methodName);         //--------------------         //请求的参数         Object[] args = joinPoint.getArgs();         //将参数所在的数组转换成json         String params = JSON.toJSONString(args);         log.setLogParams(params);         //--------------------         //--------------------         //创建参数名称实例         LocalVariableTableParameterNameDiscoverer discoverer = new LocalVariableTableParameterNameDiscoverer();         String[] paramterNames = discoverer.getParameterNames(method);         //传递给方法的参数数据         Map&lt;String, Object&gt; paramsMap = new HashMap&lt;String, Object&gt;();         for (int i = 0; i &lt; paramterNames.length; i++) { 			Object o = args[i]; 			if(o instanceof String || o instanceof String[]) { 				paramsMap.put(paramterNames[i], o); 			}else { 				continue; 			} 		}         String paramter = JSON.toJSONString(paramsMap);         log.setLogParamter(paramter);         //--------------------         //获取用户ip地址         HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();         log.setLogIpAddress(IpAddress.getIpAddress(request));         //-------------------- //        //获取用户名 //        sysLog.setUsername(ShiroUtils.getUserEntity().getUsername());             //调用service保存log实体类到数据库         logService.insertlog(log);     }  }  </code></pre> <h2> <a id="_309" rel="nofollow"></a>定义操作日志类别</h2> <pre><code>package com.kindergarten.log;  import java.lang.annotation.Documented; import java.lang.annotation.ElementType; import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target;  /**  * 1.CONSTRUCTOR:用于描述构造器  * 2.FIELD:用于描述域  * 3.LOCAL_VARIABLE:用于描述局部变量  * 4.METHOD:用于描述方法  * 5.PACKAGE:用于描述包  * 6.PARAMETER:用于描述参数  * 7.TYPE:用于描述类、接口(包括注解类型) 或enum声明  * */ @Target({ElementType.METHOD})//方法上 /**  * 1、RetentionPolicy.SOURCE：注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃；  * 2、RetentionPolicy.CLASS：注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期；  * 3、RetentionPolicy.RUNTIME：注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在  * */ @Retention(RetentionPolicy.RUNTIME) /**  * Documented注解表明这个注释是由 javadoc记录的，在默认情况下也有类似的记录工具。  *  如果一个类型声明被注释了文档化，它的注释成为公共API的一部分  * */ @Documented public @interface LogAopPointcut  { 	public abstract String logModulename(); 	public abstract String logDesc(); 	public abstract log_Type logType(); 	 	public static enum log_Type 	{ 		SELECT,ADD,UPDATE,DELETE,EXPORT,IMPORT; 		 		private String logname; 		private String index; 		 		public String getLogname() { 			return this.name(); 		} 		public String getIndex() { 			return String.valueOf(this.ordinal()+1); 		} 				 	} }  </code></pre> <h2> <a id="LogAopPointcut_366" rel="nofollow"></a>在需要记录的方法上使用自定义的@LogAopPointcut</h2> <h3> <a id="_367" rel="nofollow"></a>例：</h3> <h3> <a id="LogAopPointcutlogModulename__logDesc__logType__log_TypeSELECT_368" rel="nofollow"></a>例：@LogAopPointcut(logModulename = “学员模块”,logDesc = “条件查询”,logType = log_Type.SELECT)</h3> <h3> <a id="LogAopPointcutlogModulename__logDesc__logType__log_TypeSELECT_369" rel="nofollow"></a>@LogAopPointcut(logModulename = “学员模块”,logDesc = “条件删除”,logType = log_Type.SELECT)</h3> <pre><code>/** 条件查询 */ 	@RequestMapping(value = "/findStudent", produces = "application/json;charset=UTF-8") 	@ResponseBody 	@LogAopPointcut(logModulename = "学员模块",logDesc = "条件查询",logType = log_Type.SELECT) 	public String findStudent(String starttime, String endtime, String id, String name, String age) { 		List&lt;StudentEntity&gt; list = studentService.findStudent(starttime, endtime, id, name, age); 		String json = JSONArray.toJSONStringWithDateFormat(list, "yyyy-MM-dd HH:mm:ss"); 		return json; 	} </code></pre> <h2> <a id="_383" rel="nofollow"></a>数据库记录操作信息</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230119/4cad115407fd7cd58853e9007dad1b28.jpg" alt="Springmvc记录操作日志到数据库"></p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-843.htm">func-spring-boot-starter 匿名函数托管</a></p>
                                                                        <p>下一个：<a href="/html/category/article-845.htm">win11系统怎么添加XPS查看器</a></p>
                                                                    </div>

                                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1021.htm" title="electron-vite新一代electron开发构建工具_vue.js_">electron-vite新一代electron开发构建工具_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-1022.htm" title="微信小程序｜小程序自定义底部导航栏">微信小程序｜小程序自定义底部导航栏</a></li>
                        <li class="py-2"><a href="/html/category/article-1048.htm" title="Spring Boot + Mybatis-Plus + jasypt 数据库连接加密">Spring Boot + Mybatis-Plus + jasypt 数据库连接加密</a></li>
                        <li class="py-2"><a href="/html/category/article-1041.htm" title="JavaScript深入理解系列：call与apply">JavaScript深入理解系列：call与apply</a></li>
                        <li class="py-2"><a href="/html/category/article-1348.htm" title="PostMan传参给@RequestBody（接受前端参数）的方式">PostMan传参给@RequestBody（接受前端参数）的方式</a></li>
                        <li class="py-2"><a href="/html/category/article-1945.htm" title="Interlaken协议介绍">Interlaken协议介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-1023.htm" title="在C ++中替换后检查Word是否有效">在C ++中替换后检查Word是否有效</a></li>
                        <li class="py-2"><a href="/html/category/article-1040.htm" title="Hbase(四)：Hbase原理">Hbase(四)：Hbase原理</a></li>
                        <li class="py-2"><a href="/html/category/article-1042.htm" title="python PIL Image 图像处理基本操作实例_python">python PIL Image 图像处理基本操作实例_python</a></li>
                        <li class="py-2"><a href="/html/category/article-1025.htm" title="Spring-RabbitMQ 消费者消息确认案例实践">Spring-RabbitMQ 消费者消息确认案例实践</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">46</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                            </div>
                        </div>
                    </div>
                </section>
                                <footer class="footer">
                    <div class="copyright-section">
                        <div class="container clearfix">
                            <span class="copytext">
                                CambodiaAddress 版权所有 Powered by WordPress
                            </span>
                            <ul class="list-inline pull-right">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div><!-- .container -->
                    </div><!-- .copyright-section -->
                </footer>
                <!-- .footer -->
            </div>
            <!-- .content-wrapper -->
        </div>
        <!-- .offcanvas-pusher -->
        <div class="uc-mobile-menu uc-mobile-menu-effect">
            <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="uc-mobile-menu-close-btn">&times;</button>
            <div>
                <div>
                    <ul id="menu">
                        <li><a href="index.html">Home</a></li>
                        <li><a href="about.html">About</a></li>
                        <li><a href="services.html">Services</a></li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- .uc-mobile-menu -->
    </div>
    <!-- #main-wrapper -->
    <!-- Script -->
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/jquery-2.1.4.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/smoothscroll.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/mobile-menu.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/cambodiaaddress/scripts.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>